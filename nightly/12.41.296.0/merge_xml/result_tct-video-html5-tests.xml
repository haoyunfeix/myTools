<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E6OKCY549771" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-30_08_10_10</start_at><end_at>2015-01-30_08_14_07</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-video-html5-tests" widget="webapi-noneservice-tests">
    <set name="Video1" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_exist" purpose="Check if the vedio.addTextTrack method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_addTextTrack_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_textTracks_exist" purpose="Check if the vedio.textTracks attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_textTracks_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_textTracks_readonly" purpose="Check if the vedio.textTracks attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_textTracks_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_textTracks_type" purpose="Check if the type of vedio.textTracks attribute is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_textTracks_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_textTracks_valid_value" purpose="Check if the textTracks attribute of media elements must return an array host object for objects of type TextTrack" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_textTracks_valid_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_codecs_order_theora_vorbis" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(theora, vorbis)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_codecs_order_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentsrc_property_exists" purpose="Check if the video.currentSrc property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/currentSrc_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_reflects_auto_value" purpose="Check if video.preload reflects 'auto' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/preload_reflects_auto_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:02</start><end>2015-01-30 08:11:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_reflects_attribute_not_source_elements" purpose="Check if video.src reflect src attribute, not source child elements" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/src_reflects_attribute_not_source_elements.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:03</start><end>2015-01-30 08:11:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_play" onload_delay="10" purpose="Check that play event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:03</start><end>2015-01-30 08:11:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_load_method_exists" purpose="Check if the video.load attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_load_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:03</start><end>2015-01-30 08:11:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_buffered_exists" purpose="Check if the video.MediaController.buffered exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_buffered_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_buffered_exists: Cannot use 'in' operator to search for 'buffered' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'buffered' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_exists.html:51:39)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_currentTime_exists" purpose="Check if the video.MediaController.currentTime exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_currentTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_currentTime_exists: Cannot use 'in' operator to search for 'currentTime' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'currentTime' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_currentTime_exists.html:51:42)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_currentTime_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_defaultPlaybackRate_exists" purpose="Check if the video.MediaController.defaultPlaybackRate exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_defaultPlaybackRate_exists: Cannot use 'in' operator to search for 'defaultPlaybackRate' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'defaultPlaybackRate' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_exists.html:51:50)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_duration_exists" purpose="Check if the video.MediaController.duration exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_duration_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_duration_exists: Cannot use 'in' operator to search for 'duration' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'duration' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_exists.html:51:39)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_muted_exists" purpose="Check if the video.MediaController.muted exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_muted_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_muted_exists: Cannot use 'in' operator to search for 'muted' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'muted' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_muted_exists.html:51:36)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_muted_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_paused_exists" purpose="Check if the video.MediaController.paused exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_paused_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_paused_exists: Cannot use 'in' operator to search for 'paused' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'paused' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_exists.html:51:37)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_pause_exists" purpose="Check if the video.MediaController.pause exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_pause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_pause_exists: Cannot use 'in' operator to search for 'pause' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'pause' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_pause_exists.html:51:36)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_pause_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackRate_exists" purpose="Check if the video.MediaController.playbackRate exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:04</end><stdout>[Message] *Video Test: video_MediaController_playbackRate_exists: Cannot use 'in' operator to search for 'playbackRate' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'playbackRate' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackRate_exists.html:51:43)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackRate_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_played_exists" purpose="Check if the video.MediaController.played exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_played_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:04</start><end>2015-01-30 08:11:05</end><stdout>[Message] *Video Test: video_MediaController_played_exists: Cannot use 'in' operator to search for 'played' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'played' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_exists.html:51:37)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_play_exists" purpose="Check if the video.MediaController.play exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_play_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message] *Video Test: video_MediaController_play_exists: Cannot use 'in' operator to search for 'play' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'play' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_play_exists.html:51:35)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_play_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_seekable_exists" purpose="Check if the video.MediaController.seekable exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_seekable_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message] *Video Test: video_MediaController_seekable_exists: Cannot use 'in' operator to search for 'seekable' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'seekable' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_exists.html:51:39)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_volume_exists" purpose="Check if the video.MediaController.volume exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_volume_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message] *Video Test: video_MediaController_volume_exists: Cannot use 'in' operator to search for 'volume' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'volume' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_volume_exists.html:51:37)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_volume_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_code_exists" purpose="Check if the video.error.code exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_code_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_ABORTED_constant_exists" purpose="Check if the video.error.MEDIA_ERR_ABORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_ABORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_DECODE_constant_exists" purpose="Check if the video.error.MEDIA_ERR_DECODE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_DECODE_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_NETWORK_constant_exists" purpose="Check if the video.error.MEDIA_ERR_NETWORK exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_NETWORK_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists" purpose="Check if the video.error.MEDIA_ERR_SRC_NOT_SUPPORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_canplaythrough" purpose="Check that the canplaythrough event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:05</start><end>2015-01-30 08:11:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentsrc_empty_if_no_src" purpose="Check that the video.currentSrc returns empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:06</start><end>2015-01-30 08:11:07</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_removal_does_not_trigger_loadstart" purpose="Check that the loadstart event isnot triggered if remove video.src attribute source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/src_removal_does_not_trigger_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:07</start><end>2015-01-30 08:11:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentsrc_nonempty_after_setting_src" purpose="Check that the video.currentSrc returns non-empty if src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:08</start><end>2015-01-30 08:11:09</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentsrc_nonempty_after_adding_source_child" purpose="Check that the video.currentSrc returns non-empty if add source element" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:09</start><end>2015-01-30 08:11:09</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_playing" purpose="Check that the playing event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:09</start><end>2015-01-30 08:11:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_during_canplaythrough" purpose="Check that the video.readyState is HAVE_FUTURE_DATA if canplaythrough event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_during_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:09</start><end>2015-01-30 08:11:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_property_exists" purpose="Check if the video.readyState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:10</start><end>2015-01-30 08:11:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_canplay" purpose="Check that the canplay event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:10</start><end>2015-01-30 08:11:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_during_playing" purpose="Check that video.readyState is greater than or equal to HAVE_FUTURE_DATA if playing event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_during_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:11</start><end>2015-01-30 08:11:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_two_codecs_vp8_vorbis_implies_one_vp8" purpose="Check if the video.canPlayType has ability to play two codecs(vp8, vorbis) implies the ability to play one(vp8)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_two_implies_one_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:12</start><end>2015-01-30 08:11:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canplaytype_bogus_type" purpose="Check if the video.canPlayType supports bogus type" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_bogus_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:12</start><end>2015-01-30 08:11:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
    <set name="Video2" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_method_exists" purpose="Check if the video.pause method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:21</start><end>2015-01-30 08:11:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_method_exists" purpose="Check if the video.play method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:21</start><end>2015-01-30 08:11:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_end_exists" purpose="Check if the video.TimeRanges.end attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_end_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:21</start><end>2015-01-30 08:11:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_length_exists" purpose="Check if the video.TimeRanges.length attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_length_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:21</start><end>2015-01-30 08:11:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_start_exists" purpose="Check if the video.TimeRanges.start method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_start_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_exists" purpose="Check if the video.MediaController.playbackState attribute exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:22</end><stdout>[Message] *Video Test: video_MediaController_playbackState_exists: Cannot use 'in' operator to search for 'playbackState' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'playbackState' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_exists.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_type" purpose="Check if the type of video.MediaController.playbackState attribute is string" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:22</end><stdout>[Message] *Video Test: video_MediaController_playbackState_type: Cannot use 'in' operator to search for 'playbackState' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'playbackState' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_type.html:50:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_unpause_exists" purpose="Check if the video.MediaController.unpause method exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_unpause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:22</end><stdout>[Message] *Video Test: video_MediaController_unpause_exists: Cannot use 'in' operator to search for 'unpause' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'unpause' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_unpause_exists.html:51:38)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_unpause_exists.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_unpause_type" purpose="Check if the type of video.MediaController.unpause method is function" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_unpause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:22</end><stdout>[Message] *Video Test: video_MediaController_unpause_type: Cannot use 'in' operator to search for 'unpause' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'unpause' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_unpause_type.html:51:38)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_unpause_type.html:53:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_order_canplay_playing" purpose="Check that the canplay event is triggered before the playing event if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_order_canplay_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:22</start><end>2015-01-30 08:11:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_false_during_play" purpose="Check that video.paused is false if play event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/paused_false_during_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:23</start><end>2015-01-30 08:11:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_order_loadstart_progress" purpose="Check that the loadstart event triggered before the progress event if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_order_loadstart_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:11:24</start><end>2015-01-30 08:11:27</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_order_loadedmetadata_loadeddata" purpose="Check that the loadedmetadata event is triggered before the loadeddata event if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_order_loadedmetadata_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:27</start><end>2015-01-30 08:11:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_true_during_pause" purpose="Check that video.paused is true if pause event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/paused_true_during_pause.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:27</start><end>2015-01-30 08:11:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_order_canplay_canplaythrough" purpose="Check that the canplay event is triggered before the canplaythrough event if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_order_canplay_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:27</start><end>2015-01-30 08:11:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_two_codecs_theora_vorbis_implies_one_theora" purpose="Check if the video.canPlayType has ability to play two codecs(theora, vorbis) implies the ability to play one(theora)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_two_implies_one_3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:28</start><end>2015-01-30 08:11:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_codecs_order_avc_mp4a" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(avc1.42E01E, mp4a.40.2)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_codecs_order_3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:28</start><end>2015-01-30 08:11:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canplaytype_mp4_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video mp4" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_supported_but_no_codecs_parameter_3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:28</start><end>2015-01-30 08:11:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_codecs_order_vp8_vorbis" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(vp8, vorbis)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_codecs_order_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:28</start><end>2015-01-30 08:11:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canplaytype_application_octet_stream" purpose="Check if the video.canPlayType supports application/octet-stream" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_application_octet_stream.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:29</start><end>2015-01-30 08:11:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_progress" purpose="Check that the progress event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:11:29</start><end>2015-01-30 08:11:32</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_property_exists" purpose="Check if the video.preload property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/preload_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:32</start><end>2015-01-30 08:11:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="error_null" purpose="Check that the video.error return null if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:32</start><end>2015-01-30 08:11:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canplaytype_ogg_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video ogg" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_supported_but_no_codecs_parameter_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:32</start><end>2015-01-30 08:11:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_reflects_none_autoplay" purpose="Check that video.preload reflects 'none' value even if autoplay attribute is present" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/preload_reflects_none_autoplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:32</start><end>2015-01-30 08:11:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_loadeddata" onload_delay="10" purpose="Check that the loadeddata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:32</start><end>2015-01-30 08:11:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_loadstart" purpose="Check that the loadstart event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:33</start><end>2015-01-30 08:11:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_two_codecs_theora_vorbis_implies_one_vorbis" purpose="Check if the video.canPlayType has ability to play two codecs(theora, vorbis) implies the ability to play one(vorbis)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_two_implies_one_4.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:33</start><end>2015-01-30 08:11:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_reflects_none" purpose="Check if the video.preload reflects 'none' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/preload_reflects_none.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:33</start><end>2015-01-30 08:11:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_reflects_metadata" purpose="Check if the video.preload reflects 'metadata' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/preload_reflects_metadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:33</start><end>2015-01-30 08:11:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_initial" purpose="Check if the default video.readyState begins with HAVE_NOTHING" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:33</start><end>2015-01-30 08:11:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_during_loadedmetadata" purpose="Check that the video.readyState is greater than or equal to HAVE_FUTURE_DATA if loadedmetadata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_during_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:34</start><end>2015-01-30 08:11:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_during_canplay" onload_delay="10" purpose="Check that the video.readyState is greater than or equal to HAVE_FUTURE_DATA if canplay event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_during_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:34</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_vp8_vorbis" purpose="Check if video.canPlayType supports application/octet-stream with codecs='vp8, vorbis'" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_application_octet_stream_with_codecs_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_networkstate_initial" purpose="Check if the default value of video.networState is NETWORK_EMPTY" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/networkState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_avc_mp4a" purpose="Check if the video.canPlayType supports application/octet-stream with codecs='avc1.42E01E, mp4a.40.2'" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_application_octet_stream_with_codecs_3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_theora_vorbis" purpose="Check if the video.canPlayType supports application/octet-stream with codecs='theora, vorbis'" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_application_octet_stream_with_codecs_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_two_codecs_vp8_vorbis_implies_one_vorbis" purpose="Check if the video.canPlayType has ability to play two codecs(vp8, vorbis) implies the ability to play one(vorbis)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_two_implies_one_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="canplaytype_webm_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video webm" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_supported_but_no_codecs_parameter_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:35</start><end>2015-01-30 08:11:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readystate_during_loadeddata" purpose="Check that video.readyState is greater than or equal to HAVE_FUTURE_DATA if the loadeddata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/readyState_during_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:36</start><end>2015-01-30 08:11:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canplaytype_method_exists" purpose="Check if the video.canPlayType supports existence of canPlayType method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/canPlayType_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:36</start><end>2015-01-30 08:11:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_error_property_exists" purpose="Check if the video.error property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/error_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:36</start><end>2015-01-30 08:11:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_networkstate_property_exists" purpose="Check if the video.networkState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/networkState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:36</start><end>2015-01-30 08:11:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_reflects_no_value" purpose="Check that the video.src is empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/src_reflects_no_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:37</start><end>2015-01-30 08:11:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_event_loadedmetadata" onload_delay="10" purpose="Check that the loadedmetadata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-video-html5-tests/video/w3c/event_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:37</start><end>2015-01-30 08:11:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_base" onload_delay="15" purpose="Check that the seeking event is triggered more than once  if the video.loop is set to true" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_loop_base.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:11:37</start><end>2015-01-30 08:11:53</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_volumechange" purpose="Check that the volumechange event is triggered at the media element if the video.muted is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_muted_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:53</start><end>2015-01-30 08:11:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_volumechange" purpose="Check that the volumechange event is triggered at the media element if video.volume is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:53</start><end>2015-01-30 08:11:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_codecs_mp4-avc-mp4a" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E, mp4a.40.2)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_codecs.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:54</start><end>2015-01-30 08:11:54</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_codecs_mp4-avc" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_codecs.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:54</start><end>2015-01-30 08:11:54</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_codecs_mp4-avc-mp4v" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E, mp4a.40)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_codecs.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:11:54</start><end>2015-01-30 08:11:54</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
    </set>
    <set name="Video3" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_error_attribute_type" purpose="Check if the type of video.error is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:04</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_attribute_exists" purpose="Check if the video.src attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_attribute_type" purpose="Check if the type of video.src is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentSrc_attribute_type" purpose="Check if the type of video.currentSrc is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_EMPTY_constant_exists" purpose="Check if the video.NETWORK_EMPTY exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_EMPTY_constant_type" purpose="Check if the type of video.NETWORK_EMPTY is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_EMPTY_constant_value" purpose="Check if the video.NETWORK_EMPTY const value is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_IDLE_constant_exists" purpose="Check if the video.NETWORK_IDLE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_IDLE_constant_type" purpose="Check if the type of video.NETWORK_IDLE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_IDLE_constant_value" purpose="Check if the value of video.NETWORK_IDLE const is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_LOADING_constant_exists" purpose="Check if the video.NETWORK_LOADING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_LOADING_constant_type" purpose="Check if the type of video.NETWORK_LOADING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=16</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_LOADING_constant_value" purpose="Check if the value of video.NETWORK_LOADING const is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_NO_SOURCE_constant_exists" purpose="Check if the video.NETWORK_NO_SOURCE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=18</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_NO_SOURCE_constant_type" purpose="Check if the type of video.NETWORK_NO_SOURCE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=19</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_NETWORK_NO_SOURCE_constant_value" purpose="Check if the value of video.NETWORK_NO_SOURCE const is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=20</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_networkState_attribute_type" purpose="Check if the type of video.networkState is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=22</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_attribute_type" purpose="Check if the type of video.preload is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=25</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_exists" purpose="Check if the video.buffered attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=26</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_type" purpose="Check if the type of video.buffered is a TimeRanges object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=27</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_NOTHING_constant_exists" purpose="Check if the video.HAVE_NOTHING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=28</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_NOTHING_constant_type" purpose="Check if the type of video.HAVE_NOTHING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=29</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:05</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_NOTHING_constant_value" purpose="Check if the constant value of video.HAVE_NOTHING is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=30</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:05</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_METADATA_constant_exists" purpose="Check if the video.HAVE_METADATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=31</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_METADATA_constant_type" purpose="Check if the type of video.HAVE_METADATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=32</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_METADATA_constant_value" purpose="Check if the value of video.HAVE_METADATA is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=33</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_CURRENT_DATA_constant_exists" purpose="Check if the video.HAVE_CURRENT_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=34</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_CURRENT_DATA_constant_type" purpose="Check if the type of video.HAVE_CURRENT_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=35</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_CURRENT_DATA_constant_value" purpose="Check if the value of video.HAVE_CURRENT_DATA is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=36</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_FUTURE_DATA_constant_exists" purpose="Check if the video.HAVE_FUTURE_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=37</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_FUTURE_DATA_constant_type" purpose="Check if the type of video.HAVE_FUTURE_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=38</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_FUTURE_DATA_constant_value" purpose="Check if the value of video.HAVE_FUTURE_DATA is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=39</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_ENOUGH_DATA_constant_exists" purpose="Check if the video.HAVE_ENOUGH_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=40</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_ENOUGH_DATA_constant_type" purpose="Check if the type of  video.HAVE_ENOUGH_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=41</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_HAVE_ENOUGH_DATA_constant_value" purpose="Check if the value of video.HAVE_ENOUGH_DATA is 4" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=42</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_readyState_attribute_type" purpose="Check if the type of video.readyState attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=44</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seeking_attribute_exists" purpose="Check if the video.seeking attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=46</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seeking_attribute_type" purpose="Check if the type of video.seeking attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=47</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seeking_default_value" purpose="Check if the video.seeking attribute must initially have the value false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=48</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_attribute_exists" purpose="Check if the video.currentTime attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=49</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_attribute_type" purpose="Check if the type of video.currentTime attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=50</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_duration_attribute_exists" purpose="Check if the video.duration attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=51</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_duration_attribute_type" purpose="Check if the type of video.duration attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=52</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_attribute_exists" purpose="Check if the video.paused attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=55</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:06</start><end>2015-01-30 08:12:06</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
    </set>
    <set name="Video4" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_attribute_type" purpose="Check if the type of video.paused attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=56</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_attribute_default_value" purpose="Check if the video.paused attribute must initially be true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=57</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_attribute_exists" purpose="Check if the video.defaultPlaybackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=58</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_attribute_type" purpose="Check if the type of video.defaultPlaybackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=59</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_attribute_exists" purpose="Check if the video.playbackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=60</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_attribute_type" purpose="Check if the type of video.playbackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=61</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_played_attribute_exists" purpose="Check if the type of video.played attribute is [object TimeRanges]" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=62</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_played_attribute_type" purpose="Check if the type of attribute video.played is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=63</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seekable_attribute_exists" purpose="Check if the video.seekable attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=64</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seekable_attribute_type" purpose="Check if the type of video.seekable attribute is TimeRanges object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=65</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:16</start><end>2015-01-30 08:12:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_attribute_exists" purpose="Check if  the video.ended attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=66</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_attribute_type" purpose="Check if the type of video.ended is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=67</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_default_value" purpose="Check if the default value of attribute video.ended is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=68</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_attribute_exists" purpose="Check if the video.autoplay attritbute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=69</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_attribute_type" purpose="Check if the type of video.autoplay attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=70</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_default_value" purpose="Check if the video.autoplay attribute default is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=71</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_attribute_exists" purpose="Check if the video.loop attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=72</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_attribute_type" purpose="Check if the type of video.loop is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=73</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_attribute_initial" purpose="Check if the video.loop initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=74</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_mediaGroup_attribute_exists" purpose="Check if the video.mediaGroup exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=75</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message]assert_true: mediaGroup attribute in video element expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_mediaGroup_attribute_type" purpose="Check if the type of video.mediaGroup is string" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=76</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message]assert_equals: mediaGroup attribute of type expected "string" but got "undefined"</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controller_attribute_exists" purpose="Check if the video.controller attribute exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=77</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message]assert_true: controller attribute in video element expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controller_attribute_type" purpose="Check if the type of video.controller is object" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=78</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message]assert_equals: controller attribute of type expected "object" but got "undefined"</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_attribute_exists" purpose="Check if the video.controls attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=79</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_attribute_type" purpose="Check if the type of video.controls is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=80</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_attribute_exists" purpose="Check if the video.volume attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=82</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_attribute_type" purpose="Check if the type of video.volume attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=83</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_attribute_exists" purpose="Check if the video.muted exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=84</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_attribute_type" purpose="Check if the type of video.muted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=85</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_attribute_initial" purpose="Check if the video.muted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=86</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_attribute_exists" purpose="Check if the video.defaultMuted attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=87</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_attribute_type" purpose="Check if the type of video.defaultMuted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=88</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_attribute_initial" purpose="Check if the video.defaultMuted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=89</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_attribute_exists" purpose="Check if the video.width attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=90</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_attribute_type" purpose="Check if the type of video.width is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=91</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_initial" purpose="Check if the video.width intial value is a valid non-negative integer in the range 0 to 2147483647 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=92</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_attribute_exists" purpose="Check if the video.height attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=93</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_attribute_type" purpose="Check if the type of video.height is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=94</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_initial" purpose="Check if the video.height intial value is a valid non-negative integer in the range 0 to 2147483647 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=95</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoWidth_attribute_exists" purpose="Check if the video.videoWidth attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=96</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoWidth_attribute_type" purpose="Check if the type of video.videoWidth is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=97</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoWidth_default_value" purpose="Check if the default value of video.videoWidth is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=98</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeight_attribute_exists" purpose="Check if the video.videoHeight attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=99</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:17</start><end>2015-01-30 08:12:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeight_attribute_type" purpose="Check if the type of video.videoHihgt is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=100</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:18</start><end>2015-01-30 08:12:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeight_default_value" purpose="Check if the default value of video.videoHeight is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=101</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:18</start><end>2015-01-30 08:12:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_poster_attribute_exists" purpose="Check if the video.poster exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=102</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:18</start><end>2015-01-30 08:12:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_poster_attribute_type" purpose="Check if the type of video.poster is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_attributes.html?total_num=103&amp;amp;locator_key=id&amp;amp;value=103</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:18</start><end>2015-01-30 08:12:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
    </set>
    <set name="Video5" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_true_controls_present" purpose="Check that the video.controls returns true if the controls attribute is present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:27</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_reflects_false" purpose="Check if the video.controls can be set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_reflects_true" purpose="Check if the video.controls can be set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_true_muted_present" purpose="Check that the video.defaultMuted returns true if the muted attribute is present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_no_dynamic_effect_muted" purpose="Check that the media.defaultMuted returns true if the muted attribute is set to false and the muted attribute is present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_false_muted_absent" purpose="Check that the video.defaultMuted returns false if the muted attribute is absent in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_no_dynamic_effect" purpose="Check that the video.defaultMuted returns false if the muted attribute is set to true and the muted attribute is asent in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_zero" purpose="Check that the video.height returns zero if the height attribute is set to zero" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_max" purpose="Check that the video.height returns maximum non-negative integer if the height attribute is set to the maximum non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_integer" purpose="Check that the video.height returns the integer number if the height attribute is set to a valid non-negative integer in the range 0 to 2147483647" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_float" purpose="Check that the video.height returns a shortest integer number if the height attribute is set to a floating-point number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_upper" purpose="Check that the video.height returns zero if the height attribute is set to a number greater than the maximum non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_negative" purpose="Check that the video.height returns zero if the height attribute is set to a negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_height_reflects_invalid" purpose="Check that the video.height returns zero if the height attribute is set to an invlid non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_height_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_true_loop_present" purpose="Check that the video.loop returns true if the loop attribute is present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_reflects_false" purpose="Check if the video.loop can be set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_reflects_true" purpose="Check if the video.loop can be set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_present_get" purpose="Check that video.muted returns true if the muted attribute is present in the video element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:28</start><end>2015-01-30 08:12:29</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_notpresent_get" purpose="Check that video.muted returns false if the muted attribute is not present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_present_set" purpose="Check if the video.muted can be set if the muted attribute is present in the video element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message]assert_equals: expected true but got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_notpresent_set" purpose="Check if the video.muted can be set if the muted attribute is not present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_load_notupdate" purpose="Check if the load algorithm does not update the muted IDL attribute to match the content attribute" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_script_get1" purpose="Check that video.muted can be get (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=16</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_script_set1" purpose="Check that video.muted can be set (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_script_get2" purpose="Check that video.muted can be get with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=18</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_script_set2" purpose="Check that video.muted can be set with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=19</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_innerHTML_get" purpose="Check that video.muted can be get with muted='' (innerHTML-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=20</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_muted_write_get" purpose="Check that video.muted can be get with muted='' (document.write-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=21</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_initial" purpose="Check if the intial value of the video.volume is in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_normal" purpose="Check if user agent is able to set video.volume with new value in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_silent" purpose="Check if user agent is able to set video.volume with new value 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_loudest" purpose="Check if user agent is able to set video.volume with new value 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_exception_lower" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set video.volume with new value less than 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_volume_exception_upper" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set video.volume with new value more than 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_zero" purpose="Check that the video.width returns zero if the width attribute is set to zero" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_max" purpose="Check that the video.width returns maximum non-negative integer if the width attribute is set to the maximum non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_integer" purpose="Check that the video.width returns the integer number if the width attribute is set to a valid non-negative integer in the range 0 to 2147483647" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_float" purpose="Check that the video.width returns a shortest integer number if the width attribute is set to a floating-point number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_upper" purpose="Check that the video.width returns zero if the width attribute is set to a number greater than the maximum non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_negative" purpose="Check that the video.width returns zero if the width attribute is set to a negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_width_reflects_invalid" purpose="Check that the video.width returns zero if the width attribute is set to an invlid non-negative integer" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/video_width_reflect.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_subtitles" purpose="Check if the video.addTextTrack invoked successfully when the first arg is subtitles" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:29</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_captions" purpose="Check if the video.addTextTrack invoked successfully when the first arg is captions" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_descriptions" purpose="Check if the video.addTextTrack invoked successfully when the first arg is descriptions" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_chapters" purpose="Check if the video.addTextTrack invoked successfully when the first arg is chapters" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_metadata" purpose="Check if the video.addTextTrack invoked successfully when the first arg is metadata" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_three_argument" purpose="Check if the video.addTextTrack invoked successfully when it has three argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_two_argument" purpose="Check if the video.addTextTrack invoked successfully when the third arg is ommited" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/addTextTrack.html?total_num=11&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_textTracks" purpose="Check if the video.textTracks attribute is valid" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/textTracks.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:30</start><end>2015-01-30 08:12:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
    <set name="video6" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_less_than_zero" purpose="Check if user agent displays correctly when browser does not support media elements (Seeking to a value less than 'startTime' seeks to 'startTime')" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentTime_less_than_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:41</start><end>2015-01-30 08:12:43</end><stdout>[Message] *Video Test: video_currentTime_less_than_zero: assert_equals: The value of media.currentTime expected (undefined) undefined but got (number) 0</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_zero_default_state" purpose="Check that a video loads the default pause state is true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_zero_default_state.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:43</start><end>2015-01-30 08:12:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_not_effect_by_controller" purpose="Check if video.defaultPlaybackRate attributes have no effect when the media element has a current media controller" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultPlaybackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:12:43</start><end>2015-01-30 08:12:46</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_not_effect_by_controller" purpose="Check if video.playbackRate attributes have no effect when the media element has a current media controller" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_playbackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:12:46</start><end>2015-01-30 08:12:49</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_end_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the video.TimeRanges.end method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_end_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:49</start><end>2015-01-30 08:12:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_start_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the video.TimeRanges.start method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_start_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:49</start><end>2015-01-30 08:12:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeght_media_resource_available" purpose="Check if video.videoheight return the intrinsic height of the video when have a media resource" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_videoHeght_media_resource_available.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:49</start><end>2015-01-30 08:12:50</end><stdout>[Message] *video.videoheight return the intrinsic height of the video when have a media resource: assert_true: video.videoheight return the intrinsic height expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeight_readState_HAVE_NOTHING" purpose="Check if readyState attribute is HAVE_NOTHING, then video.videoHeight must return 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_videoHeight_readState_HAVE_NOTHING.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:50</start><end>2015-01-30 08:12:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoWidth_media_resource_available" purpose="Check if video.videoWidth return the intrinsic width of the video when have a media resource" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_videoWidth_media_resource_available.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:50</start><end>2015-01-30 08:12:51</end><stdout>[Message] *video.videoWidth return the intrinsic width of the video when have a media resource: assert_true: video.videoWidth return the intrinsic width expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_no_argument" purpose="Check if video.canPlayType return empty string if not have arguments" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:12:51</start><end>2015-01-30 08:12:51</end><stdout>[Message] *Video Test: video_canPlayType_method_maybe: Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present.(stack: TypeError: Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present.\n    at TypeError (native)\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/support/mediaelement.js:246:30)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at canPlayType_no_argument (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/support/mediaelement.js:244:5)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_canPlayType_no_argument.html:50:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_element" purpose="Check if element returns same video element twice" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_element.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:51</start><end>2015-01-30 08:12:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_ogg_theora_vorbis" purpose="Check if user agent is able to pause playing video playback for stream ogg theora vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_ogg_theora_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:51</start><end>2015-01-30 08:12:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_webm_vp8_vorbis" purpose="Check if user agent is able to pause playing video playback for stream webm vp8 vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_webm_vp8_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:12:51</start><end>2015-01-30 08:12:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_ogg_theora_vorbis" purpose="Check if user agent is able to play video stream ogg theora vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_ogg_theora_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:12:51</start><end>2015-01-30 08:12:54</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_webm_vp8_vorbis" purpose="Check if user agent is able to play video stream webm vp8 vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_webm_vp8_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:12:54</start><end>2015-01-30 08:12:58</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_resume_ogg_theora_vorbis" purpose="Check if user agent is able to resume paused video playback for stream ogg theora vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_resume_ogg_theora_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:12:58</start><end>2015-01-30 08:13:01</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_resume_webm_vp8_vorbis" purpose="Check if user agent is able to resume paused video playback for stream webm vp8 vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_resume_webm_vp8_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:01</start><end>2015-01-30 08:13:04</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seek_ogg_theora_vorbis" purpose="Check if user agent is able to seek video playback with currentTime attribute for stream ogg theora vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seek_ogg_theora_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:04</start><end>2015-01-30 08:13:07</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seek_webm_vp8_vorbis" purpose="Check if user agent is able to seek video playback with currentTime attribute for stream webm vp8 vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seek_webm_vp8_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:07</start><end>2015-01-30 08:13:10</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_stop_ogg_theora_vorbis" purpose="Check if user agent is able to stop video playback for stream ogg theora vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_stop_ogg_theora_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:10</start><end>2015-01-30 08:13:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_stop_webm_vp8_vorbis" purpose="Check if user agent is able to stop video playback for stream webm vp8 vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_stop_webm_vp8_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:11</start><end>2015-01-30 08:13:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_mp4_h264_aac" purpose="Check if the user agent supports mp4-h264-acc video playing, pause" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_mp4_h264_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:12</start><end>2015-01-30 08:13:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_mp4_h264_aac" purpose="Check if the user agent supports mp4-h264-acc video playing" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_mp4_h264_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:14</start><end>2015-01-30 08:13:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_3gp_h263_aac" purpose="Check if the video element can pause the H.263 decoding format video file" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_3gp_h263_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:14</start><end>2015-01-30 08:13:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_3gp_h263_aac" purpose="Check if the video element can play the H.263 decoding format video file" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_3gp_h263_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:17</start><end>2015-01-30 08:13:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_3gp_mpeg4_amr" purpose="Check if the video element can pause the MPEG-4 part 2 decoding format video file" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_3gp_mpeg4_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:17</start><end>2015-01-30 08:13:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_3gp_mpeg4_amr" purpose="Check if the video element can play the MPEG-4 part 2 decoding format video file" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_3gp_mpeg4_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:19</start><end>2015-01-30 08:13:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_addTextTrack_type" purpose="Check if the vedio.addTextTrack attribute is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_addTextTrack_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:20</start><end>2015-01-30 08:13:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_empty_string" purpose="Check if the attribute video.autoplay is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_autoplay_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:20</start><end>2015-01-30 08:13:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_null" purpose="Check if the value of attribute of video.autoplay is false when you set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_autoplay_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:20</start><end>2015-01-30 08:13:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_onloadedmetadata" purpose="Check if video.autoplay attribute invoked,then video.onloadedmetadata() function triggered" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_autoplay_onloadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:20</start><end>2015-01-30 08:13:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_autoplay_true_autoplay_present" purpose="Check if video.autoplay returns true when the controls attribute is present in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_autoplay_true_autoplay_present.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:21</start><end>2015-01-30 08:13:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_end_type" purpose="Check if the type of video.buffered.end is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_buffered_end_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:21</start><end>2015-01-30 08:13:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_length_default_value" purpose="Check if the video.buffered length is zero,typically this will be a single range anchored at the zero point" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_buffered_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:21</start><end>2015-01-30 08:13:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_readonly" purpose="Check if the video.buffered attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:21</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_buffered_start_type" purpose="Check if the type of video.buffered.start is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_buffered_start_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_empty_string" purpose="Check if video.canPlayType return empty string if arguments is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_method_type" purpose="Check if the type of video.canPlayType is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_canPlayType_null" purpose="Check if video.canPlayType return empty string if arguments is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_canPlayType_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controller_default_value" purpose="Check if the defaut value of video.controller is null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_controller_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message] *Check if video.canPlayType return empty string if arguments is null: assert_equals: the defaut value of media.controller is null expected (object) null but got (undefined) undefined</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controller_MediaControllerl" purpose="Check if the attribute video.controller is not null when set it an object MediaController" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_controller_MediaControllerl.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message] *Check if the defaut value of video.controller is null: MediaController is not defined(stack: ReferenceError: MediaController is not defined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/support/mediaelement.js:583:32)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at controls_MediaController (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/support/mediaelement.js:586:8)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_controller_MediaControllerl.html:50:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_empty_string" purpose="Check if the value of attribute video.controls is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_controls_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_false_controls_absent" purpose="Check if video.controls returns false when the controls attribute is absent in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_controls_false_controls_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_controls_null" purpose="Check if the value of attribute video.controls is false when set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_controls_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:22</start><end>2015-01-30 08:13:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentSrc_readonly" purpose="Check if the video.currentSrc attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentSrc_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:23</start><end>2015-01-30 08:13:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentSrc_src_null" purpose="Check if video.currentSrc is empty string when set the video.src null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentSrc_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:23</start><end>2015-01-30 08:13:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_basic" purpose="Check if the video.currentTime attribute return the current playback position it was set to 10" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentTime_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:23</start><end>2015-01-30 08:13:23</end><stdout>[Message] *Video Test: video_currentTime_basic: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_value_duration" purpose="Check if the video.currentTime attribute return the end playback position it was set to duration" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentTime_value_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:23</start><end>2015-01-30 08:13:24</end><stdout>[Message] *Video Test: video_currentTime_value_duration: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_value_later_end" purpose="Check if the video.currentTime attribute return the end playback position it was set to later than the end of the media resource" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentTime_value_later_end.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:24</start><end>2015-01-30 08:13:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_currentTime_value_null" purpose="Check if the video.currentTime attribute on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_currentTime_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:25</start><end>2015-01-30 08:13:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_empty_string" purpose="Check if the value of the attribute video.defaultMuted set empty string,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultMuted_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:25</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultMuted_null" purpose="Check if the value of the attribute video.defaultMuted set null,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultMuted_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_basic" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0.5 it was set to 0.5" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultPlaybackRate_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_default_value" purpose="Check if the video.defaultPlaybackRate attribute return 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultPlaybackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_value_null" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultPlaybackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_defaultPlaybackRate_value_zero" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_defaultPlaybackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_duration_attribute_readonly" purpose="Check if the video.duration attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_duration_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_duration_attribute_value_resource" purpose="Check if the video.duration attribute return the time of the end of the media resource" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_duration_attribute_value_resource.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:26</start><end>2015-01-30 08:13:27</end><stdout>[Message] *Video Test: video_duration_attribute_value_resource: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_attribute_readonly" purpose="Check if video.ended is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ended_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:27</start><end>2015-01-30 08:13:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_canplaythrough" purpose="Check if the attribute video.ended should be false during canplaythrough event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ended_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:27</start><end>2015-01-30 08:13:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_currentTime_duration" purpose="Check if the value of attribute video.ended is true when set currentTime video.durations" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ended_currentTime_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:28</start><end>2015-01-30 08:13:28</end><stdout>[Message] *Video Test: video_ended_currentTime_duration: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_loaddata" purpose="Check if the value of attribute video.ended is false during loadeddata event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ended_loaddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:28</start><end>2015-01-30 08:13:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ended_playing" purpose="Check if the value of attribute video.ended is false during playing event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ended_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:29</start><end>2015-01-30 08:13:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_error_readonly" purpose="Check if the video.error attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_error_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_load_method" purpose="Check if video.load can start selecting and loading a new media resource from scratch" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_load_method.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_load_method_type" purpose="Check if the type of video.load is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_load_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_empty_string" purpose="Check if the value of the attribute video.loop is false if set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_loop_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_false_loop_absent" purpose="Check if video.loop returns false when the loop attribute is absent in the video element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_loop_false_loop_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_loop_null" purpose="Check if the value of the attribute video.loop is false if set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_loop_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_buffered_readonly" purpose="Check if video.MediaController.buffered is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:30</end><stdout>[Message] *video.MediaController.buffered is readonly: Cannot set property 'buffered' of undefined(stack: TypeError: Cannot set property 'buffered' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_readonly.html:51:33)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_readonly.html:48:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_buffered_type" purpose="Check if video.MediaController.buffered is of type object" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_buffered_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:30</start><end>2015-01-30 08:13:31</end><stdout>[Message] *Video Test: video_MediaController_buffered_type: Cannot read property 'buffered' of undefined(stack: TypeError: Cannot read property 'buffered' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_buffered_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_oncanplaythrough_event" purpose="Check if video.controller.canplaythrough event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_oncanplaythrough_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:31</start><end>2015-01-30 08:13:34</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_oncanplay_event" purpose="Check if video.controller.canplay event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_oncanplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:34</start><end>2015-01-30 08:13:37</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_currentTime_type" purpose="Check if video.MediaController.currentTime is of type number" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_currentTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:37</start><end>2015-01-30 08:13:37</end><stdout>[Message] *Video Test: video_MediaController_currentTime_type: Cannot read property 'currentTime' of undefined(stack: TypeError: Cannot read property 'currentTime' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_currentTime_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_currentTime_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_defaultPlaybackRate_type" purpose="Check if video.MediaController.defaultPlaybackRate is of type number" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:37</start><end>2015-01-30 08:13:37</end><stdout>[Message] *Video Test: video_MediaController_defaultPlaybackRate_type: Cannot read property 'defaultPlaybackRate' of undefined(stack: TypeError: Cannot read property 'defaultPlaybackRate' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_defaultPlaybackRate_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_duration_readonly" purpose="Check if video.MediaController.duration is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_duration_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:37</start><end>2015-01-30 08:13:37</end><stdout>[Message] *video.MediaController.duration is readonly: Cannot set property 'duration' of undefined(stack: TypeError: Cannot set property 'duration' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_readonly.html:51:33)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_readonly.html:48:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_duration_type" purpose="Check if video.MediaController.duration is of type number" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_duration_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:37</start><end>2015-01-30 08:13:37</end><stdout>[Message] *Video Test: video_MediaController_duration_type: Cannot read property 'duration' of undefined(stack: TypeError: Cannot read property 'duration' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_duration_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onemptied_event" purpose="Check if video.controller.emptied event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:37</start><end>2015-01-30 08:13:41</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onloadeddata_event" purpose="Check if video.controller.loadeddata event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onloadeddata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:41</start><end>2015-01-30 08:13:44</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onloadedmetadata_event" purpose="Check if video.controller.loadedmetadata event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onloadedmetadata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:44</start><end>2015-01-30 08:13:47</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_muted_type" purpose="Check if video.MediaController.muted is of type boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_muted_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:47</start><end>2015-01-30 08:13:47</end><stdout>[Message] *Video Test: video_MediaController_muted_type: Cannot read property 'muted' of undefined(stack: TypeError: Cannot read property 'muted' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_muted_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_muted_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_paused_readonly" purpose="Check if video.MediaController.paused is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_paused_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:47</start><end>2015-01-30 08:13:47</end><stdout>[Message] *video.MediaController.paused is readonly: Cannot set property 'paused' of undefined(stack: TypeError: Cannot set property 'paused' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_readonly.html:51:31)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_readonly.html:48:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_paused_type" purpose="Check if video.MediaController.paused is of type boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_paused_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:47</start><end>2015-01-30 08:13:47</end><stdout>[Message] *Video Test: video_MediaController_paused_type: Cannot read property 'paused' of undefined(stack: TypeError: Cannot read property 'paused' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_paused_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onpause_event" purpose="Check if video.controller.pause event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:47</start><end>2015-01-30 08:13:50</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_pause_type" purpose="Check if video.MediaController.pause is of type function" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_pause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:50</start><end>2015-01-30 08:13:50</end><stdout>[Message] *Video Test: video_MediaController_pause_type: Cannot read property 'pause' of undefined(stack: TypeError: Cannot read property 'pause' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_pause_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_pause_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackRate_type" purpose="Check if video.MediaController.playbackRate is of type number" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:51</start><end>2015-01-30 08:13:51</end><stdout>[Message] *Video Test: video_MediaController_playbackRate_type: Cannot read property 'playbackRate' of undefined(stack: TypeError: Cannot read property 'playbackRate' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackRate_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackRate_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_played_readonly" purpose="Check if video.MediaController.played is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_played_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:51</start><end>2015-01-30 08:13:51</end><stdout>[Message] *video.MediaController.played is readonly: Cannot set property 'played' of undefined(stack: TypeError: Cannot set property 'played' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_readonly.html:51:31)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_readonly.html:48:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_played_type" purpose="Check if video.MediaController.played is of type object" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_played_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:51</start><end>2015-01-30 08:13:51</end><stdout>[Message] *Video Test: video_MediaController_played_type: Cannot read property 'played' of undefined(stack: TypeError: Cannot read property 'played' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_played_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onplaying_event" purpose="Check if video.controller.onplaying is exists" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onplaying_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:51</start><end>2015-01-30 08:13:54</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onplay_event" purpose="Check if video.controller.onplay occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:54</start><end>2015-01-30 08:13:57</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_play_type" purpose="Check if video.MediaController.play is of type function" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_play_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:13:57</start><end>2015-01-30 08:13:57</end><stdout>[Message] *Video Test: video_MediaController_play_type: Cannot read property 'play' of undefined(stack: TypeError: Cannot read property 'play' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_play_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_play_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onratechange_event" purpose="Check if video.controller.onratechange is exists" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onratechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:13:57</start><end>2015-01-30 08:14:00</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_seekable_readonly" purpose="Check if video.MediaController.seekable is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_seekable_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:00</start><end>2015-01-30 08:14:01</end><stdout>[Message] *video.MediaController.seekable is readonly: Cannot set property 'seekable' of undefined(stack: TypeError: Cannot set property 'seekable' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_readonly.html:51:33)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_readonly.html:48:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_seekable_type" purpose="Check if video.MediaController.seekable is of type object" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_seekable_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:01</start><end>2015-01-30 08:14:01</end><stdout>[Message] *Video Test: video_MediaController_seekable_type: Cannot read property 'seekable' of undefined(stack: TypeError: Cannot read property 'seekable' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_seekable_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onvolumechange_event" purpose="Check if video.controller.onvolumechange is exists" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onvolumechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:01</start><end>2015-01-30 08:14:04</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_volume_type" purpose="Check if video.MediaController.volume is of type number" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_volume_type.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:04</start><end>2015-01-30 08:14:04</end><stdout>[Message] *Video Test: video_MediaController_volume_type: Cannot read property 'volume' of undefined(stack: TypeError: Cannot read property 'volume' of undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_volume_type.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_volume_type.html:52:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_onwaiting_event" purpose="Check if video.controller.onwaiting occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:04</start><end>2015-01-30 08:14:07</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_code_readonly" purpose="Check if video.error.code is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_code_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:07</start><end>2015-01-30 08:14:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_code_type" purpose="Check if the type of video.error.code is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_code_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:07</start><end>2015-01-30 08:14:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_ABORTED_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_ABORTED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_ABORTED_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:07</start><end>2015-01-30 08:14:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_ABORTED_constant_value" purpose="Check if video.error.MEDIA_ERR_ABORTED const value is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_ABORTED_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_DECODE_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_DECODE is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_DECODE_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_DECODE_constant_value" purpose="Check if video.error.MEDIA_ERR_DECODE const value is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_DECODE_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_NETWORK_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_NETWORK is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_NETWORK_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaError_MEDIA_ERR_NETWORK_constant_value" purpose="Check if video.error.MEDIA_ERR_NETWORK const value is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaError_MEDIA_ERR_NETWORK_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_mediaGroup_empty_string" purpose="Check if the value of attribute of video.mediaGroup is empty string when you set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_mediaGroup_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_mediaGroup_null" purpose="Check if the value of attribute video.mediaGroup when set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_mediaGroup_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_mediaGroup_valid_value" purpose="Check if the value of video.mediaGroup is valid" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_mediaGroup_valid_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_networkState_readonly" purpose="Check if the video.networkState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_networkState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:08</start><end>2015-01-30 08:14:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ondurationchange_event" purpose="Check if the event video.ondurationchange occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ondurationchange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:09</start><end>2015-01-30 08:14:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onemptied_event" purpose="Check if the event video.onemptied occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:09</start><end>2015-01-30 08:14:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onended_event" purpose="Check if the event video.onended occurs when media resource is end" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onended_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:09</start><end>2015-01-30 08:14:12</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onerror_event" purpose="Check if the event video.onerror occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onerror_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:12</start><end>2015-01-30 08:14:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onpause_event" purpose="Check if the event video.onpause occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:13</start><end>2015-01-30 08:14:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onratechange_event_defaultPlaybackRate" purpose="Check if the event video.onratechange occurs when defaultPlaybackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onratechange_event_defaultPlaybackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:14</start><end>2015-01-30 08:14:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onratechange_event_playbackRate" purpose="Check if the event video.onratechange occurs when playbackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onratechange_event_playbackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:15</start><end>2015-01-30 08:14:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onseeking_event" purpose="Check if the event video.onseeking occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onseeking_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:16</start><end>2015-01-30 08:14:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_ontimeupdate_event" purpose="Check if the event video.ontimeupdate occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_ontimeupdate_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:16</start><end>2015-01-30 08:14:19</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onvolumechange_event_muted" purpose="Check if the event video.onvolumechange occurs when muted changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onvolumechange_event_muted.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:19</start><end>2015-01-30 08:14:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onvolumechange_event_volume" purpose="Check if the event video.onvolumechange occurs when volume changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onvolumechange_event_volume.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:20</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_onwaiting_event" purpose="Check if the event video.onwaiting occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_paused_attribute_readonly" purpose="Check if the video.paused attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_paused_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_pause_method_type" purpose="Check if video.pause is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_pause_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_value_null" purpose="Check if the video.playbackRate attribute return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_playbackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_value_zero" purpose="Check if the video.playbackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_playbackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_played_attribute_readonly" purpose="Check if video.played attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_played_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_played_length_default_value" purpose="Check if default value of the attribute video.played.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_played_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_play_method_type" purpose="Check if video.play method is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_play_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:21</start><end>2015-01-30 08:14:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_preload_auto" purpose="Check if video.preload can be set to 'auto'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_preload_auto.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:22</start><end>2015-01-30 08:14:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seekable_attribute_readonly" purpose="Check if video.seekable attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seekable_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:22</start><end>2015-01-30 08:14:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seekable_length_default_value" purpose="Check if the default value of attribute video.seekable.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seekable_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:22</start><end>2015-01-30 08:14:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seeking_attribute_readonly" purpose="Check if the video.seeking attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seeking_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:22</start><end>2015-01-30 08:14:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_seeking_value_true" purpose="Check if the video.seeking attribute returns true if the user agent is currently seeking" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_seeking_value_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:22</start><end>2015-01-30 08:14:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_basic" purpose="Check if video.src can get src attibute value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_src_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:23</start><end>2015-01-30 08:14:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_src_null" purpose="Check if video.src return empty string when you set it null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:23</start><end>2015-01-30 08:14:23</end><stdout>[Message] *Video Test: video_src_null: assert_true: Video Test: video_src_null expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_end" purpose="Check if must return the position of the video.TimeRanges.end of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_end.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:23</start><end>2015-01-30 08:14:26</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_length_readonly" purpose="Check if video.TimeRanges.length is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_length_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:26</start><end>2015-01-30 08:14:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_length_type" purpose="Check if video.TimeRanges.length is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_length_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:26</start><end>2015-01-30 08:14:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_TimeRanges_start" purpose="Check if must return the position of the video.TimeRanges.start of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_TimeRanges_start.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:26</start><end>2015-01-30 08:14:29</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoHeight_readonly" purpose="Check if the videoHeight attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_videoHeight_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:29</start><end>2015-01-30 08:14:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_videoWidth_readonly" purpose="Check if the videoWidth attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_videoWidth_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:30</start><end>2015-01-30 08:14:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_ended" purpose="Check if video.controller.onended event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:30</start><end>2015-01-30 08:14:33</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_ended" purpose="Check if video.MediaController.playbackState attribute is ended" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:33</start><end>2015-01-30 08:14:36</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_playing" purpose="Check if video.MediaController.playbackState attribute is playing" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:36</start><end>2015-01-30 08:14:39</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_readonly" purpose="Check if video.MediaController.playbackState attribute is readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:39</start><end>2015-01-30 08:14:39</end><stdout>[Message] *Video Test: video_MediaController_playbackState_readonly: Cannot use 'in' operator to search for 'playbackState' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'playbackState' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_readonly.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_readonly.html:54:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_playbackState_waiting" purpose="Check if video.MediaController.playbackState attribute is waiting" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_playbackState_waiting.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-30 08:14:39</start><end>2015-01-30 08:14:39</end><stdout>[Message] *Video Test: video_MediaController_playbackState_waiting: Cannot use 'in' operator to search for 'playbackState' in undefined(stack: TypeError: Cannot use 'in' operator to search for 'playbackState' in undefined\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_waiting.html:51:44)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/resources/testharness.js:428:18)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-video-html5-tests/video/video_MediaController_playbackState_waiting.html:53:20)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_MediaController_unpause_base" purpose="Check if video.MediaController.unpause method, calling unpause method paused false callback play event" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/video_MediaController_unpause_base.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-30 08:14:39</start><end>2015-01-30 08:14:43</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_duration_attribute_value_NaN" purpose="Check if the video.duration attribute return the Not-a-Number (NaN) value if no media data is available" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/duration.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:43</start><end>2015-01-30 08:14:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_default_value" onload_delay="20" purpose="Check if the video.playbackRate attribute value is 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/playbackRate.html?total_num=2&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:43</start><end>2015-01-30 08:14:43</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The video element (Partial)" execution_type="auto" id="video_playbackRate_basic" onload_delay="20" purpose="Check if the video.playbackRate attribute that on getting it must return 2.0 it was set to 2.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-video-html5-tests/video/w3c/playbackRate.html?total_num=2&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-30 08:14:43</start><end>2015-01-30 08:14:43</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      </set>
  </suite>
</test_definition>
