<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E5OKCYC13257" device_model="" device_name="N/A" host="Linux-3.2.0-23-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.14" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-02-28_17_58_56</start_at><end_at>2015-02-28_18_03_19</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-websocket-w3c-tests" widget="webapi-service-tests">
    <set name="WebSocket" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_close_code" purpose="Check the value of CloseEvent.code equals close method value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_close_code.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:28</start><end>2015-02-28 17:58:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_close_reason" purpose="Check the value of CloseEvent.reason equals close method value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_close_reason.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:28</start><end>2015-02-28 17:58:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_code_exists" purpose="Check if CloseEvent.code attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_code_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:29</start><end>2015-02-28 17:58:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_code_readonly" purpose="Check if CloseEvent.code attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_code_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:30</start><end>2015-02-28 17:58:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_code_type" purpose="Check if the type of CloseEvent.code is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_code_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:30</start><end>2015-02-28 17:58:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_reason_exists" purpose="Check if CloseEvent.reason attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_reason_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:31</start><end>2015-02-28 17:58:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_reason_readonly" purpose="Check if CloseEvent.reason attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_reason_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:32</start><end>2015-02-28 17:58:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_reason_type" purpose="Check if the type of CloseEvent.reason is 'DOMString'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_reason_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:32</start><end>2015-02-28 17:58:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_wasClean_exists" purpose="Check if CloseEvent.wasClean attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_wasClean_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:33</start><end>2015-02-28 17:58:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_wasClean_false" purpose="Check if the initialized value of CloseEvent.wasclean equals false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_wasClean_false.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:34</start><end>2015-02-28 17:58:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_wasClean_readonly" purpose="Check if CloseEvent. attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_wasClean_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:34</start><end>2015-02-28 17:58:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_wasClean_true" onload_delay="10" purpose="Check if the value of CloseEvent.wasclean equals true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_wasClean_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:35</start><end>2015-02-28 17:58:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_wasClean_type" purpose="Check if the type of CloseEvent.wasClean is 'boolean'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_wasClean_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:35</start><end>2015-02-28 17:58:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_binaryType_exists" purpose="Check if WebSocket.binaryType attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_binaryType_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:36</start><end>2015-02-28 17:58:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="BinaryType_wrong_value" onload_delay="10" purpose="Check if Secure WebSocket created when the binaryType is set to something other than blob/arraybuffer" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/binaryType-wrong-value.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 17:58:36</start><end>2015-02-28 17:58:46</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_exists" purpose="Check if WebSocket.bufferedAmount attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:46</start><end>2015-02-28 17:58:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_nosend" purpose="Check if the websocket doesn't send message to server" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_nosend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:46</start><end>2015-02-28 17:58:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_readonly" purpose="Check if WebSocket.bufferedAmount attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:46</start><end>2015-02-28 17:58:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send_ArrayBuffer" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends ArrayBuffer 1024 bytes of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send_ArrayBuffer.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:46</start><end>2015-02-28 17:58:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send_ArrayBuffer_2048" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends ArrayBuffer 2048 bytes of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send_ArrayBuffer_2048.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:47</start><end>2015-02-28 17:58:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send_blob" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends blob data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send_blob.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:48</start><end>2015-02-28 17:58:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send_blob_2000" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends blob 2000 data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send_blob_2000.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:48</start><end>2015-02-28 17:58:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send10000char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 10000 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send10000char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:49</start><end>2015-02-28 17:58:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send1000char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 1000 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send1000char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:50</start><end>2015-02-28 17:58:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send100char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 100 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send100char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:50</start><end>2015-02-28 17:58:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send10char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 10 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send10char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:51</start><end>2015-02-28 17:58:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send200char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 200 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send200char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:52</start><end>2015-02-28 17:58:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_send500char" onload_delay="10" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 500 char of data successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_send500char.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:52</start><end>2015-02-28 17:58:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_type" purpose="Check if type of WebSocket.bufferedAmount is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:53</start><end>2015-02-28 17:58:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_0" onload_delay="10" purpose="Check if InvalidAccessError exception thrown when WebSocket.close has an argument 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Close-0.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:58:53</start><end>2015-02-28 17:58:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_2999_reason" onload_delay="10" purpose="Check if the desired exception thrown when WebSocket.close has the arguments 2999 and reason" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-2999-reason.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 17:58:54</start><end>2015-02-28 17:59:04</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_close_3000" onload_delay="10" purpose="Check if the websocket can be close normally when WebSocket.close has an argument 3000" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_close_3000.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:04</start><end>2015-02-28 17:59:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_close_5000" onload_delay="10" purpose="Check if the desired exception thrown when WebSocket.close has an argument 5000" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_close_5000.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:05</start><end>2015-02-28 17:59:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_close_exists" purpose="Check if WebSocket.close event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_close_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:05</start><end>2015-02-28 17:59:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_null" onload_delay="10" purpose="Check if the InvalidAccessError exception thrown when WebSocket.close has an argument null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Close-null.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:05</start><end>2015-02-28 17:59:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_close_reason_null" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close has an argument reason null " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_close_reason_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:06</start><end>2015-02-28 17:59:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_null" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument null" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-null.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 17:59:07</start><end>2015-02-28 17:59:17</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_onlyReason" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close secure only has an argument by reason" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-onlyReason.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 17:59:17</start><end>2015-02-28 17:59:27</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_undefined" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument undefined" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-undefined.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 17:59:27</start><end>2015-02-28 17:59:37</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_close_type" purpose="Check if the type of WebSocket.close is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_close_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:37</start><end>2015-02-28 17:59:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_undefined" onload_delay="10" purpose="Check if the InvalidAccessError exception thrown when the WebSocket.close has an argument undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Close-undefined.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:37</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSED_default_value" purpose="Check if the default value of WebSocket.CLOSED is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSED_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSED_exists" purpose="Check if WebSocket.CLOSED attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSED_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSED_type" purpose="Check if the type of WebSocket.CLOSED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSED_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSING_default_value" purpose="Check if the default value of WebSocket.CLOSING is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSING_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSING_exists" purpose="Check if WebSocket.CLOSING attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSING_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CLOSING_type" purpose="Check if the type of WebSocket.CLOSING is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CLOSING_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CONNECTING_default_value" purpose="Check if the default value of WebSocket.CONNECTING is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CONNECTING_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:38</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CONNECTING_exists" purpose="Check if WebSocket.CONNECTING attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CONNECTING_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_CONNECTING_type" purpose="Check if the type of WebSocket.CONNECTING is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_CONNECTING_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_extensions_exists" purpose="Check if WebSocket.extensions attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_extensions_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_extensions_readonly" purpose="Check if WebSocket.extensions attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_extensions_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_extensions_type" purpose="Check if the type of WebSocket.extensions is 'string'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_extensions_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_non_absolute_url" purpose="Check if the SyntaxError exception thrown when created by non absolute URL" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-non-absolute-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onclose_base" onload_delay="10" purpose="Check if WebSocket.onclose event fired" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onclose_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:39</start><end>2015-02-28 17:59:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onclose_exists" purpose="Check if WebSocket.onclose event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onclose_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:40</start><end>2015-02-28 17:59:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onclose_type" purpose="Check if the type of WebSocket.onclose is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onclose_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:40</start><end>2015-02-28 17:59:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onerror_exists" purpose="Check if WebSocket.onerror event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onerror_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:40</start><end>2015-02-28 17:59:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onerror_type" purpose="Check if the type of WebSocket.onerror is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onerror_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:40</start><end>2015-02-28 17:59:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onmessage_base" onload_delay="10" purpose="Check if WebSocket.onmessage event fired" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onmessage_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:40</start><end>2015-02-28 17:59:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onmessage_exists" purpose="Check if WebSocket.onmessage event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onmessage_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:41</start><end>2015-02-28 17:59:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onmessage_type" purpose="Check if the type of WebSocket.onmessage is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onmessage_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:41</start><end>2015-02-28 17:59:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onopen_base" onload_delay="10" purpose="Check if WebSocket.onopen event fired" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onopen_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:41</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onopen_exists" purpose="Check if WebSocket.onopen event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onopen_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onopen_type" purpose="Check if the type of WebSocket.onopen is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onopen_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_OPEN_default_value" purpose="Check if the default value of WebSocket.OPEN is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_OPEN_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_OPEN_exists" purpose="Check if WebSocket.OPEN attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_OPEN_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_OPEN_type" purpose="Check if the type of WebSocket.OPEN attribute is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_OPEN_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_protocol_closing" onload_delay="10" purpose="Check the websocket.protocol value when websocket closed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_protocol_closing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:42</start><end>2015-02-28 17:59:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_protocol_exists" purpose="Check if WebSocket.protocol attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_protocol_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:43</start><end>2015-02-28 17:59:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_nonAscii_protocol_string" purpose="Check if the SyntaxError exception thown when created by non ascii protocol string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-nonAscii-protocol-string.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:43</start><end>2015-02-28 17:59:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_protocol_readonly" purpose="Check if WebSocket.protocol attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_protocol_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:43</start><end>2015-02-28 17:59:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_protocol_type" purpose="Check if the type of WebSocket.protocol is 'string'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_protocol_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:43</start><end>2015-02-28 17:59:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_protocol_with_space" purpose="Check if the SyntaxError exception thrown when created by space protocol string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-protocol-with-space.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:44</start><end>2015-02-28 17:59:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_protocols_repeated" purpose="Check if the SyntaxError exception thrown when created by repeated protocol string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-protocols-repeated.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:44</start><end>2015-02-28 17:59:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_readyState_connecting" purpose="Check if the value of WebSocket.readyState is WebSocket.CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_readyState_connecting.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:44</start><end>2015-02-28 17:59:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_readystate_exists" purpose="Check if WebSocket.readyState attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_readystate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:44</start><end>2015-02-28 17:59:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_readyState_open" onload_delay="10" purpose="Check if the value of WebSocket.readyState is WebSocket.OPEN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_readyState_open.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:44</start><end>2015-02-28 17:59:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_readyState_readonly" purpose="Check if WebSocket.readyState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_readyState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:45</start><end>2015-02-28 17:59:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_readyState_type" purpose="Check if the type of WebSocket.readyState is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_readyState_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:45</start><end>2015-02-28 17:59:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_send_exists" purpose="Check if WebSocket.send event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_send_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:45</start><end>2015-02-28 17:59:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_send_number" onload_delay="10" purpose="Check if WebSocket.send send number data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_send_number.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:45</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_send_type" purpose="Check if the type of WebSocket.send is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_send_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_exists" purpose="Check if WebSocket.url attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_invalid_urls" purpose="Check if the SyntaxError exception thrown when created by an invalid url " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-invalid-urls.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_readonly" purpose="Check if WebSocket.url attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_type" purpose="Check if the type of WebSocket.url is 'string'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_Secure_url_with_space" purpose="Check if the SyntaxError exception thrown when created by an url with space " result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-url-with-space.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message] *W3C WebSocket API - Create Secure WebSocket - Pass a URL with a space - SYNTAX_ERR should be thrown: assert_throws: function "function () { wsocket = CreateWebSocketWithSpaceInUrl(spa..." did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_ws_echo_websocket_org_8080" purpose="Check if the value of websocket.url is ws://echo.websocket.org:8080 " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_ws_echo_websocket_org_8080.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:46</start><end>2015-02-28 17:59:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_ws_localhost_8080" purpose="Check if the value of websocket.url is ws://localhost:8080" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_ws_localhost_8080.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_wss_echo_websocket_org_8080" purpose="Check if the value of websocket.url is wss://echo.websocket.org:8080" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_wss_echo_websocket_org_8080.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_url_wss_localhost_8080" purpose="Check if the value of websocket.url is wss://localhost:8080" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_url_wss_localhost_8080.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_wrong_scheme" purpose="Check if the SyntaxError exception thrown when non ws/wss scheme in url" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-wrong-scheme.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_Secure_blocked_port" purpose="Check if the SyntaxError exception thrown when url has a blocked port " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-blocked-port.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_Reason_124Bytes" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close reason length is more than 123 bytes" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-Reason-124Bytes.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:47</start><end>2015-02-28 17:59:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_0" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-0.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:52</start><end>2015-02-28 17:59:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_1005" onload_delay="10" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument 1005" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-1005.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:53</start><end>2015-02-28 17:59:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_before_open" purpose="Check if send before connection in established" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-before-open.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:53</start><end>2015-02-28 17:59:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_65K_data" onload_delay="10" purpose="Check if Secure WebSocket when Send 65K data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-65K-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:53</start><end>2015-02-28 17:59:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_65k_data" onload_delay="10" purpose="Check if 64k byte data can be received after 65k data send on a WebSocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Send-65K-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:54</start><end>2015-02-28 17:59:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_valid_url_protocol_string" onload_delay="10" purpose="Check if connection can be opened or closed after open or close a secure WebSocket with a valid URL and protocol string" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-valid-url-protocol-string.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:55</start><end>2015-02-28 17:59:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_server_initiated_close" onload_delay="10" purpose="Check if the connnection works when open or close a secure WebSocket with server initiated close" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-server-initiated-close.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:55</start><end>2015-02-28 17:59:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_4999_reason" onload_delay="10" purpose="Check if the connection works when open or close a secure WebSocket with 4999 code and reason" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-4999-reason.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:56</start><end>2015-02-28 17:59:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_valid_url_protocol" onload_delay="10" purpose="Check if connection can be opened or closed after open or close a WebSocket with a valid URL and a protocol" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-valid-url-protocol.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:57</start><end>2015-02-28 17:59:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_extensions_empty" onload_delay="10" purpose="Check if the websocket connection with an empty extension can be opened or closed successfully" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-extensions-empty.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:57</start><end>2015-02-28 17:59:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_send_null" onload_delay="10" purpose="Check if null can be received when null data send on a Secure WebSocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-null.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:58</start><end>2015-02-28 17:59:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_valid_url_binarytype_blob" onload_delay="10" purpose="Check if a open secure WebSocket which binaryType should be set to 'blob' after connection is established." result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-valid-url-binaryType-blob.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:59</start><end>2015-02-28 17:59:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_valid_url" onload_delay="10" purpose="Check if the connection works when sending the valid URL" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-valid-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 17:59:59</start><end>2015-02-28 18:00:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_valid_url_protocol_empty" purpose="Check if wsocket.protocol is empty before connection is established" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-valid-url-protocol-empty.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:00</start><end>2015-02-28 18:00:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_send_binary_blob" onload_delay="10" purpose="Check if binary data should be received in blob form when binary data in blob form send on a Secure Websocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-blob.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:00</start><end>2015-02-28 18:00:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_valid_url_array_protocols" onload_delay="10" purpose="Check if connection works when open or close a secure WebSocket with a valid URL and array of protocol strings" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-valid-url-array-protocols.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:01</start><end>2015-02-28 18:00:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_data" onload_delay="10" purpose="Check if data can be received after send data on a Secure WebSocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:01</start><end>2015-02-28 18:00:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_3000_reason" onload_delay="10" purpose="Check if the desired wsocket.readyState is equal to 3 and evt.wasClean is true if the websocket call the method close(3000)" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-3000-reason.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:02</start><end>2015-02-28 18:00:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_readystate_closing" onload_delay="10" purpose="Check if readyState is 2 before onclose is fired" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-readyState-Closing.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:03</start><end>2015-02-28 18:00:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="close_1000" onload_delay="10" purpose="Check if readystate should be in CLOSED state and wasClean is TRUE after close a WebSocket with 1000 code and reason" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Close-1000.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:03</start><end>2015-02-28 18:00:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_valid_url_array_protocols" onload_delay="10" purpose="Check if the websocket connection with a valid URL and array of protocols can be opened or closed successfully" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-valid-url-array-protocols.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:04</start><end>2015-02-28 18:00:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="send_null" onload_delay="10" purpose="Check if null can be received after null send on a WebSocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Send-null.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:05</start><end>2015-02-28 18:00:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_valid_url" onload_delay="10" purpose="Check if the connection can be opened or closed after open or close a secure WebSocket with a valid URL" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-valid-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:05</start><end>2015-02-28 18:00:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="create_secure_valid_url_protocol_setcorrectly" onload_delay="10" purpose="Check if protocol is set correctly after connection" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-valid-url-protocol-setCorrectly.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:06</start><end>2015-02-28 18:00:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="close_1000_reason" onload_delay="10" purpose="Check if readystate can be in CLOSED state and wasClean is TRUE if close a WebSocket with 1000 code and reason" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Close-1000-reason.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:07</start><end>2015-02-28 18:00:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_1000" onload_delay="10" purpose="Check if readystate can be in CLOSED state and wasClean is TRUE after close a secure WebSocket with 1000 code" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-1000.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:07</start><end>2015-02-28 18:00:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_readystate_closed" onload_delay="10" purpose="Check if readyState is in closed state when onclose is fired" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-readyState-Closed.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:08</start><end>2015-02-28 18:00:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="secure_close_1000_reason" onload_delay="10" purpose="Check if readystate should be in CLOSED state and wasClean is TRUE after close a secure WebSocket with 1000 code and reason" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-1000-reason.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:09</start><end>2015-02-28 18:00:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="send_0byte_data" onload_delay="10" purpose="Check if null can be received when 0 byte data send on a WebSocket" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-websocket-w3c-tests/websocket/w3c/Send-0byte-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:09</start><end>2015-02-28 18:00:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_Secure_verify_url_set_default_port" purpose="Check if url can be set correctly when a secure WebSocket created with a valid URL and default port" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-verify-url-set-default-port.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:10</start><end>2015-02-28 18:00:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_Secure_verify_url_set_non_default_port" purpose="Check if url can be set correctly when a secure WebSocket created with a valid URL and non default port" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-Secure-verify-url-set-non-default-port.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:10</start><end>2015-02-28 18:00:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_verify_url_set_default_port" purpose="Check if url can be set correctly when a WebSocket created with a valid URL and a default port" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-verify-url-set-default-port.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:10</start><end>2015-02-28 18:00:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Create_verify_url_set_non_default_port" purpose="Check if url can be set correctly when a WebSocket created with a valid URL and non default port" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Create-verify-url-set-non-default-port.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:10</start><end>2015-02-28 18:00:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_1000_verify_code" onload_delay="10" purpose="Check if the return code is 1000 when close a secure WebSocket with 1000 code" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-1000-verify-code.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:11</start><end>2015-02-28 18:00:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_1005_verify_code" onload_delay="10" purpose="Check if the return code is 1005 when close a secure WebSocket with 1005 code" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-1005-verify-code.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:11</start><end>2015-02-28 18:00:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Close_3000_verify_code" onload_delay="10" purpose="Check if the return code is 3000 when close a secure WebSocket with 3000 code" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Close-3000-verify-code.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:12</start><end>2015-02-28 18:00:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_65K_arraybuffer" onload_delay="10" purpose="Check if 65 byte data can be received after Send 65K binary data on a Secure Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-65K-arraybuffer.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:13</start><end>2015-02-28 18:00:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybuffer" onload_delay="10" purpose="Check if binary data should be received when binary data send on a Secure Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybuffer.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:13</start><end>2015-02-28 18:00:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_paired_surrogates" onload_delay="10" purpose="Check if paired surrogates data should be received when paired surrogates data send on a Secure Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-paired-surrogates.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:14</start><end>2015-02-28 18:00:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_unicode_data" onload_delay="10" purpose="Check if unicode data message should be received when unicode data send on a Secure Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-unicode-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:14</start><end>2015-02-28 18:00:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_binary_65K_arraybuffer" onload_delay="10" purpose="Check if 65 byte data can be received after Send 65K binary data send on a WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-binary-65K-arraybuffer.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:15</start><end>2015-02-28 18:00:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_binary_arraybuffer" onload_delay="10" purpose="Check if binary data should be received when binary data send on a Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-binary-arraybuffer.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:16</start><end>2015-02-28 18:00:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_binary_blob" onload_delay="10" purpose="Check if binary data should be received in blob form when binary data in blob form send on a Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-binary-blob.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:16</start><end>2015-02-28 18:00:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_data" onload_delay="10" purpose="Check if data can be received after data send on a WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:17</start><end>2015-02-28 18:00:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_paired_surrogates" onload_delay="10" purpose="Check if paired surrogates data should be received when paired surrogates data send on a Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-paired-surrogates.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:18</start><end>2015-02-28 18:00:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_unicode_data" onload_delay="10" purpose="Check if unicode data message should be received when unicode data send on a Websocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-unicode-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:18</start><end>2015-02-28 18:00:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_float32" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Float32Array type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-float32.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:19</start><end>2015-02-28 18:00:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_float64" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Float64Array type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-float64.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:20</start><end>2015-02-28 18:00:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_int32" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int32Array type " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-int32.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:20</start><end>2015-02-28 18:00:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_uint8_offset" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint8Array type with offset " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-uint8-offset.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:21</start><end>2015-02-28 18:00:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_uint8_offset_length" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint8Array type with offset and length " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-uint8-offset-length.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:22</start><end>2015-02-28 18:00:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_uint16_offset_length" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint16Array type with offset and length" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-uint16-offset-length.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:22</start><end>2015-02-28 18:00:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Secure_Send_binary_arraybufferview_uint32_offset" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint32Array type with offset" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Secure-Send-binary-arraybufferview-uint32-offset.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:23</start><end>2015-02-28 18:00:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_binary_arraybufferview_int8" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int8Array type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-binary-arraybufferview-int8.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:24</start><end>2015-02-28 18:00:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_binary_arraybufferview_int16_offset" onload_delay="5" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int16Array type with offset " result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/Send-binary-arraybufferview-int16-offset.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:24</start><end>2015-02-28 18:00:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="BufferedAmount_001" purpose="Check if the default value of WebSocket.bufferedAmount is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/bufferedAmount/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:25</start><end>2015-02-28 18:00:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="BufferedAmount_002" purpose="Check if the WebSocket.bufferedAmount is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/bufferedAmount/002.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:25</start><end>2015-02-28 18:00:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="BufferedAmount_004" purpose="Check if can delete the attribute of WebSocket.bufferedAmount" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/bufferedAmount/004.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:00:25</start><end>2015-02-28 18:00:25</end><stdout>[Message] *WebSockets: delete bufferedAmount: assert_equals: after attempt to delete ws.bufferedAmount expected (number) 0 but got (undefined) undefined</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_001" purpose="Check if WebSocket.close method fired the onclose event" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/close/001.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:00:25</start><end>2015-02-28 18:00:25</end><stdout>[Message] *WebSockets: close(): assert_equals: delete e.wasClean expected (boolean) false but got (undefined) undefined</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_002" purpose="Check if can replace the method of close in WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/close/002.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:25</start><end>2015-02-28 18:00:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_003" purpose="Check if can call WebSocket.close method several times" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/close/003.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:26</start><end>2015-02-28 18:00:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Close_004" purpose="Check if WebSocket.close method return undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/close/004.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:26</start><end>2015-02-28 18:00:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="CloseEvent_001" purpose="Check if window.CloseEvent exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/CloseEvent/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:26</start><end>2015-02-28 18:00:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_001_1" purpose="Check if WebSocket.CONNECTING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:26</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_001_2" purpose="Check if WebSocket.OPEN exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_001_3" purpose="Check if WebSocket.CLOSING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_001_4" purpose="Check if WebSocket.CLOSED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_003_1" purpose="Check if can delete the attribute of WebSocket.CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/003.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_003_2" purpose="Check if can delete the attribute of WebSocket.OPEN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/003.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_003_3" purpose="Check if can delete the attribute of WebSocket.CLOSING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/003.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_003_4" purpose="Check if can delete the attribute ofWebSocket.CLOSED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/003.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_1" purpose="Check if CONNECTING exists in WebSocket.prototype" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_2" purpose="Check if CONNECTING exists in WebSocket instance" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_3" purpose="Check if OPEN exists in WebSocket.prototype" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_4" purpose="Check if OPEN exists in WebSocket instance" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_5" purpose="Check if CLOSING exists in WebSocket.prototype" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_6" purpose="Check if CLOSING exists in WebSocket instance" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_7" purpose="Check if CLOSED exists in WebSocket.prototype" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_004_8" purpose="Check if CLOSED exists in WebSocket instance" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/004.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:27</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_005_1" purpose="Check if throw TypeError by defineProperty getter for CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/005.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:27</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_005_2" purpose="Check if throw TypeError by defineProperty getter for OPEN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/005.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_005_3" purpose="Check if throw TypeError by defineProperty getter for CLOSING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/005.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_005_4" purpose="Check if throw TypeError by defineProperty getter for CLOSED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/005.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_006_1" purpose="Check if throw TypeError by defineProperty setter for CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/006.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_006_2" purpose="Check if throw TypeError by defineProperty setter for OPEN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/006.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_006_3" purpose="Check if throw TypeError by defineProperty setter for CLOSING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/006.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Constants_006_4" purpose="Check if throw TypeError by defineProperty setter for CLOSED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/constants/006.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:28</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Cookies_004" purpose="Check if the WebSocket response cookies matches document.cookie" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/cookies/004.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:28</start><end>2015-02-28 18:00:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_001_1" purpose="Check if onopen attribute nonexist when without define it on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_001_2" purpose="Check if onmessage attribute nonexist when without define it on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_001_3" purpose="Check if onerror attribute nonexist when without define it on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_001_4" purpose="Check if onclose attribute nonexist when without define it on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/001.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_002_1" purpose="Check if onopen attribute exist after it defined on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/002.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_002_2" purpose="Check if onmessage attribute exist after it defined on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/002.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_002_3" purpose="Check if onerror attribute exist after it defined on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/002.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_002_4" purpose="Check if onclose attribute exist after it defined on WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/002.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_003" purpose="Check if can listen event with onopen" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/003.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_004" purpose="Check if the type of addEventListener/removeEventListener/dispatchEvent are function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/004.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_006" purpose="Check if onopen/onmessage/onerror/onclose are in WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/006.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_007" purpose="Check if can listen event with onmessage" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/007.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:29</start><end>2015-02-28 18:00:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_008" purpose="Check if can listen event with onerror" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/008.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_009" purpose="Check if can listen event with onclose" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/009.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_010_1" purpose="Check if can set onopen event handler to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/010.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_010_2" purpose="Check if can set onmessage event handler to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/010.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_010_3" purpose="Check if can set onerror event handler to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/010.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_010_4" purpose="Check if can set onclose event handler to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/010.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_011_1" purpose="Check if can set onopen event handler to 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/011.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_011_2" purpose="Check if can set onmessage event handler to 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/011.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_011_3" purpose="Check if can set onerror event handler to 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/011.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_011_4" purpose="Check if can set onclose event handler to 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/011.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_012_1" purpose="Check if can set onopen event handler to ';'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/012.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:30</start><end>2015-02-28 18:00:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_012_2" purpose="Check if can set onmessage event handler to ';'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/012.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_012_3" purpose="Check if can set onerror event handler to ';'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/012.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_012_4" purpose="Check if can set onclose event handler to ';'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/012.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_014_1" purpose="Check if can set onopen event handler to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/014.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_014_2" purpose="Check if can set onmessage event handler to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/014.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_014_3" purpose="Check if can set onerror event handler to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/014.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_014_4" purpose="Check if can set onclose event handler to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/014.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_015" purpose="Check if WebSocket events are instanceof of Event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/015.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_017" purpose="Check if e.target/e.currentTarget/e.eventPhase get the correct value in WebSocket event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/017.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:31</start><end>2015-02-28 18:00:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_018" purpose="Check if toString()/bubbles/cancelable get the correct value in WebSocket event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/018.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:32</start><end>2015-02-28 18:00:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_019_1" purpose="Check if can removeEventListener about onopen event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/019.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_019_2" purpose="Check if can removeEventListener about onmessage event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/019.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_019_3" purpose="Check if can removeEventListener about onerror event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/019.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Events_019_4" purpose="Check if can removeEventListener about onclose event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/events/019.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Extensions_001" purpose="Check if the extensions attribute initially return the empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/extensions/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Protocol_001" purpose="Check if the protocol attribute initially return the empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/protocol/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="ReadyState_001" purpose="Check if the readyState attribute initially return the WebSocket.CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/readyState/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="ReadyState_002" purpose="Check if the WebSocket.readyState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/readyState/002.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:33</start><end>2015-02-28 18:00:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="ReadyState_006" purpose="Check if the value readyState is WebSocket.OPEN when in onopen event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/readyState/006.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:34</start><end>2015-02-28 18:00:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="ReadyState_007" purpose="Check if the value readyState is WebSocket.CLOSING when WebSocket.close() is called" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/readyState/007.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:34</start><end>2015-02-28 18:00:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="ReadyState_008" purpose="Check if the value readyState is WebSocket.CLOSED when in onclose event handler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/readyState/008.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:35</start><end>2015-02-28 18:00:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_001" purpose="Check if throw TypeError when WebSocket.send() with no args" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_002" purpose="Check if can replace the method of send in WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/002.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_003" purpose="Check if can send() when readyState is CONNECTING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/003.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_004_1" purpose="Check if throw INVALID_STATE_ERR when send() with lone low surrogate" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/004.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_004_2" purpose="Check if throw INVALID_STATE_ERR when send() with lone high surrogate" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/004.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_004_3" purpose="Check if throw INVALID_STATE_ERR when send() with surrogates in wrong order" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/004.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:36</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Send_009" purpose="Check if can send() empty message" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/send/009.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:00:36</start><end>2015-02-28 18:00:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Unload-a-document_001" purpose="Check if can navigate top-level browsing context" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/unload-a-document/001.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 18:00:37</start><end>2015-02-28 18:02:17</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Unload-a-document_003" purpose="Check if can navigate nested browsing context" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/unload-a-document/003.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:02:23</start><end>2015-02-28 18:02:24</end><stdout>[Message] *WebSockets: navigating nested browsing context: assert_unreached: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Url_002" purpose="Check if WebSocket.url is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/url/002.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="Url_003" purpose="Check if can delete the attribute of WebSocket.url" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/interfaces/WebSocket/url/003.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message] *WebSockets: deleting url: assert_equals: expected (string) "ws://127.0.0.1/" but got (undefined) undefined</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_001" purpose="Check if can new WebSocket() with no args" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/001.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_1" purpose="Check if can new WebSocket() with invalid url arg as '/test'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_2" purpose="Check if can new WebSocket() with invalid url arg as 'ws://foo bar.com/'" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message]assert_throws: function "function (){new WebSocket("ws://foo bar.com/")}" did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_3" purpose="Check if can new WebSocket() with invalid url arg as 'wss://foo bar.com/'" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message]assert_throws: function "function (){new WebSocket("wss://foo bar.com/")}" did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_4" purpose="Check if can new WebSocket() with invalid url arg as 'http://location.hostname/'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_5" purpose="Check if can new WebSocket() with invalid url arg as 'mailto:example@example.org'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:24</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_6" purpose="Check if can new WebSocket() with invalid url arg as 'about:blank'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:24</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_7" purpose="Check if can new WebSocket() with invalid url arg as 'ws://location.hostname/#'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_8" purpose="Check if can new WebSocket() with invalid url arg as 'ws://location.hostname/#test'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_9" purpose="Check if can new WebSocket() with invalid url arg as '?test'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_002_10" purpose="Check if can new WebSocket() with invalid url arg as '#test'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/002.html?total_num=10&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_004" onload_delay="10" purpose="Check if can new WebSocket() with invalid protocol arg" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/004.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_005" purpose="Check if the return value of new WebSocket() is instanceof WebSocket" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/005.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_007" purpose="Check if can new WebSocket() with null char arg" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/007.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_008_1" purpose="Check if can new WebSocket() with invalid port arg as 'ws://example.invalid:80/'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/008.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_008_2" purpose="Check if can new WebSocket() with invalid port arg as 'ws://example.invalid:443/'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/008.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:25</start><end>2015-02-28 18:02:25</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_008_3" purpose="Check if can new WebSocket() with invalid port arg as 'wss://example.invalid:80/'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/008.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:26</start><end>2015-02-28 18:02:26</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_008_4" purpose="Check if can new WebSocket() with invalid port arg as 'wss://example.invalid:443/'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/008.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:26</start><end>2015-02-28 18:02:26</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_010" purpose="Check if the protocol in response but no in requested" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/010.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:26</start><end>2015-02-28 18:02:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_012" purpose="Check if no protocol in response" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/012.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 18:02:26</start><end>2015-02-28 18:02:29</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_017_1" purpose="Check if can new WebSocket() with no slash after ws as 'ws:location.hostname/ws/echo'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/017.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:29</start><end>2015-02-28 18:02:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_017_2" purpose="Check if can new WebSocket() with one slash after ws as 'ws:/location.hostname/ws/echo'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/017.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:30</start><end>2015-02-28 18:02:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_017_3" purpose="Check if can new WebSocket() with no slash after wss as 'wss:location.hostname/ws/echo'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/017.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:30</start><end>2015-02-28 18:02:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_017_4" purpose="Check if can new WebSocket() with one slash after wss as 'wss:/location.hostname/ws/echo'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/017.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:30</start><end>2015-02-28 18:02:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_019" purpose="Check if can new WebSocket() with uppercase protocal as 'WS:'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/019.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:30</start><end>2015-02-28 18:02:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_020" purpose="Check if can new WebSocket() with uppercase host" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/020.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:30</start><end>2015-02-28 18:02:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_constructor_021" purpose="Check if can new WebSocket() with the same sub protocol twice" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/w3c/021.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:31</start><end>2015-02-28 18:02:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_CloseEvent_exists" purpose="Check if CloseEvent interface exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_CloseEvent_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:31</start><end>2015-02-28 18:02:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_bufferedAmount_increase_each_call" onload_delay="10" purpose="Check if WebSocket.bufferedAmount increases with each call to the send() method, when the connection is closed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_bufferedAmount_increase_each_call.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:32</start><end>2015-02-28 18:02:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_exists" purpose="Check if window.WebSocket interface exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:32</start><end>2015-02-28 18:02:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_onmessage_MessageEvent_origin_initialize" onload_delay="10" purpose="Check if Initialize event's origin attribute to the Unicode serialization of the origin of the URL that was passed to the WebSocket object's constructor" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_onmessage_MessageEvent_origin_initialize.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:32</start><end>2015-02-28 18:02:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/The WebSocket API" execution_type="auto" id="websocket_WebSocket_port_block_access_exception_SecurityError" onload_delay="10" purpose="Check if port is a port to which the user agent is configured to block access that expecting an exception SecurityError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-websocket-w3c-tests/websocket/websocket_WebSocket_port_block_access_exception_SecurityError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 18:02:33</start><end>2015-02-28 18:02:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
