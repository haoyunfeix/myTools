<test_definition><environment build_id="" device_id="E6OKCY410829" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-02-28_11_31_21</start_at><end_at>2015-02-28_11_34_24</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-audio-html5-tests" widget="webapi-noneservice-tests">
    <set name="Audio" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadedmetadata" purpose="Check that loadedmetadata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:52</start><end>2015-02-28 11:32:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkstate_initial" purpose="Check that audio.networkState is NETWORK_EMPTY" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/networkState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:52</start><end>2015-02-28 11:32:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_property_exists" purpose="Check if audio.preload property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:53</start><end>2015-02-28 11:32:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_src_reflects_attribute_not_source_elements" purpose="Check that audio.src reflects the content attribute of the same name" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_reflects_attribute_not_source_elements.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:53</start><end>2015-02-28 11:32:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_canplay" purpose="Check that  canplay event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:53</start><end>2015-02-28 11:32:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_property_exists" purpose="Check if audio.error property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/error_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:53</start><end>2015-02-28 11:32:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_ogg_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported ogg format codecs parameter" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_supported_but_no_codecs_parameter_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:54</start><end>2015-02-28 11:32:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_playing" purpose="Check that playing event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:54</start><end>2015-02-28 11:32:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_progress" purpose="Check that progress event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:32:54</start><end>2015-02-28 11:32:58</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_canplay" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if canplay event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:58</start><end>2015-02-28 11:32:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadstart" purpose="Check that loadstart event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:58</start><end>2015-02-28 11:32:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_play" purpose="Check that play event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:58</start><end>2015-02-28 11:32:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadeddata" purpose="Check that loadedata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:32:59</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_property_exists" purpose="Check if the audio.currentSrc property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_readystate_property_exists" purpose="Check if the audio.readyState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_constructor" purpose="Check if new Audio() returns a new audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method_exists" purpose="Check if the audio.load exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_exists" purpose="Check if audio.MediaController.buffered exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_currentTime_exists" purpose="Check if audio.MediaController.currentTime exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_currentTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_defaultPlaybackRate_exists" purpose="Check if audio.MediaController.defaultPlaybackRate exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_defaultPlaybackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:00</start><end>2015-02-28 11:33:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_exists" purpose="Check if audio.MediaController.duration exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_muted_exists" purpose="Check if audio.MediaController.muted exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_muted_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_exists" purpose="Check if audio.MediaController.paused exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_pause_exists" purpose="Check if audio.MediaController.pause exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_pause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackRate_exists" purpose="Check if audio.MediaController.playbackRate exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_exists" purpose="Check if audio.MediaController.played exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_play_exists" purpose="Check if audio.MediaController.play exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_play_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_exists" purpose="Check if audio.MediaController.seekable exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_volume_exists" purpose="Check if audio.MediaController.volume exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_volume_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:01</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_exists" purpose="Check if audio.error.code exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_ABORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_exists" purpose="Check if audio.error.MEDIA_ERR_DECODE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_exists" purpose="Check if audio.error.MEDIA_ERR_NETWORK exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_method_exists" purpose="Check if audio.pause method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_method_exists" purpose="Check if audio.play method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end_exists" purpose="Check if audio.TimeRanges.end exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:02</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_exists" purpose="Check if audio.TimeRanges.length exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start_exists" purpose="Check if audio.TimeRanges.start exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_normal" purpose="Check if user agent is able to set audio.volume with new value in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_exists" purpose="Check if audio.MediaController.playbackState attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_type" purpose="Check if the type of audio.MediaController.playbackState attribute is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_exists" purpose="Check if audio.MediaController.unpause method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_type" purpose="Check if the type of audio.MediaController.unpause method is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_none" purpose="Check that audio.preload reflects 'none' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_none.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_bogus_type" purpose="Check that audio.canPlayType method support marks-fantasmagorical-format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_bogus_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:03</start><end>2015-02-28 11:33:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_auto_value" purpose="Check that audio.preload reflects 'auto' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_auto_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:04</start><end>2015-02-28 11:33:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_reflects_no_value" purpose="Check that audio.src is empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_reflects_no_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:04</start><end>2015-02-28 11:33:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_canplaythrough" purpose="Check that canplaythrough event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:04</start><end>2015-02-28 11:33:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_playing" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if playing event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:04</start><end>2015-02-28 11:33:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_loadeddata" purpose="Check that audio.readyState is greater than or equal to HAVE_CURRENT_DATA if loadeddata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:05</start><end>2015-02-28 11:33:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="error_null_no_source" purpose="Check that the property of audio.error is null if no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:06</start><end>2015-02-28 11:33:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_metadata" purpose="Check that audio.preload reflects 'metadata' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_metadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:06</start><end>2015-02-28 11:33:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_vorbis" purpose="Check that audio.canPlayType method support vorbis format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream_with_codecs_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:06</start><end>2015-02-28 11:33:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_canplaythrough" purpose="Check that audio.readyState is HAVE_ENOUGH_DATA if canplaythrough event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:06</start><end>2015-02-28 11:33:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_method_exists" purpose="Check that audio.canPlayType method exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:07</start><end>2015-02-28 11:33:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkstate_property_exists" purpose="Check that audio.networkState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/networkState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:07</start><end>2015-02-28 11:33:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_nonempty_after_setting_src" purpose="Check that audio.currentSrc returns non-empty after setting src attribute" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:07</start><end>2015-02-28 11:33:07</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_none_autoplay" purpose="Check that audio.preload reflects 'none' value even if autoplay attribute is present" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_none_autoplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:07</start><end>2015-02-28 11:33:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_loadedmetadata" purpose="Check that audio.readyState is greater than or equal to HAVE_METADATA_DATA if loadedMETAdata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:07</start><end>2015-02-28 11:33:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_empty_if_no_src" purpose="Check that audio.currentSrc returns empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:08</start><end>2015-02-28 11:33:08</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_removal_does_not_trigger_loadstart" purpose="Check that removing audio.src attribute tiggers loadstart event" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_removal_does_not_trigger_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:08</start><end>2015-02-28 11:33:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_nonempty_after_adding_source_child" purpose="Check that audio.currentSrc returns non-empty if add source element" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:09</start><end>2015-02-28 11:33:09</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_mp4_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported mp4 format codecs parameter" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_supported_but_no_codecs_parameter_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:09</start><end>2015-02-28 11:33:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_initial" purpose="Check that audio.readyState initial value is HAVE_NOTHING" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:09</start><end>2015-02-28 11:33:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_mp4a" purpose="Check that audio.canPlayType method support mp4 format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream_with_codecs_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_application_octet_stream" purpose="Check that audio.canPlayType method support octet-stream" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_true_controls_present" purpose="Check that audio.controls returns true if the controls attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_reflects_false" purpose="Check that audio.controls returns false if the controls attribute is set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_reflects_true" purpose="Check that audio.controls returns true if the controls attribute is set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_true_muted_present" purpose="Check that audio.defaultMuted returns true if the muted attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_no_dynamic_effect_muted" purpose="Check that media.defaultMuted returns true if the muted attribute is set to false and the muted attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_false_muted_absent" purpose="Check that audio.defaultMuted returns false if the muted attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_no_dynamic_effect" purpose="Check that audio.defaultMuted returns false if the muted attribute is set to true and the muted attribute is asent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:10</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_base" onload_delay="15" purpose="Check that seeking event is triggered more than once if audio.loop is set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:10</start><end>2015-02-28 11:33:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_true_loop_present" purpose="Check that audio.loop returns true if the loop attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:21</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_reflects_false" purpose="Check if audio.loop can be set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_reflects_true" purpose="Check if audio.loop can be set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_present_get" purpose="Check that audio.muted returns true if the muted attribute is present in the audio element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_notpresent_get" purpose="Check that audio.muted returns false if the muted attribute is not present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_present_set" purpose="Check if the audio.muted can be set if the muted attribute is present in the audio element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message]assert_equals: expected true but got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_notpresent_set" purpose="Check if the audio.muted can be set if the muted attribute is not present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_get1" purpose="Check that audio.muted can be get (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_set1" purpose="Check that audio.muted can be set (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_get2" purpose="Check that audio.muted can be get with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_set2" purpose="Check that audio.muted can be set with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_innerHTML_get" purpose="Check that audio.muted can be get with muted='' (innerHTML-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_write_get" purpose="Check that audio.muted can be get with muted='' (document.write-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:22</end><stdout>[Message]assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_volumechange" purpose="Check that volumechange event is triggered if audio.muted is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_muted_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:22</start><end>2015-02-28 11:33:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_initial" purpose="Check if the intial value of the audio.volume is in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:23</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_silent" purpose="Check if user agent is able to set audio.volume with new value 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:23</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_loudest" purpose="Check if user agent is able to set audio.volume with new value 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:23</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_exception_lower" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value less than 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:23</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_exception_upper" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value more than 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:23</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_volumechange" purpose="Check that volumechange event is triggered if audio.volume is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:23</start><end>2015-02-28 11:33:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_canplay_playing" purpose="Check that canplay event is triggered, then playing event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_canplay_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:24</start><end>2015-02-28 11:33:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_false_during_play" purpose="Check that audio.paused is false if play event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/paused_false_during_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:25</start><end>2015-02-28 11:33:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_canplay_canplaythrough" purpose="Check that canplay event is triggered, then canplaythrough event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_canplay_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:25</start><end>2015-02-28 11:33:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_true_during_pause" purpose="Check that audio.paused is true if pause event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/paused_true_during_pause.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:26</start><end>2015-02-28 11:33:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_loadedmetadata_loadeddata" purpose="Check that loadedmetadata event is triggered, then loadeddata event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_loadedmetadata_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:26</start><end>2015-02-28 11:33:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_loadstart_progress" purpose="Check that loadstart event is triggered, then progress event triggered if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_loadstart_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:27</start><end>2015-02-28 11:33:30</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_attribute_type" purpose="Check if the type of audio.error is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_attribute_exists" purpose="Check if audio.src exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_attribute_type" purpose="Check if the type of audio.src is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_attribute_type" purpose="Check if the type of audio.currentsrc is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_exists" purpose="Check if the audio.NETWORK_EMPTY exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_type" purpose="Check if the type of audio.NETWORK_EMPTY is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_value" purpose="Check if audio.NETWORK_EMPTY const value is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_exists" purpose="Check if the audio.NETWORK_IDLE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_type" purpose="Check if the type of audio.NETWORK_IDLE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_value" purpose="Check if audio.NETWORK_IDLE const value is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_exists" purpose="Check if the audio.NETWORK_LOADING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_type" purpose="Check if the type of audio.NETWORK_LOADING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=16</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_value" purpose="Check if audio.NETWORK_LOADING const value is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_exists" purpose="Check if the audio.NETWORK_NO_SOURCE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=18</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_type" purpose="Check if the type of audio.NETWORK_NO_SOURCE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=19</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:30</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_value" purpose="Check if audio.NETWORK_NO_SOURCE const value is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=20</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:30</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_attribute_type" purpose="Check if the type of audio.networkState is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=22</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_attribute_type" purpose="Check if the type of audio.preload is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=25</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_exists" purpose="Check if the audio.buffered attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=26</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_type" purpose="Check if the type of audio.buffered is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=27</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_exists" purpose="Check if the audio.HAVE_NOTHING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=28</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_type" purpose="Check if the type of audio.HAVE_NOTHING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=29</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_value" purpose="Check if the constant value of audio.HAVE_NOTHING is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=30</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_exists" purpose="Check if the audio.HAVE_METADATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=31</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_type" purpose="Check if the type of audio.HAVE_METADATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=
32</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_value" purpose="Check if the constant value of audio.HAVE_METADATA is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=33</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_exists" purpose="Check if the audio.HAVE_CURRENT_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=34</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_type" purpose="Check if the type of audio.HAVE_CURRENT_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=35</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_CURRENT_DATA is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=36</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_exists" purpose="Check if the audio.HAVE_FUTURE_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=37</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_type" purpose="Check if the type of audio.HAVE_FUTURE_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=38</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_FUTURE_DATA is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=39</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_exists" purpose="Check if the audio.HAVE_ENOUGH_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=40</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_type" purpose="Check if the type of audio.HAVE_ENOUGH_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=41</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_ENOUGH_DATA is 4" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=42</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_readyState_attribute_type" purpose="Check if the type of audio.readyState attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=44</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_exists" purpose="Check if the audio.seeking attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=46</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_type" purpose="Check if the type of audio.seeking attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=47</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:31</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_default_value" purpose="Check if the audio.seeking attribute must initially have the value false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=48</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:31</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_attribute_exists" purpose="Check if the audio.currentTime attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=49</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_attribute_type" purpose="Check if the type of audio.currentTime attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=50</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_exists" purpose="Check if the audio.duration attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=51</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_type" purpose="Check if the type of audio.duration attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=52</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_exists" purpose="Check if the audio.paused attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=55</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_type" purpose="Check if the type of audio.paused attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=56</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_default_value" purpose="Check if the audio.paused attribute must initially be true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=57</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_attribute_exists" purpose="Check if the audio.defaultPlaybackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=58</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_attribute_type" purpose="Check if the type of audio.defaultPlaybackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=59</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_attribute_exists" purpose="Check if the audio.playbackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=60</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_attribute_type" purpose="Check if the type of audio.playbackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=61</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_exists" purpose="Check if the type of audio.played attribute is [object TimeRanges]" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=62</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_type" purpose="Check if the type of attribute audio.played is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=63</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_exists" purpose="Check if attribute audio.seekable attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=64</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_type" purpose="Check if the type of audio.seekable attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=65</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_exists" purpose="Check if audio.ended attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=66</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_type" purpose="Check if the type of audio.ended is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=67</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_default_value" purpose="Check if the default value of attribute audio.ended is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=68</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_attribute_exists" purpose="Check if the audio.autoplay attritbute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=69</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_attribute_type" purpose="Check if the type of audio.autoplay attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=70</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_default_value" purpose="Check if audio.autoplay attribute default is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=71</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_exists" purpose="Check if audio.loop attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=72</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_type" purpose="Check if the type of audio.loop is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=73</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_initial" purpose="Check if audio.loop initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=74</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_attribute_exists" purpose="Check if audio.mediaGroup exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=75</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_attribute_type" purpose="Check if the type of audio.mediagroup is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=76</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_attribute_exists" purpose="Check if the audio.controller exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=77</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_attribute_type" purpose="Check if the type of audio.controller is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=78</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_attribute_exists" purpose="Check if the audio.controls exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=79</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:32</start><end>2015-02-28 11:33:32</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_attribute_type" purpose="Check if the type of audio.controls is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=80</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_attribute_exists" purpose="Check if audio.volume attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=82</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_attribute_type" purpose="Check if the type of audio.volume attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=83</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_exists" purpose="Check if audio.muted exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=84</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_type" purpose="Check if the type of audio.muted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=85</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_initial" purpose="Check if audio.muted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=86</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_exists" purpose="Check if the audio.defaultMuted attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=87</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_type" purpose="Check if the type of audio.defaultMuted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=88</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_initial" purpose="Check if audio.defaultMuted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=89</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_mp3" purpose="Check if the browser really supports playing MP3s" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:33</start><end>2015-02-28 11:33:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_not_effect_by_controller" purpose="Check if audio.defaultPlaybackRate attributes have no effect when the media element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_not_effect_by_controller" purpose="Check if audio.playbackRate attributes have no effect when the media element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_changed_trigger_loadstart" purpose="Check if a audio.src attribute of a media element is set or changed, the user agent must invoke the media element's media element load algorithm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_changed_trigger_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.end method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.start method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_no_argument" purpose="Check if audio.canPlayType return empty string if not have arguments" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:34</end><stdout>[Message] *Audio Test: audio_canPlayType_method_maybe: Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present.(stack: TypeError: Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present.\n    at TypeError (native)\n    at Object.&lt;anonymous&gt; (app://org.xwalk.webapi_noneservice_tests//opt/tct-audio-html5-tests/audio/support/mediaelement.js:247:30)\n    at Object.Test.step (app://org.xwalk.webapi_noneservice_tests//opt/tct-audio-html5-tests/resources/testharness.js:1176:25)\n    at test (app://org.xwalk.webapi_noneservice_tests//opt/tct-audio-html5-tests/resources/testharness.js:428:18)\n    at canPlayType_no_argument (app://org.xwalk.webapi_noneservice_tests//opt/tct-audio-html5-tests/audio/support/mediaelement.js:245:5)\n    at app://org.xwalk.webapi_noneservice_tests//opt/tct-audio-html5-tests/audio/audio_canPlayType_no_argument.html:50:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_element" purpose="Check if audio element returns same audio element twice" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_element.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:34</start><end>2015-02-28 11:33:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_ogg_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream ogg vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:35</start><end>2015-02-28 11:33:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_wav_pcm" purpose="Check if user agent is able to pause playing audio playback for stream wav pcm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:35</start><end>2015-02-28 11:33:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_webm_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream webm vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:33:35</start><end>2015-02-28 11:33:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_ogg_vorbis" purpose="Check if user agent is able to play audio stream ogg theora vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:35</start><end>2015-02-28 11:33:38</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_wav_pcm" purpose="Check if user agent is able to play audio stream wav pcm with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:39</start><end>2015-02-28 11:33:42</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_webm_vorbis" purpose="Check if user agent is able to play audio stream webm vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:42</start><end>2015-02-28 11:33:45</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_ogg_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream ogg vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:45</start><end>2015-02-28 11:33:48</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_wav_pcm" purpose="Check if user agent is able to resume paused audio playback for stream wav pcm" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:48</start><end>2015-02-28 11:33:51</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_webm_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream webm vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:51</start><end>2015-02-28 11:33:55</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_ogg_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream ogg vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:55</start><end>2015-02-28 11:33:58</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_wav_pcm" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream wav pcm" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:33:58</start><end>2015-02-28 11:34:01</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_webm_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream webm vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:34:01</start><end>2015-02-28 11:34:04</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_ogg_vorbis" purpose="Check if user agent is able to stop audio playback for stream ogg vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:04</start><end>2015-02-28 11:34:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_wav_pcm" purpose="Check if user agent is able to stop audio playback for stream wav pcm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:05</start><end>2015-02-28 11:34:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_webm_vorbis" purpose="Check if user agent is able to stop audio playback for stream webm vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:06</start><end>2015-02-28 11:34:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_mp4_aac" purpose="Check if the audio element can pause the AAC decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_mp4_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:06</start><end>2015-02-28 11:34:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_mp4_aac" purpose="Check if the audio element can play the AAC decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_mp4_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:09</start><end>2015-02-28 11:34:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_mp3" purpose="Check if the audio element can pause the MP3 decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:09</start><end>2015-02-28 11:34:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_mp3" purpose="Check if the audio element can play the MP3 decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:11</start><end>2015-02-28 11:34:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_aac" purpose="Check if the audio element can pause the AAC decoding format and the container format is aac" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:12</start><end>2015-02-28 11:34:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_aac" purpose="Check if the audio element can play the AAC decoding format and the container format is aac" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:14</start><end>2015-02-28 11:34:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_amr" purpose="Check if the audio element can pause the AMR-NB decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:15</start><end>2015-02-28 11:34:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_amr" purpose="Check if the audio element can play the AMR-NB decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:17</start><end>2015-02-28 11:34:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_empty_string" purpose="Check if the attribute audio.autoplay is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:17</start><end>2015-02-28 11:34:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_null" purpose="Check if the value of attribute of audio.autoplay is false when you set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:18</start><end>2015-02-28 11:34:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_onloadedmetadata" purpose="Check if audio.autoplay attribute invoked,then audio.onloadedmetadata() function triggered" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_onloadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:18</start><end>2015-02-28 11:34:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_true_autoplay_present" purpose="Check if audio.autoplay returns true when the controls attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_true_autoplay_present.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:18</start><end>2015-02-28 11:34:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_end_type" purpose="Check if the type of audio.buffered.end is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_end_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_length_default_value" purpose="Check if the audio.buffered length is zero,typically this will be a single range anchored at the zero point" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_readonly" purpose="Check if the audio.buffered attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_start_type" purpose="Check if the type of audio.buffered.start is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_start_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_codecs_order" purpose="Check if the codecs parameter order of audio.canPlayType" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_codecs_order.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_empty_string" purpose="Check if audio.canPlayType return empty string if arguments is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_method_type" purpose="Check if the type of audio.canplayType is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:19</start><end>2015-02-28 11:34:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_return_maybe" purpose="Check if audio.canPlayType() return maybe if the argument is 'audio/ogg'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_return_maybe.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_return_probably" purpose="Check if the method audio.canPlayType() return probably if video can play the ogg type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_return_probably.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_constructor_src" purpose="Check if new Audio( url ) returns a new audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_constructor_src.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_default_value" purpose="Check if the defaut value of audio.controller is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controller_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_MediaController" purpose="Check if the attribute audio.controller is not null when set it an object MediaController" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controller_MediaController.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_empty_string" purpose="Check if the value of attribute audio.controls is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_false_controls_absent" purpose="Check if audio.controls returns false when the controls attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_false_controls_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:20</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_null" purpose="Check if the value of attribute audio.controls is false when set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_default_value" purpose="Check if the default value of audio.currentSrc is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_readonly" purpose="Check if the audio.currentSrc attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_src_empty_string" purpose="Check if audio.currentSrc is empty string when set the audio.src empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_src_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_src_null" purpose="Check if audio.currentSrc is empty string when set the audio.src null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_basic" purpose="Check if the audio.currentTime attribute return the current playback position it was set to 10" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:34:21</start><end>2015-02-28 11:34:22</end><stdout>[Message] *Audio Test: audio_currentTime_basic: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_default_value" purpose="Check if the audio.currentTime attribute initially be zero seconds in the absence of media data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:22</start><end>2015-02-28 11:34:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_exception_INVALID_STATE_ERR" purpose="Check if the audio.currentTime attribute on setting that expecting TYPE_MISMATCH_ERR exception is to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_exception_INVALID_STATE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:22</start><end>2015-02-28 11:34:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_duration" purpose="Check if the audio.currentTime attribute return the end playback position it was set to duration" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:34:22</start><end>2015-02-28 11:34:23</end><stdout>[Message] *Audio Test: audio_currentTime_value_duration: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_later_end" purpose="Check if the audio.currentTime attribute return the end playback position it was set to later than the end of the media resource" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_later_end.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:23</start><end>2015-02-28 11:34:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_null" purpose="Check if the audio.currentTime attribute on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:23</start><end>2015-02-28 11:34:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_empty_string" purpose="Check if the value of the attribute audio.defaultMuted set empty string,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultMuted_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:24</start><end>2015-02-28 11:34:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_null" purpose="Check if the value of the attribute audio.defaultMuted set null,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultMuted_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:24</start><end>2015-02-28 11:34:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_basic" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0.5 it was set to 0.5" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:24</start><end>2015-02-28 11:34:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_default_value" purpose="Check if the audio.defaultPlaybackRate attribute return 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:24</start><end>2015-02-28 11:34:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_value_null" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:25</start><end>2015-02-28 11:34:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_value_zero" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:25</start><end>2015-02-28 11:34:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_readonly" purpose="Check if the audio.duration attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:25</start><end>2015-02-28 11:34:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_value_NaN" purpose="Check if the audio.duration attribute return the Not-a-Number (NaN) value if no media data is available" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_value_NaN.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:25</start><end>2015-02-28 11:34:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_value_resource" purpose="Check if the audio.duration attribute return the time of the end of the media resource" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_value_resource.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:34:25</start><end>2015-02-28 11:34:26</end><stdout>[Message] *Audio Test: audio_duration_attribute_value_resource: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_readonly" purpose="Check if audio.ended is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:26</start><end>2015-02-28 11:34:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_canplaythrough" purpose="Check if the attribute audio.ended should be false during canplaythrough event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:26</start><end>2015-02-28 11:34:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_currentTime_duration" purpose="Check if the value of attribute audio.ended is true when set currentTime audio.durations" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_currentTime_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:34:27</start><end>2015-02-28 11:34:27</end><stdout>[Message] *Audio Test: audio_ended_currentTime_duration: assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_loaddata" purpose="Check if the value of attribute audio.ended is false during loadeddata event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_loaddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:27</start><end>2015-02-28 11:34:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_playing" purpose="Check if the value of attribute audio.ended is false during playing event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:28</start><end>2015-02-28 11:34:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_MEDIA_ERR_SRC_NOT_SUPPORTED" purpose="Check if audio.error.code is MEDIA_ERR_SRC_NOT_SUPPORTED if the source not support" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_error_MEDIA_ERR_SRC_NOT_SUPPORTED.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:29</start><end>2015-02-28 11:34:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_readonly" purpose="Check if the audio.error attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_error_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:29</start><end>2015-02-28 11:34:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method" purpose="Check if audio.load can start selecting and loading a new media resource from scratch" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:29</start><end>2015-02-28 11:34:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method_type" purpose="Check if the type of audio.load is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:29</start><end>2015-02-28 11:34:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_no_effect_by_controller" onload_delay="10" purpose="Checks that expecting the loop attribute has no effect, when the audio element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_no_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:29</start><end>2015-02-28 11:34:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_empty_string" purpose="Check if the value of the attribute audio.loop is false if set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:37</start><end>2015-02-28 11:34:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_false_loop_absent" purpose="Check if audio.loop returns false when the loop attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_false_loop_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:38</start><end>2015-02-28 11:34:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_null" purpose="Check if the value of the attribute audio.loop is false if set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:38</start><end>2015-02-28 11:34:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_readonly" purpose="Check if audio.MediaController.buffered is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:39</start><end>2015-02-28 11:34:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_type" purpose="Check if audio.MediaController.buffered is of type object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:39</start><end>2015-02-28 11:34:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_oncanplaythrough_event" purpose="Check if audio.controller.canplaythrough event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_oncanplaythrough_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:39</start><end>2015-02-28 11:34:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_oncanplay_event" purpose="Check if audio.controller.canplay event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_oncanplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:40</start><end>2015-02-28 11:34:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_currentTime_type" purpose="Check if audio.MediaController.currentTime is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_currentTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:40</start><end>2015-02-28 11:34:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_defaultPlaybackRate_type" purpose="Check if audio.MediaController.defaultPlaybackRate is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_defaultPlaybackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:40</start><end>2015-02-28 11:34:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_readonly" purpose="Check if audio.MediaController.duration is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:41</start><end>2015-02-28 11:34:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_type" purpose="Check if audio.MediaController.duration is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:41</start><end>2015-02-28 11:34:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onemptied_event" onload_delay="12" purpose="Check if audio.controller.emptied event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:41</start><end>2015-02-28 11:34:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onloadeddata_event" purpose="Check if audio.controller.loadeddata event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onloadeddata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:47</start><end>2015-02-28 11:34:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onloadedmetadata_event" purpose="Check if audio.controller.loadedmetadata event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onloadedmetadata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:48</start><end>2015-02-28 11:34:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_muted_type" purpose="Check if audio.MediaController.muted is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_muted_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:49</start><end>2015-02-28 11:34:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_readonly" purpose="Check if audio.MediaController.paused is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:49</start><end>2015-02-28 11:34:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_type" purpose="Check if audio.MediaController.paused is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:49</start><end>2015-02-28 11:34:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onpause_event" purpose="Check if audio.controller.pause event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:49</start><end>2015-02-28 11:34:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_pause_type" purpose="Check if audio.MediaController.pause is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_pause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:50</start><end>2015-02-28 11:34:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackRate_type" purpose="Check if audio.MediaController.playbackRate is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:50</start><end>2015-02-28 11:34:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_readonly" purpose="Check if audio.MediaController.played is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:50</start><end>2015-02-28 11:34:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_type" purpose="Check if audio.MediaController.played is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:50</start><end>2015-02-28 11:34:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onplaying_event" purpose="Check if audio.controller.playing event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onplaying_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:50</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onplay_event" purpose="Check if audio.controller.play event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_play_type" purpose="Check if audio.MediaController.play is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_play_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onratechange_event" purpose="Check if audio.controller.ratechange event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onratechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_readonly" purpose="Check if audio.MediaController.seekable is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_type" purpose="Check if audio.MediaController.seekable is of type object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onvolumechange_event" purpose="Check if audio.controller.volumechange event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onvolumechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:51</start><end>2015-02-28 11:34:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_volume_type" purpose="Check if audio.MediaController.volume is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_volume_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:52</start><end>2015-02-28 11:34:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onwaiting_event" purpose="Check if audio.controller.waiting event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:52</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_readonly" purpose="Check if audio.error.code is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_type" purpose="Check if the type of audio.error.code is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_ABORTED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_ABORTED const value is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_DECODE is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_value" purpose="Check if audio.error.MEDIA_ERR_DECODE const value is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:53</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_NETWORK is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_value" purpose="Check if audio.error.MEDIA_ERR_NETWORK const value is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED const value is 4" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_empty_string" purpose="Check if the value of attribute of audio.mediaGroup is empty string when you set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_null" purpose="Check if the value of attribute audio.mediaGroup is empty string when set it null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_null.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:34:54</start><end>2015-02-28 11:34:54</end><stdout>[Message] *To check the value of attribute audio.mediaGroup is empty string when set it null: assert_true: media.mediaGroup is empty string expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_valid_value" purpose="Check if the value of audio.mediaGroup is valid" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_valid_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:04</start><end>2015-02-28 11:35:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_false_muted_absent" purpose="Check if audio.muted returns false when the muted attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_muted_false_muted_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:04</start><end>2015-02-28 11:35:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_NETWORK_LOADING" purpose="Check if audio.networkState is NETWORK_LOADING when the user agent is actively trying to download data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_NETWORK_LOADING.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:04</start><end>2015-02-28 11:35:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_NETWORK_NO_SOURCE" purpose="Check if audio.networkState is NETWORK_NO_SOURCE when not yet found a resource to use" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_NETWORK_NO_SOURCE.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:05</start><end>2015-02-28 11:35:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_readonly" purpose="Check if the audio.networkState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:05</start><end>2015-02-28 11:35:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ondurationchange_event" purpose="Check if the event audio.ondurationchange occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ondurationchange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:05</start><end>2015-02-28 11:35:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onemptied_event" purpose="Check if the event audio.onemptied occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:05</start><end>2015-02-28 11:35:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onended_event" onload_delay="8" purpose="Check if the event audio.onended occurs when media resource is end" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onended_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:06</start><end>2015-02-28 11:35:14</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onerror_event" purpose="Check if the event audio.onerror occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onerror_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:14</start><end>2015-02-28 11:35:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onpause_event" purpose="Check if the event audio.onpause occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:14</start><end>2015-02-28 11:35:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onratechange_event_defaultPlaybackRate" purpose="Check if the event audio.onratechange occurs when defaultPlaybackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onratechange_event_defaultPlaybackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:16</start><end>2015-02-28 11:35:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onratechange_event_playbackRate" purpose="Check if the event audio.onratechange occurs when playbackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onratechange_event_playbackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:16</start><end>2015-02-28 11:35:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onseeking_event" purpose="Check if the event audio.onseeking occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onseeking_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:17</start><end>2015-02-28 11:35:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ontimeupdate_event" purpose="Check if the event audio.ontimeupdate occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ontimeupdate_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:17</start><end>2015-02-28 11:35:21</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onvolumechange_event_muted" purpose="Check if the event audio.onvolumechange occurs when muted changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onvolumechange_event_muted.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:21</start><end>2015-02-28 11:35:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onvolumechange_event_volume" purpose="Check if the event audio.onvolumechange occurs when volume changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onvolumechange_event_volume.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:21</start><end>2015-02-28 11:35:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onwaiting_event" purpose="Check if the event audio.onwaiting occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:22</start><end>2015-02-28 11:35:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_readonly" purpose="Check if the audio.paused attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_paused_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:22</start><end>2015-02-28 11:35:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_method_type" purpose="Check if audio.pause is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:22</start><end>2015-02-28 11:35:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_basic" purpose="Check if the audio.playbackRate attribute that on getting it must return 4.0 it was set to 4.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:22</start><end>2015-02-28 11:35:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_default_value" purpose="Check if the audio.playbackRate attribute value is 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:22</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_value_null" purpose="Check if the audio.playbackRate attribute return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_value_zero" purpose="Check if the audio.playbackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_readonly" purpose="Check if audio.played attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_played_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_length_default_value" purpose="Check if default value of the attribute audio.played.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_played_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_method_type" purpose="Check if audio.play method is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_auto" purpose="Check if audio.preload can be set to 'auto'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_preload_auto.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_readonly" purpose="Check if audio.seekable attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seekable_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_length_default_value" purpose="Check if the default value of attribute audio.seekable.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seekable_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_readonly" purpose="Check if the audio.seeking attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seeking_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:23</start><end>2015-02-28 11:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_value_true" purpose="Check if the audio.seeking attribute returns true if the user agent is currently seeking" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seeking_value_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:24</start><end>2015-02-28 11:35:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_basic" purpose="Check if audio.src can get src attibute value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:24</start><end>2015-02-28 11:35:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_default_value" purpose="Check if the default value of audio.src is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:24</start><end>2015-02-28 11:35:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_modify" purpose="Check if audio.src can be modified" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_modify.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:24</start><end>2015-02-28 11:35:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_null" purpose="Check if audio.src return empty string when you set it null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 11:35:25</start><end>2015-02-28 11:35:25</end><stdout>[Message] *Audio Test: audio_src_default_value: assert_true: Audio Test: audio_src_default_value expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end" purpose="Check if must return the position of the audio.TimeRanges.end of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:25</start><end>2015-02-28 11:35:28</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_readonly" purpose="Check if audio.TimeRanges.length is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:28</start><end>2015-02-28 11:35:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_type" purpose="Check if audio.TimeRanges.length is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:28</start><end>2015-02-28 11:35:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start" purpose="Check if must return the position of the audio.TimeRanges.start of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:28</start><end>2015-02-28 11:35:31</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_ended" purpose="Check if audio.controller.onended event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:31</start><end>2015-02-28 11:35:34</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_ended" purpose="Check if audio.MediaController.playbackState attribute is ended" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 11:35:34</start><end>2015-02-28 11:35:37</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_playing" purpose="Check if audio.MediaController.playbackState attribute is playing" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:38</start><end>2015-02-28 11:35:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_readonly" purpose="Check if audio.MediaController.playbackState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:38</start><end>2015-02-28 11:35:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_waiting" purpose="Check if audio.MediaController.playbackState attribute is waiting" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_waiting.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:38</start><end>2015-02-28 11:35:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_base" purpose="Check if audio.MediaController.unpause method, calling unpause method paused false callback play event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:38</start><end>2015-02-28 11:35:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_null" purpose="Check if audio.canPlayType return empty string if arguments is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 11:35:39</start><end>2015-02-28 11:35:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      </set>
    </suite>
<suite category="W3C/HTML5 APIs" name="tct-audio-html5-tests" widget="webapi-noneservice-tests">
    <set name="Audio" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadedmetadata" purpose="Check that loadedmetadata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:46</start><end>2015-02-28 13:10:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkstate_initial" purpose="Check that audio.networkState is NETWORK_EMPTY" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/networkState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:47</start><end>2015-02-28 13:10:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_property_exists" purpose="Check if audio.preload property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:47</start><end>2015-02-28 13:10:48</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_src_reflects_attribute_not_source_elements" purpose="Check that audio.src reflects the content attribute of the same name" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_reflects_attribute_not_source_elements.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:48</start><end>2015-02-28 13:10:48</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_canplay" purpose="Check that  canplay event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:48</start><end>2015-02-28 13:10:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_property_exists" purpose="Check if audio.error property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/error_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:49</start><end>2015-02-28 13:10:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_ogg_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported ogg format codecs parameter" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_supported_but_no_codecs_parameter_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:49</start><end>2015-02-28 13:10:50</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_playing" purpose="Check that playing event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:50</start><end>2015-02-28 13:10:50</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_progress" purpose="Check that progress event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:10:50</start><end>2015-02-28 13:10:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_canplay" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if canplay event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_canplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:57</start><end>2015-02-28 13:10:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadstart" purpose="Check that loadstart event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:58</start><end>2015-02-28 13:10:59</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_play" purpose="Check that play event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:59</start><end>2015-02-28 13:10:59</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_loadeddata" purpose="Check that loadedata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:10:59</start><end>2015-02-28 13:11:00</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_property_exists" purpose="Check if the audio.currentSrc property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:00</start><end>2015-02-28 13:11:00</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_readystate_property_exists" purpose="Check if the audio.readyState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:00</start><end>2015-02-28 13:11:00</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_constructor" purpose="Check if new Audio() returns a new audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:00</start><end>2015-02-28 13:11:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method_exists" purpose="Check if the audio.load exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:01</start><end>2015-02-28 13:11:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_exists" purpose="Check if audio.MediaController.buffered exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:01</start><end>2015-02-28 13:11:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_currentTime_exists" purpose="Check if audio.MediaController.currentTime exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_currentTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:02</start><end>2015-02-28 13:11:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_defaultPlaybackRate_exists" purpose="Check if audio.MediaController.defaultPlaybackRate exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_defaultPlaybackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:02</start><end>2015-02-28 13:11:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_exists" purpose="Check if audio.MediaController.duration exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:04</start><end>2015-02-28 13:11:05</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_muted_exists" purpose="Check if audio.MediaController.muted exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_muted_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:05</start><end>2015-02-28 13:11:05</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_exists" purpose="Check if audio.MediaController.paused exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:05</start><end>2015-02-28 13:11:06</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_pause_exists" purpose="Check if audio.MediaController.pause exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_pause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:06</start><end>2015-02-28 13:11:06</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackRate_exists" purpose="Check if audio.MediaController.playbackRate exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:06</start><end>2015-02-28 13:11:07</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_exists" purpose="Check if audio.MediaController.played exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:07</start><end>2015-02-28 13:11:07</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_play_exists" purpose="Check if audio.MediaController.play exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_play_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:07</start><end>2015-02-28 13:11:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_exists" purpose="Check if audio.MediaController.seekable exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:08</start><end>2015-02-28 13:11:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_volume_exists" purpose="Check if audio.MediaController.volume exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_volume_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:08</start><end>2015-02-28 13:11:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_exists" purpose="Check if audio.error.code exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:08</start><end>2015-02-28 13:11:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_ABORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:10</start><end>2015-02-28 13:11:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_exists" purpose="Check if audio.error.MEDIA_ERR_DECODE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:11</start><end>2015-02-28 13:11:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_exists" purpose="Check if audio.error.MEDIA_ERR_NETWORK exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:11</start><end>2015-02-28 13:11:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:12</start><end>2015-02-28 13:11:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_method_exists" purpose="Check if audio.pause method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:12</start><end>2015-02-28 13:11:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_method_exists" purpose="Check if audio.play method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:12</start><end>2015-02-28 13:11:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end_exists" purpose="Check if audio.TimeRanges.end exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:13</start><end>2015-02-28 13:11:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_exists" purpose="Check if audio.TimeRanges.length exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:13</start><end>2015-02-28 13:11:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start_exists" purpose="Check if audio.TimeRanges.start exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:14</start><end>2015-02-28 13:11:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_normal" purpose="Check if user agent is able to set audio.volume with new value in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:14</start><end>2015-02-28 13:11:15</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_exists" purpose="Check if audio.MediaController.playbackState attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:16</start><end>2015-02-28 13:11:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_type" purpose="Check if the type of audio.MediaController.playbackState attribute is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:17</start><end>2015-02-28 13:11:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_exists" purpose="Check if audio.MediaController.unpause method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:17</start><end>2015-02-28 13:11:18</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_type" purpose="Check if the type of audio.MediaController.unpause method is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:18</start><end>2015-02-28 13:11:18</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_none" purpose="Check that audio.preload reflects 'none' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_none.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:18</start><end>2015-02-28 13:11:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_bogus_type" purpose="Check that audio.canPlayType method support marks-fantasmagorical-format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_bogus_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:19</start><end>2015-02-28 13:11:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_auto_value" purpose="Check that audio.preload reflects 'auto' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_auto_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:19</start><end>2015-02-28 13:11:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_reflects_no_value" purpose="Check that audio.src is empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_reflects_no_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:19</start><end>2015-02-28 13:11:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_canplaythrough" purpose="Check that canplaythrough event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:20</start><end>2015-02-28 13:11:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_playing" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if playing event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:20</start><end>2015-02-28 13:11:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_loadeddata" purpose="Check that audio.readyState is greater than or equal to HAVE_CURRENT_DATA if loadeddata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:22</start><end>2015-02-28 13:11:23</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="error_null_no_source" purpose="Check that the property of audio.error is null if no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:23</start><end>2015-02-28 13:11:23</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_metadata" purpose="Check that audio.preload reflects 'metadata' value" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_metadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:23</start><end>2015-02-28 13:11:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_vorbis" purpose="Check that audio.canPlayType method support vorbis format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream_with_codecs_1.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:24</start><end>2015-02-28 13:11:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_canplaythrough" purpose="Check that audio.readyState is HAVE_ENOUGH_DATA if canplaythrough event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:24</start><end>2015-02-28 13:11:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_method_exists" purpose="Check that audio.canPlayType method exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:25</start><end>2015-02-28 13:11:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkstate_property_exists" purpose="Check that audio.networkState property exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/networkState_property_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:25</start><end>2015-02-28 13:11:26</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_nonempty_after_setting_src" purpose="Check that audio.currentSrc returns non-empty after setting src attribute" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:26</start><end>2015-02-28 13:11:26</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_reflects_none_autoplay" purpose="Check that audio.preload reflects 'none' value even if autoplay attribute is present" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/preload_reflects_none_autoplay.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:26</start><end>2015-02-28 13:11:27</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_during_loadedmetadata" purpose="Check that audio.readyState is greater than or equal to HAVE_METADATA_DATA if loadedMETAdata event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_during_loadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:27</start><end>2015-02-28 13:11:27</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_empty_if_no_src" purpose="Check that audio.currentSrc returns empty if there is no source" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:28</start><end>2015-02-28 13:11:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_removal_does_not_trigger_loadstart" purpose="Check that removing audio.src attribute tiggers loadstart event" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/src_removal_does_not_trigger_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:29</start><end>2015-02-28 13:11:30</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentsrc_nonempty_after_adding_source_child" purpose="Check that audio.currentSrc returns non-empty if add source element" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/currentSrc.html?total_num=18&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:30</start><end>2015-02-28 13:11:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_mp4_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported mp4 format codecs parameter" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_supported_but_no_codecs_parameter_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:31</start><end>2015-02-28 13:11:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="content_audio_readystate_initial" purpose="Check that audio.readyState initial value is HAVE_NOTHING" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/readyState_initial.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:31</start><end>2015-02-28 13:11:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="canplaytype_application_octet_stream_with_codecs_mp4a" purpose="Check that audio.canPlayType method support mp4 format" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream_with_codecs_2.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:32</start><end>2015-02-28 13:11:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canplaytype_application_octet_stream" purpose="Check that audio.canPlayType method support octet-stream" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/canPlayType_application_octet_stream.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:32</start><end>2015-02-28 13:11:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_true_controls_present" purpose="Check that audio.controls returns true if the controls attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:33</start><end>2015-02-28 13:11:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_reflects_false" purpose="Check that audio.controls returns false if the controls attribute is set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:33</start><end>2015-02-28 13:11:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_reflects_true" purpose="Check that audio.controls returns true if the controls attribute is set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_controls_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:33</start><end>2015-02-28 13:11:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_true_muted_present" purpose="Check that audio.defaultMuted returns true if the muted attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:34</start><end>2015-02-28 13:11:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_no_dynamic_effect_muted" purpose="Check that media.defaultMuted returns true if the muted attribute is set to false and the muted attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:35</start><end>2015-02-28 13:11:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_false_muted_absent" purpose="Check that audio.defaultMuted returns false if the muted attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:35</start><end>2015-02-28 13:11:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_no_dynamic_effect" purpose="Check that audio.defaultMuted returns false if the muted attribute is set to true and the muted attribute is asent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_defaultMuted_reflect.html?total_num=4&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:35</start><end>2015-02-28 13:11:36</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_base" onload_delay="15" purpose="Check that seeking event is triggered more than once if audio.loop is set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:36</start><end>2015-02-28 13:11:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_true_loop_present" purpose="Check that audio.loop returns true if the loop attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:47</start><end>2015-02-28 13:11:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_reflects_false" purpose="Check if audio.loop can be set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:47</start><end>2015-02-28 13:11:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_reflects_true" purpose="Check if audio.loop can be set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_loop_reflect.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:47</start><end>2015-02-28 13:11:48</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_present_get" purpose="Check that audio.muted returns true if the muted attribute is present in the audio element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:11:48</start><end>2015-02-28 13:11:48</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_notpresent_get" purpose="Check that audio.muted returns false if the muted attribute is not present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:48</start><end>2015-02-28 13:11:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_present_set" purpose="Check if the audio.muted can be set if the muted attribute is present in the audio element" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:11:50</start><end>2015-02-28 13:11:51</end><stdout>assert_equals: expected true but got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_notpresent_set" purpose="Check if the audio.muted can be set if the muted attribute is not present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:51</start><end>2015-02-28 13:11:51</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_get1" purpose="Check that audio.muted can be get (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:51</start><end>2015-02-28 13:11:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_set1" purpose="Check that audio.muted can be set (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:52</start><end>2015-02-28 13:11:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_get2" purpose="Check that audio.muted can be get with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:52</start><end>2015-02-28 13:11:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_script_set2" purpose="Check that audio.muted can be set with muted='' (script-created)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:52</start><end>2015-02-28 13:11:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_innerHTML_get" purpose="Check that audio.muted can be get with muted='' (innerHTML-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:11:52</start><end>2015-02-28 13:11:53</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_write_get" purpose="Check that audio.muted can be get with muted='' (document.write-created)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/muted.html?total_num=21&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:11:53</start><end>2015-02-28 13:11:53</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_volumechange" purpose="Check that volumechange event is triggered if audio.muted is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_muted_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:53</start><end>2015-02-28 13:11:53</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_initial" purpose="Check if the intial value of the audio.volume is in the range 0.0 to 1.0 inclusive" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:53</start><end>2015-02-28 13:11:54</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_silent" purpose="Check if user agent is able to set audio.volume with new value 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:54</start><end>2015-02-28 13:11:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_loudest" purpose="Check if user agent is able to set audio.volume with new value 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:55</start><end>2015-02-28 13:11:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_exception_lower" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value less than 0.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:55</start><end>2015-02-28 13:11:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_exception_upper" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value more than 1.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_check.html?total_num=6&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:55</start><end>2015-02-28 13:11:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_volumechange" purpose="Check that volumechange event is triggered if audio.volume is changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_volume_volumechange.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:56</start><end>2015-02-28 13:11:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_canplay_playing" purpose="Check that canplay event is triggered, then playing event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_canplay_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:56</start><end>2015-02-28 13:11:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_false_during_play" purpose="Check that audio.paused is false if play event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/paused_false_during_play.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:56</start><end>2015-02-28 13:11:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_canplay_canplaythrough" purpose="Check that canplay event is triggered, then canplaythrough event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_canplay_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:57</start><end>2015-02-28 13:11:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_true_during_pause" purpose="Check that audio.paused is true if pause event is triggered" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/paused_true_during_pause.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:57</start><end>2015-02-28 13:11:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_loadedmetadata_loadeddata" purpose="Check that loadedmetadata event is triggered, then loadeddata event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_loadedmetadata_loadeddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:11:58</start><end>2015-02-28 13:11:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_event_order_loadstart_progress" purpose="Check that loadstart event is triggered, then progress event triggered if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/event_order_loadstart_progress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:12:00</start><end>2015-02-28 13:12:07</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_attribute_type" purpose="Check if the type of audio.error is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:07</start><end>2015-02-28 13:12:07</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_attribute_exists" purpose="Check if audio.src exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:07</start><end>2015-02-28 13:12:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_attribute_type" purpose="Check if the type of audio.src is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:08</start><end>2015-02-28 13:12:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_attribute_type" purpose="Check if the type of audio.currentsrc is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:08</start><end>2015-02-28 13:12:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_exists" purpose="Check if the audio.NETWORK_EMPTY exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:08</start><end>2015-02-28 13:12:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_type" purpose="Check if the type of audio.NETWORK_EMPTY is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:09</start><end>2015-02-28 13:12:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_EMPTY_constant_value" purpose="Check if audio.NETWORK_EMPTY const value is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:09</start><end>2015-02-28 13:12:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_exists" purpose="Check if the audio.NETWORK_IDLE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:09</start><end>2015-02-28 13:12:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_type" purpose="Check if the type of audio.NETWORK_IDLE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:09</start><end>2015-02-28 13:12:10</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_IDLE_constant_value" purpose="Check if audio.NETWORK_IDLE const value is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:10</start><end>2015-02-28 13:12:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_exists" purpose="Check if the audio.NETWORK_LOADING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:11</start><end>2015-02-28 13:12:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_type" purpose="Check if the type of audio.NETWORK_LOADING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=16</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:11</start><end>2015-02-28 13:12:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_LOADING_constant_value" purpose="Check if audio.NETWORK_LOADING const value is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:12</start><end>2015-02-28 13:12:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_exists" purpose="Check if the audio.NETWORK_NO_SOURCE exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=18</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:12</start><end>2015-02-28 13:12:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_type" purpose="Check if the type of audio.NETWORK_NO_SOURCE is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=19</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:12</start><end>2015-02-28 13:12:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_NETWORK_NO_SOURCE_constant_value" purpose="Check if audio.NETWORK_NO_SOURCE const value is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=20</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:12</start><end>2015-02-28 13:12:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_attribute_type" purpose="Check if the type of audio.networkState is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=22</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:13</start><end>2015-02-28 13:12:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_attribute_type" purpose="Check if the type of audio.preload is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=25</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:13</start><end>2015-02-28 13:12:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_exists" purpose="Check if the audio.buffered attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=26</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:13</start><end>2015-02-28 13:12:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_type" purpose="Check if the type of audio.buffered is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=27</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:14</start><end>2015-02-28 13:12:15</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_exists" purpose="Check if the audio.HAVE_NOTHING exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=28</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:15</start><end>2015-02-28 13:12:15</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_type" purpose="Check if the type of audio.HAVE_NOTHING is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=29</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:15</start><end>2015-02-28 13:12:16</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_NOTHING_constant_value" purpose="Check if the constant value of audio.HAVE_NOTHING is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=30</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:16</start><end>2015-02-28 13:12:16</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_exists" purpose="Check if the audio.HAVE_METADATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=31</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:16</start><end>2015-02-28 13:12:16</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_type" purpose="Check if the type of audio.HAVE_METADATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=
32</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:16</start><end>2015-02-28 13:12:16</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_METADATA_constant_value" purpose="Check if the constant value of audio.HAVE_METADATA is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=33</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:16</start><end>2015-02-28 13:12:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_exists" purpose="Check if the audio.HAVE_CURRENT_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=34</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:17</start><end>2015-02-28 13:12:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_type" purpose="Check if the type of audio.HAVE_CURRENT_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=35</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:17</start><end>2015-02-28 13:12:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_CURRENT_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_CURRENT_DATA is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=36</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:17</start><end>2015-02-28 13:12:18</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_exists" purpose="Check if the audio.HAVE_FUTURE_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=37</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:18</start><end>2015-02-28 13:12:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_type" purpose="Check if the type of audio.HAVE_FUTURE_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=38</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:19</start><end>2015-02-28 13:12:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_FUTURE_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_FUTURE_DATA is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=39</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:19</start><end>2015-02-28 13:12:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_exists" purpose="Check if the audio.HAVE_ENOUGH_DATA exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=40</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:20</start><end>2015-02-28 13:12:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_type" purpose="Check if the type of audio.HAVE_ENOUGH_DATA is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=41</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:20</start><end>2015-02-28 13:12:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_HAVE_ENOUGH_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_ENOUGH_DATA is 4" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=42</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:20</start><end>2015-02-28 13:12:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_readyState_attribute_type" purpose="Check if the type of audio.readyState attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=44</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:20</start><end>2015-02-28 13:12:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_exists" purpose="Check if the audio.seeking attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=46</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:21</start><end>2015-02-28 13:12:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_type" purpose="Check if the type of audio.seeking attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=47</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:21</start><end>2015-02-28 13:12:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_default_value" purpose="Check if the audio.seeking attribute must initially have the value false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=48</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:21</start><end>2015-02-28 13:12:22</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_attribute_exists" purpose="Check if the audio.currentTime attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=49</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:22</start><end>2015-02-28 13:12:23</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_attribute_type" purpose="Check if the type of audio.currentTime attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=50</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:23</start><end>2015-02-28 13:12:23</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_exists" purpose="Check if the audio.duration attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=51</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:23</start><end>2015-02-28 13:12:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_type" purpose="Check if the type of audio.duration attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=52</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:24</start><end>2015-02-28 13:12:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_exists" purpose="Check if the audio.paused attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=55</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:24</start><end>2015-02-28 13:12:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_type" purpose="Check if the type of audio.paused attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=56</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:24</start><end>2015-02-28 13:12:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_default_value" purpose="Check if the audio.paused attribute must initially be true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=57</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:24</start><end>2015-02-28 13:12:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_attribute_exists" purpose="Check if the audio.defaultPlaybackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=58</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:25</start><end>2015-02-28 13:12:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_attribute_type" purpose="Check if the type of audio.defaultPlaybackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=59</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:25</start><end>2015-02-28 13:12:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_attribute_exists" purpose="Check if the audio.playbackRate attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=60</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:25</start><end>2015-02-28 13:12:26</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_attribute_type" purpose="Check if the type of audio.playbackRate attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=61</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:26</start><end>2015-02-28 13:12:27</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_exists" purpose="Check if the type of audio.played attribute is [object TimeRanges]" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=62</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:27</start><end>2015-02-28 13:12:27</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_type" purpose="Check if the type of attribute audio.played is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=63</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:27</start><end>2015-02-28 13:12:28</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_exists" purpose="Check if attribute audio.seekable attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=64</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:28</start><end>2015-02-28 13:12:28</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_type" purpose="Check if the type of audio.seekable attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=65</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:28</start><end>2015-02-28 13:12:28</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_exists" purpose="Check if audio.ended attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=66</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:28</start><end>2015-02-28 13:12:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_type" purpose="Check if the type of audio.ended is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=67</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:29</start><end>2015-02-28 13:12:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_default_value" purpose="Check if the default value of attribute audio.ended is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=68</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:29</start><end>2015-02-28 13:12:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_attribute_exists" purpose="Check if the audio.autoplay attritbute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=69</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:29</start><end>2015-02-28 13:12:30</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_attribute_type" purpose="Check if the type of audio.autoplay attribute is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=70</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:30</start><end>2015-02-28 13:12:30</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_default_value" purpose="Check if audio.autoplay attribute default is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=71</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:30</start><end>2015-02-28 13:12:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_exists" purpose="Check if audio.loop attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=72</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:31</start><end>2015-02-28 13:12:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_type" purpose="Check if the type of audio.loop is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=73</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:31</start><end>2015-02-28 13:12:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_attribute_initial" purpose="Check if audio.loop initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=74</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:32</start><end>2015-02-28 13:12:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_attribute_exists" purpose="Check if audio.mediaGroup exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=75</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:32</start><end>2015-02-28 13:12:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_attribute_type" purpose="Check if the type of audio.mediagroup is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=76</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:32</start><end>2015-02-28 13:12:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_attribute_exists" purpose="Check if the audio.controller exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=77</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:33</start><end>2015-02-28 13:12:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_attribute_type" purpose="Check if the type of audio.controller is object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=78</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:33</start><end>2015-02-28 13:12:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_attribute_exists" purpose="Check if the audio.controls exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=79</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:33</start><end>2015-02-28 13:12:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_attribute_type" purpose="Check if the type of audio.controls is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=80</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:33</start><end>2015-02-28 13:12:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_attribute_exists" purpose="Check if audio.volume attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=82</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:34</start><end>2015-02-28 13:12:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_volume_attribute_type" purpose="Check if the type of audio.volume attribute is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=83</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:35</start><end>2015-02-28 13:12:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_exists" purpose="Check if audio.muted exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=84</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:35</start><end>2015-02-28 13:12:36</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_type" purpose="Check if the type of audio.muted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=85</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:36</start><end>2015-02-28 13:12:36</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_attribute_initial" purpose="Check if audio.muted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=86</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:36</start><end>2015-02-28 13:12:36</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_exists" purpose="Check if the audio.defaultMuted attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=87</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:36</start><end>2015-02-28 13:12:37</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_type" purpose="Check if the type of audio.defaultMuted is boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=88</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:37</start><end>2015-02-28 13:12:37</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_attribute_initial" purpose="Check if audio.defaultMuted initial value is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/w3c/audio_attributes.html?total_num=89&amp;amp;locator_key=id&amp;amp;value=89</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:37</start><end>2015-02-28 13:12:37</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_mp3" purpose="Check if the browser really supports playing MP3s" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:37</start><end>2015-02-28 13:12:38</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_not_effect_by_controller" purpose="Check if audio.defaultPlaybackRate attributes have no effect when the media element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:38</start><end>2015-02-28 13:12:38</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_not_effect_by_controller" purpose="Check if audio.playbackRate attributes have no effect when the media element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_not_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:38</start><end>2015-02-28 13:12:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_changed_trigger_loadstart" purpose="Check if a audio.src attribute of a media element is set or changed, the user agent must invoke the media element's media element load algorithm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_changed_trigger_loadstart.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:39</start><end>2015-02-28 13:12:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.end method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:39</start><end>2015-02-28 13:12:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.start method index is out of range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:40</start><end>2015-02-28 13:12:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_no_argument" purpose="Check if audio.canPlayType return empty string if not have arguments" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:12:40</start><end>2015-02-28 13:12:41</end><stdout>Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present.(stack: TypeError: Failed to execute 'canPlayType' on 'HTMLMediaElement': 1 argument required, but only 0 present. at TypeError (native) at Object.&lt;anonymous&gt; (file:///android_asset/www//opt/tct-audio-html5-tests/audio/support/mediaelement.js:247:30) at Object.Test.step (file:///android_asset/www//opt/tct-audio-html5-tests/resources/testharness.js:1176:25) at test (file:///android_asset/www//opt/tct-audio-html5-tests/resources/testharness.js:428:18) at canPlayType_no_argument (file:///android_asset/www//opt/tct-audio-html5-tests/audio/support/mediaelement.js:245:5) at file:///android_asset/www//opt/tct-audio-html5-tests/audio/audio_canPlayType_no_argument.html:50:9)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_element" purpose="Check if audio element returns same audio element twice" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_element.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:41</start><end>2015-02-28 13:12:41</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_ogg_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream ogg vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:41</start><end>2015-02-28 13:12:42</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_wav_pcm" purpose="Check if user agent is able to pause playing audio playback for stream wav pcm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:42</start><end>2015-02-28 13:12:42</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_webm_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream webm vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:12:42</start><end>2015-02-28 13:12:43</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_ogg_vorbis" purpose="Check if user agent is able to play audio stream ogg theora vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:12:43</start><end>2015-02-28 13:12:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_wav_pcm" purpose="Check if user agent is able to play audio stream wav pcm with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:12:50</start><end>2015-02-28 13:12:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_webm_vorbis" purpose="Check if user agent is able to play audio stream webm vorbis with event ended fired when ended playback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:12:56</start><end>2015-02-28 13:13:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_ogg_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream ogg vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:02</start><end>2015-02-28 13:13:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_wav_pcm" purpose="Check if user agent is able to resume paused audio playback for stream wav pcm" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:09</start><end>2015-02-28 13:13:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_resume_webm_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream webm vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_resume_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:14</start><end>2015-02-28 13:13:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_ogg_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream ogg vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:21</start><end>2015-02-28 13:13:27</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_wav_pcm" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream wav pcm" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:27</start><end>2015-02-28 13:13:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seek_webm_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream webm vorbis" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seek_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:13:32</start><end>2015-02-28 13:13:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_ogg_vorbis" purpose="Check if user agent is able to stop audio playback for stream ogg vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_ogg_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:39</start><end>2015-02-28 13:13:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_wav_pcm" purpose="Check if user agent is able to stop audio playback for stream wav pcm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_wav_pcm.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:39</start><end>2015-02-28 13:13:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_stop_webm_vorbis" purpose="Check if user agent is able to stop audio playback for stream webm vorbis" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_stop_webm_vorbis.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:40</start><end>2015-02-28 13:13:41</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_mp4_aac" purpose="Check if the audio element can pause the AAC decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_mp4_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:41</start><end>2015-02-28 13:13:43</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_mp4_aac" purpose="Check if the audio element can play the AAC decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_mp4_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:43</start><end>2015-02-28 13:13:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_mp3" purpose="Check if the audio element can pause the MP3 decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:44</start><end>2015-02-28 13:13:46</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_mp3" purpose="Check if the audio element can play the MP3 decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_mp3.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:46</start><end>2015-02-28 13:13:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_aac" purpose="Check if the audio element can pause the AAC decoding format and the container format is aac" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:47</start><end>2015-02-28 13:13:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_aac" purpose="Check if the audio element can play the AAC decoding format and the container format is aac" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_aac.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:49</start><end>2015-02-28 13:13:50</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_amr" purpose="Check if the audio element can pause the AMR-NB decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_pause_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:50</start><end>2015-02-28 13:13:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_amr" purpose="Check if the audio element can play the AMR-NB decoding format audio file" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/audio_play_amr.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:52</start><end>2015-02-28 13:13:53</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_empty_string" purpose="Check if the attribute audio.autoplay is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:53</start><end>2015-02-28 13:13:53</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_null" purpose="Check if the value of attribute of audio.autoplay is false when you set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:55</start><end>2015-02-28 13:13:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_onloadedmetadata" purpose="Check if audio.autoplay attribute invoked,then audio.onloadedmetadata() function triggered" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_onloadedmetadata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:55</start><end>2015-02-28 13:13:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_autoplay_true_autoplay_present" purpose="Check if audio.autoplay returns true when the controls attribute is present in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_autoplay_true_autoplay_present.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:55</start><end>2015-02-28 13:13:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_end_type" purpose="Check if the type of audio.buffered.end is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_end_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:56</start><end>2015-02-28 13:13:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_length_default_value" purpose="Check if the audio.buffered length is zero,typically this will be a single range anchored at the zero point" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:56</start><end>2015-02-28 13:13:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_readonly" purpose="Check if the audio.buffered attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:57</start><end>2015-02-28 13:13:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_buffered_start_type" purpose="Check if the type of audio.buffered.start is function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_buffered_start_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:57</start><end>2015-02-28 13:13:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_codecs_order" purpose="Check if the codecs parameter order of audio.canPlayType" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_codecs_order.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:58</start><end>2015-02-28 13:13:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_empty_string" purpose="Check if audio.canPlayType return empty string if arguments is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:58</start><end>2015-02-28 13:13:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_method_type" purpose="Check if the type of audio.canplayType is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:13:58</start><end>2015-02-28 13:13:59</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_return_maybe" purpose="Check if audio.canPlayType() return maybe if the argument is 'audio/ogg'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_return_maybe.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:01</start><end>2015-02-28 13:14:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_return_probably" purpose="Check if the method audio.canPlayType() return probably if video can play the ogg type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_return_probably.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:01</start><end>2015-02-28 13:14:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_constructor_src" purpose="Check if new Audio( url ) returns a new audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_constructor_src.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:01</start><end>2015-02-28 13:14:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_default_value" purpose="Check if the defaut value of audio.controller is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controller_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:02</start><end>2015-02-28 13:14:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controller_MediaController" purpose="Check if the attribute audio.controller is not null when set it an object MediaController" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controller_MediaController.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:02</start><end>2015-02-28 13:14:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_empty_string" purpose="Check if the value of attribute audio.controls is false when set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:03</start><end>2015-02-28 13:14:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_false_controls_absent" purpose="Check if audio.controls returns false when the controls attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_false_controls_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:03</start><end>2015-02-28 13:14:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_controls_null" purpose="Check if the value of attribute audio.controls is false when set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_controls_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:03</start><end>2015-02-28 13:14:04</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_default_value" purpose="Check if the default value of audio.currentSrc is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:04</start><end>2015-02-28 13:14:04</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_readonly" purpose="Check if the audio.currentSrc attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:04</start><end>2015-02-28 13:14:05</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_src_empty_string" purpose="Check if audio.currentSrc is empty string when set the audio.src empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_src_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:07</start><end>2015-02-28 13:14:07</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentSrc_src_null" purpose="Check if audio.currentSrc is empty string when set the audio.src null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentSrc_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:07</start><end>2015-02-28 13:14:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_basic" purpose="Check if the audio.currentTime attribute return the current playback position it was set to 10" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:14:08</start><end>2015-02-28 13:14:08</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_default_value" purpose="Check if the audio.currentTime attribute initially be zero seconds in the absence of media data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:08</start><end>2015-02-28 13:14:08</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_exception_INVALID_STATE_ERR" purpose="Check if the audio.currentTime attribute on setting that expecting TYPE_MISMATCH_ERR exception is to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_exception_INVALID_STATE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:08</start><end>2015-02-28 13:14:09</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_duration" purpose="Check if the audio.currentTime attribute return the end playback position it was set to duration" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:14:09</start><end>2015-02-28 13:14:09</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_later_end" purpose="Check if the audio.currentTime attribute return the end playback position it was set to later than the end of the media resource" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_later_end.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:09</start><end>2015-02-28 13:14:10</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_currentTime_value_null" purpose="Check if the audio.currentTime attribute on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_currentTime_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:10</start><end>2015-02-28 13:14:10</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_empty_string" purpose="Check if the value of the attribute audio.defaultMuted set empty string,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultMuted_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:10</start><end>2015-02-28 13:14:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultMuted_null" purpose="Check if the value of the attribute audio.defaultMuted set null,then compare media.defaultMuted is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultMuted_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:11</start><end>2015-02-28 13:14:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_basic" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0.5 it was set to 0.5" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:13</start><end>2015-02-28 13:14:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_default_value" purpose="Check if the audio.defaultPlaybackRate attribute return 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:13</start><end>2015-02-28 13:14:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_value_null" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:13</start><end>2015-02-28 13:14:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_defaultPlaybackRate_value_zero" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_defaultPlaybackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:14</start><end>2015-02-28 13:14:14</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_readonly" purpose="Check if the audio.duration attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:14</start><end>2015-02-28 13:14:15</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_value_NaN" purpose="Check if the audio.duration attribute return the Not-a-Number (NaN) value if no media data is available" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_value_NaN.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:15</start><end>2015-02-28 13:14:15</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_duration_attribute_value_resource" purpose="Check if the audio.duration attribute return the time of the end of the media resource" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_duration_attribute_value_resource.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:14:15</start><end>2015-02-28 13:14:16</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_attribute_readonly" purpose="Check if audio.ended is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:16</start><end>2015-02-28 13:14:16</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_canplaythrough" purpose="Check if the attribute audio.ended should be false during canplaythrough event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_canplaythrough.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:16</start><end>2015-02-28 13:14:17</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_currentTime_duration" purpose="Check if the value of attribute audio.ended is true when set currentTime audio.durations" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_currentTime_duration.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:14:17</start><end>2015-02-28 13:14:17</end><stdout>assert_true: expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_loaddata" purpose="Check if the value of attribute audio.ended is false during loadeddata event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_loaddata.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:19</start><end>2015-02-28 13:14:19</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ended_playing" purpose="Check if the value of attribute audio.ended is false during playing event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ended_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:19</start><end>2015-02-28 13:14:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_MEDIA_ERR_SRC_NOT_SUPPORTED" purpose="Check if audio.error.code is MEDIA_ERR_SRC_NOT_SUPPORTED if the source not support" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_error_MEDIA_ERR_SRC_NOT_SUPPORTED.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:20</start><end>2015-02-28 13:14:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_error_readonly" purpose="Check if the audio.error attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_error_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:20</start><end>2015-02-28 13:14:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method" purpose="Check if audio.load can start selecting and loading a new media resource from scratch" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:21</start><end>2015-02-28 13:14:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_load_method_type" purpose="Check if the type of audio.load is 'function'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_load_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:21</start><end>2015-02-28 13:14:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_no_effect_by_controller" onload_delay="10" purpose="Checks that expecting the loop attribute has no effect, when the audio element has a current media controller" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_no_effect_by_controller.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:21</start><end>2015-02-28 13:14:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_empty_string" purpose="Check if the value of the attribute audio.loop is false if set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:29</start><end>2015-02-28 13:14:29</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_false_loop_absent" purpose="Check if audio.loop returns false when the loop attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_false_loop_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:29</start><end>2015-02-28 13:14:30</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_loop_null" purpose="Check if the value of the attribute audio.loop is false if set it null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_loop_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:30</start><end>2015-02-28 13:14:30</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_readonly" purpose="Check if audio.MediaController.buffered is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:31</start><end>2015-02-28 13:14:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_buffered_type" purpose="Check if audio.MediaController.buffered is of type object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_buffered_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:31</start><end>2015-02-28 13:14:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_oncanplaythrough_event" purpose="Check if audio.controller.canplaythrough event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_oncanplaythrough_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:31</start><end>2015-02-28 13:14:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_oncanplay_event" purpose="Check if audio.controller.canplay event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_oncanplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:32</start><end>2015-02-28 13:14:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_currentTime_type" purpose="Check if audio.MediaController.currentTime is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_currentTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:32</start><end>2015-02-28 13:14:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_defaultPlaybackRate_type" purpose="Check if audio.MediaController.defaultPlaybackRate is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_defaultPlaybackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:33</start><end>2015-02-28 13:14:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_readonly" purpose="Check if audio.MediaController.duration is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:33</start><end>2015-02-28 13:14:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_duration_type" purpose="Check if audio.MediaController.duration is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_duration_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:34</start><end>2015-02-28 13:14:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onemptied_event" onload_delay="12" purpose="Check if audio.controller.emptied event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:34</start><end>2015-02-28 13:14:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onloadeddata_event" purpose="Check if audio.controller.loadeddata event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onloadeddata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:40</start><end>2015-02-28 13:14:41</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onloadedmetadata_event" purpose="Check if audio.controller.loadedmetadata event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onloadedmetadata_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:43</start><end>2015-02-28 13:14:43</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_muted_type" purpose="Check if audio.MediaController.muted is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_muted_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:43</start><end>2015-02-28 13:14:43</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_readonly" purpose="Check if audio.MediaController.paused is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:43</start><end>2015-02-28 13:14:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_paused_type" purpose="Check if audio.MediaController.paused is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_paused_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:44</start><end>2015-02-28 13:14:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onpause_event" purpose="Check if audio.controller.pause event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:44</start><end>2015-02-28 13:14:45</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_pause_type" purpose="Check if audio.MediaController.pause is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_pause_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:45</start><end>2015-02-28 13:14:45</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackRate_type" purpose="Check if audio.MediaController.playbackRate is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:45</start><end>2015-02-28 13:14:46</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_readonly" purpose="Check if audio.MediaController.played is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:46</start><end>2015-02-28 13:14:46</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_played_type" purpose="Check if audio.MediaController.played is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_played_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:46</start><end>2015-02-28 13:14:46</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onplaying_event" purpose="Check if audio.controller.playing event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onplaying_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:46</start><end>2015-02-28 13:14:47</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onplay_event" purpose="Check if audio.controller.play event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onplay_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:49</start><end>2015-02-28 13:14:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_play_type" purpose="Check if audio.MediaController.play is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_play_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:49</start><end>2015-02-28 13:14:49</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onratechange_event" purpose="Check if audio.controller.ratechange event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onratechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:49</start><end>2015-02-28 13:14:50</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_readonly" purpose="Check if audio.MediaController.seekable is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:50</start><end>2015-02-28 13:14:50</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_seekable_type" purpose="Check if audio.MediaController.seekable is of type object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_seekable_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:50</start><end>2015-02-28 13:14:51</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onvolumechange_event" purpose="Check if audio.controller.volumechange event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onvolumechange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:51</start><end>2015-02-28 13:14:51</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_volume_type" purpose="Check if audio.MediaController.volume is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_volume_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:51</start><end>2015-02-28 13:14:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_onwaiting_event" purpose="Check if audio.controller.waiting event occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:52</start><end>2015-02-28 13:14:53</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_readonly" purpose="Check if audio.error.code is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:53</start><end>2015-02-28 13:14:54</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_code_type" purpose="Check if the type of audio.error.code is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_code_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:54</start><end>2015-02-28 13:14:54</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_ABORTED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:55</start><end>2015-02-28 13:14:55</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_ABORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_ABORTED const value is 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_ABORTED_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:55</start><end>2015-02-28 13:14:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_DECODE is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:56</start><end>2015-02-28 13:14:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_DECODE_constant_value" purpose="Check if audio.error.MEDIA_ERR_DECODE const value is 3" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_DECODE_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:56</start><end>2015-02-28 13:14:56</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_NETWORK is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:56</start><end>2015-02-28 13:14:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_NETWORK_constant_value" purpose="Check if audio.error.MEDIA_ERR_NETWORK const value is 2" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_NETWORK_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:57</start><end>2015-02-28 13:14:57</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED is 'number'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:57</start><end>2015-02-28 13:14:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED const value is 4" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:58</start><end>2015-02-28 13:14:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_empty_string" purpose="Check if the value of attribute of audio.mediaGroup is empty string when you set it empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:14:58</start><end>2015-02-28 13:14:59</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_null" purpose="Check if the value of attribute audio.mediaGroup is empty string when set it null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_null.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:14:59</start><end>2015-02-28 13:14:59</end><stdout>assert_true: media.mediaGroup is empty string expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_mediaGroup_valid_value" purpose="Check if the value of audio.mediaGroup is valid" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_mediaGroup_valid_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:01</start><end>2015-02-28 13:15:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_muted_false_muted_absent" purpose="Check if audio.muted returns false when the muted attribute is absent in the audio element" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_muted_false_muted_absent.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:01</start><end>2015-02-28 13:15:01</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_NETWORK_LOADING" purpose="Check if audio.networkState is NETWORK_LOADING when the user agent is actively trying to download data" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_NETWORK_LOADING.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:01</start><end>2015-02-28 13:15:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_NETWORK_NO_SOURCE" purpose="Check if audio.networkState is NETWORK_NO_SOURCE when not yet found a resource to use" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_NETWORK_NO_SOURCE.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:02</start><end>2015-02-28 13:15:02</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_networkState_readonly" purpose="Check if the audio.networkState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_networkState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:02</start><end>2015-02-28 13:15:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ondurationchange_event" purpose="Check if the event audio.ondurationchange occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ondurationchange_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:03</start><end>2015-02-28 13:15:03</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onemptied_event" purpose="Check if the event audio.onemptied occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onemptied_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:03</start><end>2015-02-28 13:15:04</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onended_event" onload_delay="8" purpose="Check if the event audio.onended occurs when media resource is end" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onended_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:15:04</start><end>2015-02-28 13:15:20</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onerror_event" purpose="Check if the event audio.onerror occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onerror_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:20</start><end>2015-02-28 13:15:21</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onpause_event" purpose="Check if the event audio.onpause occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onpause_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:21</start><end>2015-02-28 13:15:22</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onratechange_event_defaultPlaybackRate" purpose="Check if the event audio.onratechange occurs when defaultPlaybackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onratechange_event_defaultPlaybackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:23</start><end>2015-02-28 13:15:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onratechange_event_playbackRate" purpose="Check if the event audio.onratechange occurs when playbackRate changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onratechange_event_playbackRate.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:24</start><end>2015-02-28 13:15:24</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onseeking_event" purpose="Check if the event audio.onseeking occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onseeking_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:24</start><end>2015-02-28 13:15:25</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_ontimeupdate_event" purpose="Check if the event audio.ontimeupdate occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_ontimeupdate_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:15:25</start><end>2015-02-28 13:15:31</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onvolumechange_event_muted" purpose="Check if the event audio.onvolumechange occurs when muted changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onvolumechange_event_muted.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:31</start><end>2015-02-28 13:15:32</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onvolumechange_event_volume" purpose="Check if the event audio.onvolumechange occurs when volume changed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onvolumechange_event_volume.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:32</start><end>2015-02-28 13:15:33</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_onwaiting_event" purpose="Check if the event audio.onwaiting occurs" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_onwaiting_event.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:33</start><end>2015-02-28 13:15:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_paused_attribute_readonly" purpose="Check if the audio.paused attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_paused_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:34</start><end>2015-02-28 13:15:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_pause_method_type" purpose="Check if audio.pause is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_pause_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:34</start><end>2015-02-28 13:15:34</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_basic" purpose="Check if the audio.playbackRate attribute that on getting it must return 4.0 it was set to 4.0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:34</start><end>2015-02-28 13:15:35</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_default_value" purpose="Check if the audio.playbackRate attribute value is 1.0 if it hasn't yet been set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:37</start><end>2015-02-28 13:15:37</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_value_null" purpose="Check if the audio.playbackRate attribute return 0 it was set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_value_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:37</start><end>2015-02-28 13:15:38</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_playbackRate_value_zero" purpose="Check if the audio.playbackRate attribute that on getting it must return 0 it was set to 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_playbackRate_value_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:38</start><end>2015-02-28 13:15:38</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_attribute_readonly" purpose="Check if audio.played attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_played_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:38</start><end>2015-02-28 13:15:38</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_played_length_default_value" purpose="Check if default value of the attribute audio.played.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_played_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:38</start><end>2015-02-28 13:15:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_play_method_type" purpose="Check if audio.play method is of type function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_play_method_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:39</start><end>2015-02-28 13:15:39</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_preload_auto" purpose="Check if audio.preload can be set to 'auto'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_preload_auto.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:39</start><end>2015-02-28 13:15:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_attribute_readonly" purpose="Check if audio.seekable attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seekable_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:40</start><end>2015-02-28 13:15:40</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seekable_length_default_value" purpose="Check if the default value of attribute audio.seekable.length is 0" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seekable_length_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:40</start><end>2015-02-28 13:15:41</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_attribute_readonly" purpose="Check if the audio.seeking attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seeking_attribute_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:41</start><end>2015-02-28 13:15:41</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_seeking_value_true" purpose="Check if the audio.seeking attribute returns true if the user agent is currently seeking" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_seeking_value_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:43</start><end>2015-02-28 13:15:43</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_basic" purpose="Check if audio.src can get src attibute value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:43</start><end>2015-02-28 13:15:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_default_value" purpose="Check if the default value of audio.src is a empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:44</start><end>2015-02-28 13:15:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_modify" purpose="Check if audio.src can be modified" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_modify.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:44</start><end>2015-02-28 13:15:44</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_src_null" purpose="Check if audio.src return empty string when you set it null" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_src_null.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-02-28 13:15:44</start><end>2015-02-28 13:15:45</end><stdout>assert_true: Audio Test: audio_src_default_value expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_end" purpose="Check if must return the position of the audio.TimeRanges.end of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_end.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:15:45</start><end>2015-02-28 13:15:51</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_readonly" purpose="Check if audio.TimeRanges.length is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:51</start><end>2015-02-28 13:15:51</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_length_type" purpose="Check if audio.TimeRanges.length is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_length_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:15:51</start><end>2015-02-28 13:15:52</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_TimeRanges_start" purpose="Check if must return the position of the audio.TimeRanges.start of the index" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_TimeRanges_start.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:15:52</start><end>2015-02-28 13:15:58</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_ended" purpose="Check if audio.controller.onended event occurs" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:15:58</start><end>2015-02-28 13:16:04</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_ended" purpose="Check if audio.MediaController.playbackState attribute is ended" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_ended.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-02-28 13:16:05</start><end>2015-02-28 13:16:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_playing" purpose="Check if audio.MediaController.playbackState attribute is playing" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_playing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:11</start><end>2015-02-28 13:16:11</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_readonly" purpose="Check if audio.MediaController.playbackState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:11</start><end>2015-02-28 13:16:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_playbackState_waiting" purpose="Check if audio.MediaController.playbackState attribute is waiting" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_playbackState_waiting.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:12</start><end>2015-02-28 13:16:12</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_MediaController_unpause_base" purpose="Check if audio.MediaController.unpause method, calling unpause method paused false callback play event" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_MediaController_unpause_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:12</start><end>2015-02-28 13:16:13</end><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_canPlayType_null" purpose="Check if audio.canPlayType return empty string if arguments is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-audio-html5-tests/audio/audio_canPlayType_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:13</start><end>2015-02-28 13:16:13</end><stdout /><stderr /></result_info></testcase>
      </set>
    <set name="Audio-ref" set_debug_msg="N/A" type="ref" ui-auto="wd">
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_one_inside_image_not_show" purpose="Check that image content inside the audio element can not be shown." result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/audio_001.htm</test_script_entry>
          <refer_test_script_entry timeout="90">/opt/tct-audio-html5-tests/audio/w3c/audio_content-ref.htm</refer_test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:20</start><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/HTML5 The audio element (Partial)" execution_type="auto" id="audio_two_inside_color_not_show" purpose="Check that color content inside the audio element can not be shown" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-audio-html5-tests/audio/w3c/audio_002.htm</test_script_entry>
          <refer_test_script_entry timeout="90">/opt/tct-audio-html5-tests/audio/w3c/audio_content-ref.htm</refer_test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-02-28 13:16:22</start><end /><stdout /><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>