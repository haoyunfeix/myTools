<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E6OKCY549771" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-28_05_21_49</start_at><end_at>2015-01-28_05_25_54</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-indexeddb-w3c-tests" widget="webapi-noneservice-tests">
    <set name="IndexDB" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_advance_exists" purpose="Check if IDBCursor.advance method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_advance_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:37</start><end>2015-01-28 05:22:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_direction_exists" purpose="Check if IDBCursor.direction method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_direction_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:38</start><end>2015-01-28 05:22:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_key_exist" purpose="Check if IDBCursor.key method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_key_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:39</start><end>2015-01-28 05:22:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_primaryKey_exist" purpose="Check if IDBCursor.primaryKey attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_primaryKey_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:39</start><end>2015-01-28 05:22:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_source_exists" purpose="Check if IDBCursor.source attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_source_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:40</start><end>2015-01-28 05:22:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursorWithValue_value_exist.html" purpose="Check if IDBCursorWithValue.value attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursorWithValue_value_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:41</start><end>2015-01-28 05:22:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_close_exist" purpose="Check if IDBDatabase.close method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_close_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:41</start><end>2015-01-28 05:22:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_exist" purpose="Check if IDBDatabaseSync.createObjectStore method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:42</start><end>2015-01-28 05:22:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_deleteObjectStore_exist" purpose="Check if IDBDatabase.deleteObjectStore method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_deleteObjectStore_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:43</start><end>2015-01-28 05:22:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_name_exist" purpose="Check if IDBDatabase.name attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_name_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:43</start><end>2015-01-28 05:22:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_objectStoreNames_exist" purpose="Check if IDBDatabase.objectStoreNames attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_objectStoreNames_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:44</start><end>2015-01-28 05:22:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onabort_exist" purpose="Check if IDBDatabase.onabort attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onabort_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:45</start><end>2015-01-28 05:22:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onerror_exist" purpose="Check if IDBDatabase.onerror attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onerror_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:45</start><end>2015-01-28 05:22:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onversionchange_exist" purpose="Check if IDBDatabase.onversionchange attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onversionchange_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:46</start><end>2015-01-28 05:22:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_exist" purpose="Check if IDBDatabase.transaction method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_transaction_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:47</start><end>2015-01-28 05:22:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_version_exist" purpose="Check if IDBDatabase.version attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_version_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:47</start><end>2015-01-28 05:22:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBEnvironment_indexedDB_exist" purpose="Check if IDBEnvironment.indexedDB attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBEnvironment_indexedDB_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:48</start><end>2015-01-28 05:22:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_cmp_exist" purpose="Check if IDBFactory.cmp method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_cmp_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:48</start><end>2015-01-28 05:22:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_deleteDatabase_exist" purpose="Check if IDBFactory.deleteDatabase method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_deleteDatabase_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:48</start><end>2015-01-28 05:22:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_exist" purpose="Check if IDBFactory.open method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_open_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:48</start><end>2015-01-28 05:22:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_count_exist" purpose="Check if IDBIndex.count method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_count_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:48</start><end>2015-01-28 05:22:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_keyPath_exists" purpose="Check if IDBIndex.keyPath attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_keyPath_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:49</start><end>2015-01-28 05:22:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_multiEntry_exist" purpose="Check if IDBIndex.multiEntry attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_multiEntry_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:50</start><end>2015-01-28 05:22:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_name_exist" purpose="Check if IDBIndex.name attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_name_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:50</start><end>2015-01-28 05:22:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_objectStore_exists" purpose="Check if IDBIndex.objectStore attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_objectStore_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:51</start><end>2015-01-28 05:22:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_exists" purpose="Check if IDBIndex.openCursor method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:51</start><end>2015-01-28 05:22:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_exist" purpose="Check if IDBIndex.openKeyCursor method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:52</start><end>2015-01-28 05:22:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_unique_exist" purpose="Check if IDBIndex.unique attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_unique_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:53</start><end>2015-01-28 05:22:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_exist" purpose="Check if IDBKeyRange.bound method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:53</start><end>2015-01-28 05:22:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lower" purpose="Check if IDBKeyRange.lower attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lower.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:53</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound" purpose="Check if IDBKeyRange.lowerBound method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerOpen_exist" purpose="Check if IDBKeyRange.lowerOpen attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerOpen_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_exist" purpose="Check if IDBKeyRange.only method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upper_exist" purpose="Check if IDBKeyRange.upper attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upper_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_exist" purpose="Check if IDBKeyRange.upperBound method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperOpen_exist" purpose="Check if IDBKeyRange.upperOpen attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperOpen_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_exist" purpose="Check if IDBObjectStore.add method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:54</start><end>2015-01-28 05:22:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_clear_exist" purpose="Check if IDBObjectStore.clear method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_clear_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:55</start><end>2015-01-28 05:22:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_count_exist" purpose="Check if IDBObjectStore.count method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_count_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:56</start><end>2015-01-28 05:22:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_exist" purpose="Check if IDBObjectStore.createIndex method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:56</start><end>2015-01-28 05:22:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_delete_exist" purpose="Check if IDBObjectStore.delete method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_delete_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:57</start><end>2015-01-28 05:22:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_deleteIndex_exist" purpose="Check if IDBObjectStore.deleteIndex method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_deleteIndex_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:58</start><end>2015-01-28 05:22:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_get_exist" purpose="Check if IDBObjectStore.get method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_get_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:58</start><end>2015-01-28 05:22:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_index_exits" purpose="Check if IDBObjectStore.index method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_index_exits.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:59</start><end>2015-01-28 05:22:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_indexNames_exist" purpose="Check if IDBObjectStore.indexNames method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_indexNames_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:22:59</start><end>2015-01-28 05:23:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_keyPath_exist" purpose="Check if IDBObjectStore.keyPath attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_keyPath_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:00</start><end>2015-01-28 05:23:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_name_exist" purpose="Check if IDBObjectStore.name attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_name_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:01</start><end>2015-01-28 05:23:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_openCursor_exist" purpose="Check if IDBObjectStore.openCursor method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_openCursor_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:01</start><end>2015-01-28 05:23:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_exist" purpose="Check if IDBObjectStore.put method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:02</start><end>2015-01-28 05:23:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_transaction_exist" purpose="Check if IDBObjectStore.transaction attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_transaction_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:03</start><end>2015-01-28 05:23:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBOpenDBRequest_onblocked_exist" purpose="Check if IDBOpenDBRequest.onblocked method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBOpenDBRequest_onblocked_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:03</start><end>2015-01-28 05:23:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBOpenDBRequest_onupgradeneeded_exist" purpose="Check if IDBOpenDBRequest.onupgradeneeded method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBOpenDBRequest_onupgradeneeded_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:04</start><end>2015-01-28 05:23:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_error_exist" purpose="Check if IDBRequest.error attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_error_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:05</start><end>2015-01-28 05:23:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_onerror_exist" purpose="Check if IDBRequest.onerror method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_onerror_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:05</start><end>2015-01-28 05:23:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_onsuccess_exist" purpose="Check if IDBRequest.onsuccess method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_onsuccess_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:06</start><end>2015-01-28 05:23:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_readyState_exist" purpose="Check if IDBRequest.readyState attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_readyState_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:07</start><end>2015-01-28 05:23:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_result_exist" purpose="Check if IDBRequest.result method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_result_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:07</start><end>2015-01-28 05:23:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_source_exist" purpose="Check if IDBRequest.source attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_source_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:08</start><end>2015-01-28 05:23:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_transaction_exist" purpose="Check if IDBRequest.transaction method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_transaction_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:09</start><end>2015-01-28 05:23:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_abort_exist" purpose="Check if IDBTransaction.abort method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_abort_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:09</start><end>2015-01-28 05:23:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_db_exist" purpose="Check if IDBTransaction.db attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_db_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:10</start><end>2015-01-28 05:23:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_mode_exist" purpose="Check if IDBTransaction.mode attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_mode_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:10</start><end>2015-01-28 05:23:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_objectStore_exist" purpose="Check if IDBTransaction.objectStore attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_objectStore_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:11</start><end>2015-01-28 05:23:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_onabort_exist" purpose="Check if IDBTransaction.onabort method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_onabort_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:12</start><end>2015-01-28 05:23:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_oncomplete_exist" purpose="Check if IDBTransaction.oncomplete method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_oncomplete_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:12</start><end>2015-01-28 05:23:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_onerror_exist" purpose="Check if IDBTransaction.onerror method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_onerror_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:13</start><end>2015-01-28 05:23:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_delete_exist" purpose="Check if IDBCursor.delete method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_delete_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:14</start><end>2015-01-28 05:23:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_update_exist" purpose="Check if IDBCursor.update method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_update_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:14</start><end>2015-01-28 05:23:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_transaction" purpose="Check if can open a database transaction with a invalid scope" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_transaction.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:15</start><end>2015-01-28 05:23:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add13" purpose="Check if can add a record with an invalid out of line key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add13.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:16</start><end>2015-01-28 05:23:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add11" purpose="Check if can add a record with an invalid in line key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add11.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:16</start><end>2015-01-28 05:23:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put12" purpose="Check if can put a record without define any keys" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put12.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:17</start><end>2015-01-28 05:23:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_get3" purpose="Check if the key is a Date" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_get3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:18</start><end>2015-01-28 05:23:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_get" purpose="Check if get() method returns records" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_get.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:18</start><end>2015-01-28 05:23:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_objectstore3" purpose="Check if can remove a record in an inactive transaction by object store" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_objectstore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:19</start><end>2015-01-28 05:23:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put9" purpose="Check if can put a record with an invalid in line key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put9.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:19</start><end>2015-01-28 05:23:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_objectstore3" purpose="Check if can modify a record in an inactive transaction by object store" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_objectstore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:20</start><end>2015-01-28 05:23:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_deleteObjectStore" purpose="Check if the name of object store removed from database when deleteObjectStore() method invoked" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_deleteObjectStore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:21</start><end>2015-01-28 05:23:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_createIndex2" purpose="Check if can create an index that the unique value is already exist on an object store " result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_createIndex2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:21</start><end>2015-01-28 05:23:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_objectstore4" purpose="Check if can iterate to the next record when the direction is already set to the previous one on object store" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_objectstore4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:22</start><end>2015-01-28 05:23:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_deleteIndex" purpose="Check if can remove the index when the deleteIndex() method invoked" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_deleteIndex.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:23</start><end>2015-01-28 05:23:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put7" purpose="Check if object store uses autoIncrement and out-of-line keys on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put7.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:23</start><end>2015-01-28 05:23:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore2" purpose="Check if create an object store with the correct 'name' and 'keyPath' properties" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:24</start><end>2015-01-28 05:23:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add6" purpose="Check if object store uses autoIncrement and inline keys on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add6.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:25</start><end>2015-01-28 05:23:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore6" purpose="Check if create an object store with an invalid key path" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore6.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:25</start><end>2015-01-28 05:23:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put8" purpose="Check if object store has properties of autoIncrement with true value and key path object on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put8.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:26</start><end>2015-01-28 05:23:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_index2" purpose="Check if can modify a record in a read-only transaction by index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_index2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:27</start><end>2015-01-28 05:23:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_deleteObjectStore3" purpose="Check if can remove an object store which does not exist" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_deleteObjectStore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:27</start><end>2015-01-28 05:23:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add10" purpose="Check if can call 'add' without a key argument when the object store intend to use out-of-line keys" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add10.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:28</start><end>2015-01-28 05:23:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put14" purpose="Check if can put a record with an invalid key in index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put14.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:29</start><end>2015-01-28 05:23:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_get" purpose="Check if the key is a number" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_get.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:29</start><end>2015-01-28 05:23:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_clear" purpose="Check if clear() method works" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_clear.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:30</start><end>2015-01-28 05:23:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_transaction2" purpose="Check if transaction() method has none mode argument" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_transaction2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:30</start><end>2015-01-28 05:23:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put6" purpose="Check if object store uses autoIncrement and inline keys on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put6.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:31</start><end>2015-01-28 05:23:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put5" purpose="Check if the key path of object store is an object attribute on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:32</start><end>2015-01-28 05:23:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_get4" purpose="Check if can retrieve a record that doesn't exist" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_get4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:32</start><end>2015-01-28 05:23:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put4" purpose="Check if object store can still put when the 'unique: true' specified by index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:33</start><end>2015-01-28 05:23:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore5" purpose="Check if the name of object store appears in database" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:34</start><end>2015-01-28 05:23:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore3" purpose="Check if can create an object store outside of a version changed transaction" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:34</start><end>2015-01-28 05:23:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_transaction3" purpose="Check if can open a transaction on closed database connection" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_transaction3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:35</start><end>2015-01-28 05:23:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put3" purpose="Check if the record of object store already has the same key existed on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:36</start><end>2015-01-28 05:23:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put2" purpose="Check if an object store uses out-of-line keys on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:36</start><end>2015-01-28 05:23:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_createIndex" purpose="Check if createIndex() method works" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_createIndex.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:37</start><end>2015-01-28 05:23:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_get2" purpose="Check if the key is a string" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_get2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:37</start><end>2015-01-28 05:23:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore" purpose="Check if createObjectStore() method works" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:38</start><end>2015-01-28 05:23:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add4" purpose="Check if object store can still add when the 'unique: true' specified by index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:39</start><end>2015-01-28 05:23:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_objectstore" purpose="Check if can modify a record in object store" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_objectstore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:40</start><end>2015-01-28 05:23:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add3" purpose="Check if the record of object store already has the same key existed on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:40</start><end>2015-01-28 05:23:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add8" purpose="Check if object store has properties of autoIncrement with true value and key path object on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add8.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:41</start><end>2015-01-28 05:23:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_delete2" purpose="Check if the key dismatch any records on delete() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_delete2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:42</start><end>2015-01-28 05:23:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_objectstore2" purpose="Check if can modify a record in a read-only transaction by object store" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_objectstore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:42</start><end>2015-01-28 05:23:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_clear2" purpose="Check if clear() method removes all records in an index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_clear2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:43</start><end>2015-01-28 05:23:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add5" purpose="Check if the key path of object store is an object attribute on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:44</start><end>2015-01-28 05:23:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_deleteObjectStore2" purpose="Check if can remove the object store outside of a version changed transaction" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_deleteObjectStore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:44</start><end>2015-01-28 05:23:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add12" purpose="Check if can call 'add' without in-line key defined " result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add12.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:45</start><end>2015-01-28 05:23:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add" purpose="Check if an object store uses in-line keys on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:46</start><end>2015-01-28 05:23:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put13" purpose="Check if can put a record with an invalid out of line key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put13.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:46</start><end>2015-01-28 05:23:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_getKey" purpose="Check if getKey() method works" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_getKey.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:47</start><end>2015-01-28 05:23:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_index" purpose="Check if index() method works" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:47</start><end>2015-01-28 05:23:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_index" purpose="Check if can modify a record in the object store by index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:48</start><end>2015-01-28 05:23:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put10" purpose="Check if can call 'put' without an key argument when the object store intend to use out-of-line keys" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put10.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:49</start><end>2015-01-28 05:23:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add2" purpose="Check if an object store uses out-of-line keys on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:49</start><end>2015-01-28 05:23:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_delete" purpose="Check if delete() method removes record with inline keys" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_delete.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:50</start><end>2015-01-28 05:23:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_delete4" purpose="Check if delete() method removes record with out-of-line keys" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_delete4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:51</start><end>2015-01-28 05:23:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put" purpose="Check if an object store uses in-line keys on put() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:51</start><end>2015-01-28 05:23:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add14" purpose="Check if can add a record with an invalid key in index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add14.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:52</start><end>2015-01-28 05:23:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_createObjectStore4" purpose="Check if can create an object store that already exists" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:53</start><end>2015-01-28 05:23:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_put11" purpose="Check if can put a record with an invalid key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_put11.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:53</start><end>2015-01-28 05:23:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_update_index3" purpose="Check if can modify a record in an inactive transaction by index" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_update_index3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:54</start><end>2015-01-28 05:23:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_delete3" purpose="Check if the key path of object store is an object attribute" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_delete3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:54</start><end>2015-01-28 05:23:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add9" purpose="Check if can add a record with an invalid  inline key" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add9.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:55</start><end>2015-01-28 05:23:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_add7" purpose="Check if object store uses autoIncrement and out-of-line keys on add() method" result="PASS">
        <description>
          <test_script_entry test_script_expected_result="0">/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_add7.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:56</start><end>2015-01-28 05:23:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idb_webworkers" purpose="Check if all instances of the WorkerUtils type are defined to also implement the IDBEnvironment interface" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idb_webworkers.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:56</start><end>2015-01-28 05:23:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_advance_base" purpose="Check if IDBCursor.advance() has normal arguments that expecting this method runs the steps for asynchronously executing a request" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_advance_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:57</start><end>2015-01-28 05:23:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_advance_objectstore" purpose="Check if IDBCursor.advance() iterate objectstore cursor number of times specified by count" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_advance_objectstore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:58</start><end>2015-01-28 05:23:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_advance_exception_InvalidStateError" purpose="Check if IDBCursor.advance() throws an exception InvalidStateError when the cursor is currently being iterated, or has iterated past its end" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_advance_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:58</start><end>2015-01-28 05:23:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_advance_exception_TransactionInactiveError" purpose="Check if IDBCursor.advance() throws an exception TransactionInactiveError when the value passed into the count parameter was zero or a negative number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_advance_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:23:59</start><end>2015-01-28 05:24:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_advance_exception_TypeError" purpose="Check if IDBCursor.advance() throws an exception TypeError when the value passed into the count parameter was zero or a negative number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_advance_exception_TypeError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:00</start><end>2015-01-28 05:24:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_continue_cursor_direction_nextunique" purpose="Check if IDBCursor.continue() throws an exception DataError when the key parameter is greater than or equal to this cursor's position and this cursor's direction is nextunique" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_continue_cursor_direction_nextunique.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:00</start><end>2015-01-28 05:24:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_advance_index" purpose="Check if IDBCursor.advance() iterate index cursor number of times specified by count" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_advance_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:01</start><end>2015-01-28 05:24:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_continue_exception_DataError" purpose="Check if IDBCursor.continue() throws an exception DataError when the key parameter was specified but did not contain a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_continue_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:02</start><end>2015-01-28 05:24:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_continue_exception_InvalidStateError" purpose="Check if IDBCursor.continue() throws an exception InvalidStateError when the cursor is currently being iterated, or has iterated past its end" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_continue_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:02</start><end>2015-01-28 05:24:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_continue_exception_TransactionInactiveError" purpose="Check if IDBCursor.continue() throws an exception TransactionInactiveError when the transaction this IDBCursor belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_continue_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:03</start><end>2015-01-28 05:24:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_index" purpose="Check if iterate to the next record by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:04</start><end>2015-01-28 05:24:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_index2" purpose="check to pass a key parameter is not a valid key by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_index2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:04</start><end>2015-01-28 05:24:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_index3" purpose="Check if can iterate to the previous record when the direction is set for the next record by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_index3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:05</start><end>2015-01-28 05:24:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_index4" purpose="Check if can iterate to the next record when the direction is set for the previous record by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_index4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:05</start><end>2015-01-28 05:24:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_continue_no_argument" purpose="Check if IDBCursor.continue() has no argument argument that expecting this method runs the steps for asynchronously executing a request" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:06</start><end>2015-01-28 05:24:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_objectstore" purpose="Check if iterate to the next record on index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_objectstore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:07</start><end>2015-01-28 05:24:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_objectstore2" purpose="Check if can pass a key parameter is not a valid key on objectstore" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_objectstore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:07</start><end>2015-01-28 05:24:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_continue_objectstore3" purpose="Check if can iterate to the previous record when the direction is set for the next record on objectstore" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_continue_objectstore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:08</start><end>2015-01-28 05:24:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_delete_exception_InvalidStateError" purpose="Check if IDBCursor.delete() throws an exception InvalidStateError when the cursor was created using openKeyCursor" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_delete_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:09</start><end>2015-01-28 05:24:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_index" purpose="Check if can remove a record from the object store by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_index.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:09</start><end>2015-01-28 05:24:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_index2" purpose="Check if can remove a record in a read-only transaction by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_index2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:10</start><end>2015-01-28 05:24:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_index3" purpose="Check if can remove a record in an inactive transaction by index" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_index3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:11</start><end>2015-01-28 05:24:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_objectstore" purpose="Check if can remove a record from the object store by objectstore" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_objectstore.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:11</start><end>2015-01-28 05:24:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbcursor_delete_objectstore2" purpose="Check if can remove a record in a read-only transaction by object store" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbcursor_delete_objectstore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:12</start><end>2015-01-28 05:24:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_direction_readonly" purpose="Check if IDBCursor.direction attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_direction_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:13</start><end>2015-01-28 05:24:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_key_normal_value" purpose="Check if the value of IDBCursor.key attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_key_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:13</start><end>2015-01-28 05:24:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_key_readonly" purpose="Check if IDBCursor.key attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_key_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:14</start><end>2015-01-28 05:24:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_key_type" purpose="Check if IDBCursor.key attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_key_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:15</start><end>2015-01-28 05:24:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_primaryKey_normal_value" purpose="Check if the value of IDBCursor.primaryKey attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_primaryKey_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:15</start><end>2015-01-28 05:24:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_primaryKey_readonly" purpose="Check if IDBCursor.primaryKey attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_primaryKey_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:16</start><end>2015-01-28 05:24:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_primaryKey_type" purpose="Check if IDBCursor.primaryKey attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_primaryKey_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:17</start><end>2015-01-28 05:24:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_source_readonly" purpose="Check if IDBCursor.source attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_source_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:17</start><end>2015-01-28 05:24:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_source_type" purpose="Check if IDBCursor.source attribute is of object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_source_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:18</start><end>2015-01-28 05:24:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursor_update_exception_DataCloneError" purpose="Check if IDBCursor.update() throws an exception DataCloneError when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursor_update_exception_DataCloneError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:19</start><end>2015-01-28 05:24:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursorWithValue_value_readonly" purpose="Check if IDBCursorWithValue.value is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursorWithValue_value_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:19</start><end>2015-01-28 05:24:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBCursorWithValue_value_type" purpose="Check if IDBCursorWithValue.value attribute is of type object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBCursorWithValue_value_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:20</start><end>2015-01-28 05:24:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_close" purpose="Check if IDBDatabase.close() unblock the version change transaction created by an open database request" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_close.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:20</start><end>2015-01-28 05:24:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_close_base" purpose="Check if a database connection to be closed, when IDBDatabase.close() is called" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_close_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:21</start><end>2015-01-28 05:24:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbdatabase_close2" purpose="Check if IDBDatabase.close() unblock the delete database request" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_close2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:22</start><end>2015-01-28 05:24:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_base" purpose="Check if createObjectStore() has two valid arguments that expecting IDBObjectStore object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:22</start><end>2015-01-28 05:24:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_exception_ConstraintError" purpose="Check if IDBDatabase.createObjectStore() throws an exception ConstraintError when an object store with the same name, compared in a case-sensitive manner, already exists in the connected database" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:23</start><end>2015-01-28 05:24:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_exception_InvalidStateError" purpose="Check if IDBDatabase.createObjectStore() was not called from a VERSION_CHANGE transaction callback that expecting an exception InvalidStateError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_createObjectStore3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:24</start><end>2015-01-28 05:24:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_keyPath_Array_invalid" purpose="Check if IDBDatabase.createObjectStore() throws an exception SyntaxError when keyPath is an Array which any items is an invalid string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_keyPath_Array_invalid.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:24</start><end>2015-01-28 05:24:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_keyPath_empty_string" purpose="Check if IDBDatabase.createObjectStore() throws an exception InvalidAccessError when the keyPath parameter is specified to the empty string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_keyPath_empty_string.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:25</start><end>2015-01-28 05:24:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_mandatory" purpose="Check if createObjectStore() has a valid argument that expecting an IDBObjectStore object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:26</start><end>2015-01-28 05:24:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_createObjectStore_optionalparameters_null" purpose="Check if createObjectStore() has a null argument optionalParameters that expecting an IDBObjectStore object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_createObjectStore_optionalparameters_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:26</start><end>2015-01-28 05:24:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_deleteObjectStore_base" purpose="Check if deleteObjectStore() has a valid argument that expecting the object store to be destroy" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_deleteObjectStore_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:27</start><end>2015-01-28 05:24:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_deleteObjectStore_called_outside_VERSION_CHANGE" purpose="Check if IDBDatabase.deleteObjectStore() throws an exception InvalidStateError when deleteObjectStore() was not called from a VERSION_CHANGE transaction callback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_deleteObjectStore2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:28</start><end>2015-01-28 05:24:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_name_normal_value" purpose="Check if the value of IDBDatabase.name attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_name_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:28</start><end>2015-01-28 05:24:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_name_readonly" purpose="Check if IDBDatabase.name attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_name_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:29</start><end>2015-01-28 05:24:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_name_type" purpose="Check if IDBDatabase.name attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_name_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:30</start><end>2015-01-28 05:24:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_objectStoreNames_readonly" purpose="Check if IDBDatabase.objectStoreNames attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_objectStoreNames_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:30</start><end>2015-01-28 05:24:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_objectStoreNames_type" purpose="Check if IDBDatabase.objectStoreNames attribute is of type DOMStringList" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_objectStoreNames_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:31</start><end>2015-01-28 05:24:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onabort_base" purpose="Check if the abort event has been triggered that expecting an IDBDatabase.onabort handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onabort_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:32</start><end>2015-01-28 05:24:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onerror_base" purpose="Check if the error event has been triggered that expecting an IDBDatabase.onerror handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onerror_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:32</start><end>2015-01-28 05:24:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_onversionchange_base" purpose="Check if the versionchange event has been triggered that expecting IDBDatabase.onversionchange handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_onversionchange_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:33</start><end>2015-01-28 05:24:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_base" purpose="Check if transaction() has two valid arguments that expecting an IDBTransaction object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_transaction_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:34</start><end>2015-01-28 05:24:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_exception_InvalidAccessError" purpose="Check if IDBDatabase.transaction was called with an empty list of store names that expecting an exception InvalidAccessError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_transaction_exception_InvalidAccessError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:34</start><end>2015-01-28 05:24:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_exception_InvalidStateError" purpose="Check if the IDBDatabase.close() method has been called on this IDBDatabase instance that expecting an exception InvalidStateError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_transaction3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:35</start><end>2015-01-28 05:24:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_exception_NotFoundError" purpose="Check if one of the names provided in the storeNames argument doesn't exist in this database that expecting an exception NotFoundError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbdatabase_transaction.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:36</start><end>2015-01-28 05:24:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_mandatory" purpose="Check if transaction() has a valid argument that expecting an IDBTransaction object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_transaction_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:36</start><end>2015-01-28 05:24:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_transaction_return_type" purpose="Check if the return type of IDBDatabase.transaction is IDBTransaction" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_transaction_return_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:37</start><end>2015-01-28 05:24:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_version_readonly" purpose="Check if IDBDatabase.version attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_version_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:37</start><end>2015-01-28 05:24:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBDatabase_version_type" purpose="Check if IDBDatabase.version attribute is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBDatabase_version_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:38</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBEnvironment_indexedDB_readonly" purpose="Check if IDBEnvironment.indexedDB attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBEnvironment_indexedDB_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBEnvironment_indexedDB_type" purpose="Check if IDBEnvironment.indexedDB attribute is of type IDBFactory" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBEnvironment_indexedDB_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_cmp" purpose="Check if the cmp() method returns correct value when compared keys" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_cmp.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_cmp_base" purpose="Check if IDBFactory.cmp() has two valid arguments that expecting a number object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_cmp_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_cmp_exception_DataError" purpose="Check if IDBFactory.cmp() throws an exception DataError when one of the supplied keys was not a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_cmp_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_deleteDatabase" purpose="Check if deleteDatabase() method must create a request with no source when invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_deleteDatabase.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:39</start><end>2015-01-28 05:24:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_base" purpose="Check if IDBFactory.open() has two valid arguments that expecting an IDBOpenDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_open_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:40</start><end>2015-01-28 05:24:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_return_event_type_success" purpose="Check if the type of event is success when a success is returned from IDBFactory.open()" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_open_return_event_type_success.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:41</start><end>2015-01-28 05:24:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_source_null" purpose="Check if open() method must create a request with no source when invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBFactory_open_source_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:41</start><end>2015-01-28 05:24:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_version_negative" purpose="Check if the value of IDBFactory.version is a negative number that expecting an exception TypeError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open9.htm?total_num=17&amp;locator_key=id&amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:42</start><end>2015-01-28 05:24:43</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBFactory_open_version_zero" purpose="Check if the value of IDBFactory.version is zero that expecting an exception TypeError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open9.htm?total_num=17&amp;locator_key=id&amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:43</start><end>2015-01-28 05:24:43</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open2" purpose="Check if can open database when database 'name' and 'version' are correctly set" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:43</start><end>2015-01-28 05:24:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open3" purpose="Check if can open current database when no version" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:43</start><end>2015-01-28 05:24:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open4" purpose="Check if can open current database when new database has default version" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:44</start><end>2015-01-28 05:24:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open5" purpose="Check if the new database is empty" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:45</start><end>2015-01-28 05:24:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open6" purpose="Check if can open database with a lower version than current" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open6.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:45</start><end>2015-01-28 05:24:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open7" purpose="Check if can open database with a higher version than current" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open7.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:46</start><end>2015-01-28 05:24:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbfactory_open8" purpose="Check if an error event will occur when in version change transaction aborts open" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbfactory_open8.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:46</start><end>2015-01-28 05:24:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_count" purpose="Check if IDBObjectStore.count() returns the number of records in the object store" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_count.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:47</start><end>2015-01-28 05:24:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_count_exception_DataError" purpose="Check if IDBIndex.count() throws an exception DataError when the key parameter is not a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_count_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:48</start><end>2015-01-28 05:24:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_count_exception_InvalidStateError" purpose="Check if IDBIndex.count() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_count_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:48</start><end>2015-01-28 05:24:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_count_no_argument" purpose="Check if IDBIndex.count() has no argument that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_count_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:49</start><end>2015-01-28 05:24:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_count2" purpose="Check if IDBObjectStore.count() returns the number of records that have keys within the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_count2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:50</start><end>2015-01-28 05:24:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_get_base" purpose="Check if IDBIndex.get() has valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_get_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:50</start><end>2015-01-28 05:24:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_get_exception_DataError" purpose="Check if IDBIndex.get() throws an exception DataError when the range parameter is not passed key range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_get_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:51</start><end>2015-01-28 05:24:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_get_exception_InvalidStateError" purpose="Check if IDBIndex.get() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_get_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:52</start><end>2015-01-28 05:24:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_get_exception_TransactionInactiveError" purpose="Check if IDBIndex.get() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_get_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:52</start><end>2015-01-28 05:24:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_get2" purpose="Check if can retrieve record where the index contains duplicate values" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_get2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:53</start><end>2015-01-28 05:24:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_get3" purpose="Check if IDBIndex.get() can retrieve a record that doesn't exist" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_get3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:54</start><end>2015-01-28 05:24:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_get4" purpose="Check if IDBIndex.get() returns the record with the first key in the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_get4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:54</start><end>2015-01-28 05:24:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_getKey_base" purpose="Check if IDBIndex.getKey() has valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_getKey_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:55</start><end>2015-01-28 05:24:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_getKey_exception_DataError" purpose="Check if IDBIndex.getKey() throws an exception DataError when the range parameter is not passed key range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_getKey_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:55</start><end>2015-01-28 05:24:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_getKey_exception_InvalidStateError" purpose="Check if IDBIndex.getKey() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_getKey_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:56</start><end>2015-01-28 05:24:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_getKey_exception_TransactionInactiveError" purpose="Check if IDBIndex.getKey() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_getKey_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:57</start><end>2015-01-28 05:24:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_getKey2" purpose="Check if can retrieve record's primary key where the index contains duplicate values" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_getKey2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:57</start><end>2015-01-28 05:24:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_getKey3" purpose="Check if IDBIndex.getKey() can retrieve a record that doesn't exist" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_getKey3.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:58</start><end>2015-01-28 05:24:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbindex_getKey4" purpose="Check if IDBIndex.getKey() returns the record with the first key in the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbindex_getKey4.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:59</start><end>2015-01-28 05:24:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_keyPath_normal_value" purpose="Check if the value of IDBIndex.keyPath attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_keyPath_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:24:59</start><end>2015-01-28 05:25:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_keyPath_readonly" purpose="Check if IDBIndex.keyPath attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_keyPath_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:00</start><end>2015-01-28 05:25:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_keyPath_type" purpose="Check if IDBIndex.keyPath attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_keyPath_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:01</start><end>2015-01-28 05:25:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_multiEntry_readonly" purpose="Check if IDBIndex.multientry attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_multiEntry_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:01</start><end>2015-01-28 05:25:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_multiEntry_type" purpose="Check if IDBIndex.multientry attribute is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_multiEntry_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:02</start><end>2015-01-28 05:25:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_name_normal_value" purpose="Check if the value of IDBIndex.name attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_name_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:03</start><end>2015-01-28 05:25:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_name_readonly" purpose="Check if IDBIndex.name attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_name_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:03</start><end>2015-01-28 05:25:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_name_type" purpose="Check if IDBIndex.name attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_name_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:04</start><end>2015-01-28 05:25:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_objectStore_readonly" purpose="Check if IDBIndex.objectStore attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_objectStore_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:05</start><end>2015-01-28 05:25:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_objectStore_type" purpose="Check if IDBIndex.objectStore attribute is of type IDBObjectStore" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_objectStore_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:05</start><end>2015-01-28 05:25:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_base" purpose="Check if IDBIndex.openCursor() has valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:06</start><end>2015-01-28 05:25:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_exception_DataError" purpose="Check if IDBIndex.openCursor() throws an exception DataError when the range parameter is not passed key range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:06</start><end>2015-01-28 05:25:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_exception_InvalidStateError" purpose="Check if IDBIndex.openCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:07</start><end>2015-01-28 05:25:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_exception_TransactionInactiveError" purpose="Check if IDBIndex.openCursor() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:08</start><end>2015-01-28 05:25:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openCursor_no_argument" purpose="Check if IDBIndex.openCursor() has no argument that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openCursor_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:08</start><end>2015-01-28 05:25:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_base" purpose="Check if IDBIndex.openKeyCursor() has valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:09</start><end>2015-01-28 05:25:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_exception_DataError" purpose="Check if IDBIndex.openKeyCursor() throws an exception DataError when the range parameter is not passed key range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:10</start><end>2015-01-28 05:25:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_exception_InvalidStateError" purpose="Check if IDBIndex.openKeyCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:10</start><end>2015-01-28 05:25:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_exception_TransactionInactiveError" purpose="Check if IDBIndex.openKeyCursor() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:11</start><end>2015-01-28 05:25:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_openKeyCursor_no_argument" purpose="Check if IDBIndex.openKeyCursor() has no argument that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_openKeyCursor_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:12</start><end>2015-01-28 05:25:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_unique_readonly" purpose="Check if IDBIndex.unique attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_unique_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:12</start><end>2015-01-28 05:25:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBIndex_unique_type" purpose="Check if IDBIndex.unique attribute is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBIndex_unique_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:13</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_base" purpose="Check if IDBKeyRange.bound() has four valid arguments that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbkeyrange.htm?total_num=7&amp;locator_key=id&amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_lower_invalid" purpose="Check if IDBKeyRange.bound() throws an exception DataError when the lower parameter is invalid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_lower_invalid.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_lower_larger_than_upper" purpose="Check if the lower key is greater than the upper key that expecting an exception DataError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_lower_larger_than_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_lowerOpen_default_false" purpose="Check if the default value of the parameter lowerOpen of IDBKeyRange.bound() is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_lowerOpen_default_false.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_mandatory" purpose="Check if IDBKeyRange.bound() has two valid arguments that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_return_lower_lower" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with lower set to lower" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_return_lower_lower.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_return_lowerOpen_lowerOpen" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with lowerOpen set to lowerOpen" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_return_lowerOpen_lowerOpen.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:14</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_return_type" purpose="Check if the rerutn type of IDBKeyRange.bound() is IDBKeyRange" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_return_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_return_upper_upper" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with upper set to upper" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_return_upper_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_return_upperOpen_upperOpen" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with upperOpen set to upperOpen" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_return_upperOpen_upperOpen.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_three_arguments" purpose="Check if IDBKeyRange.bound() has three valid arguments that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_three_arguments.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_upper_invalid" purpose="Check if IDBKeyRange.bound() throws an exception DataError when the upper parameter is invalid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_upper_invalid.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_bound_upperOpen_default_false" purpose="Check if the default value of the parameter upperOpen of IDBKeyRange.bound() is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_bound_upperOpen_default_false.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lower_normal_value" purpose="Check if the value of IDBKeyRange.lower attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lower_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:15</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lower_readonly" purpose="Check if IDBKeyRange.lower attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lower_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_base" purpose="Check if IDBKeyRange.lowerBound() has two valid arguments that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbkeyrange.htm?total_num=7&amp;locator_key=id&amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_exception_DataError" purpose="Check if IDBKeyRange.lowerBound() throws an exception DataError when the value parameter was not passed a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_mandatory" purpose="Check if IDBKeyRange.lowerBound() has a valid argument that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_return_lower_lower" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with lower set to lower" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_return_lower_lower.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_return_lowerOpen_open" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with lowerOpen set to open" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_return_lowerOpen_open.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_return_type" purpose="Check if the return type of IDBKeyRange.lowerBound() is IDBKeyRange" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_return_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:16</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_return_upper_undefined" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with upper set to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_return_upper_undefined.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerBound_return_upperOpen_true" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with upperOpen set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerBound_return_upperOpen_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerOpen_normal_value" purpose="Check if the value of IDBKeyRange.lowerOpen attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerOpen_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerOpen_readonly" purpose="Check if IDBKeyRange.lowerOpen attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerOpen_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_lowerOpen_type" purpose="Check if IDBKeyRange.lowerOpen attribute is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_lowerOpen_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_base" purpose="Check if IDBKeyRange.only() has a valid argument that an IDBKeyRange object is to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbkeyrange.htm?total_num=7&amp;locator_key=id&amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_exception_DataError" purpose="Check if only() has an argument null that expecting an exception DataError to be thrown" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:17</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_return_lower_value" purpose="Check if IDBKeyRange.only() creates and returns a new key range with lower set to value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_return_lower_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_return_lowerOpen_false" purpose="Check if IDBKeyRange.only() creates and returns a new key range with lowerOpen set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_return_lowerOpen_false.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_return_type" purpose="Check if the return type of IDBKeyRange.only() is IDBKeyRange" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_return_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_return_upper_value" purpose="Check if IDBKeyRange.only() creates and returns a new key range with upper set to value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_return_upper_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_only_return_upperOpen_false" purpose="Check if IDBKeyRange.only() creates and returns a new key range with upperOpen set to value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_only_return_upperOpen_false.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upper_normal_value" purpose="Check if the value of IDBKeyRange.upper attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upper_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upper_readonly" purpose="Check if IDBKeyRange.upper attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upper_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:18</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_base" purpose="Check if IDBKeyRange.upperBound() has two valid arguments that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbkeyrange.htm?total_num=7&amp;locator_key=id&amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_exception_DataError" purpose="Check if IDBKeyRange.upperBound() throws an exception DataError when the value parameter was not passed a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_mandatory" purpose="Check if IDBKeyRange.upperBound() has a valid argument that expecting a new key range to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_return_lower_undefined" purpose="Check if IDBKeyRange.upperbound() creates and returns a new key range with lower set to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_return_lower_undefined.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_return_lowerOpen_true" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with lowerOpen set to true" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_return_lowerOpen_true.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_return_type" purpose="Check if the return type of IDBKeyRange.upperBound() is IDBKeyRange" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_return_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_return_upper_value" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with upper set to value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_return_upper_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:19</start><end>2015-01-28 05:25:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperBound_return_upperOpen_open" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with upperOpen set to open" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperBound_return_upperOpen_open.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:20</start><end>2015-01-28 05:25:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperOpen_normal_value" purpose="Check if the value of IDBKeyRange.upperOpen attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperOpen_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:20</start><end>2015-01-28 05:25:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperOpen_readonly" purpose="Check if IDBKeyRange.upperOpen attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperOpen_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:27</start><end>2015-01-28 05:25:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBKeyRange_upperOpen_type" purpose="Check if IDBKeyRange.upperOpen attribute is of type boolean" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBKeyRange_upperOpen_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:27</start><end>2015-01-28 05:25:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_exception_DataCloneError" purpose="Check if IDBObjectStore.add() throws an exception DataCloneErro when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_exception_DataCloneError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:27</start><end>2015-01-28 05:25:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_exception_InvalidStateError" purpose="Check if IDBObjectStore.add() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:28</start><end>2015-01-28 05:25:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_exception_ReadOnlyError" purpose="Check if IDBObjectStore.add() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_exception_ReadOnlyError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:28</start><end>2015-01-28 05:25:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.add() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:29</start><end>2015-01-28 05:25:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_add_mandatory" purpose="Check if IDBObjectStore.add() has one mandatory normal argument that expecting IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_add_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:30</start><end>2015-01-28 05:25:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_clear_base" purpose="Check if IDBObjectStore.clear() runs the steps for asynchronously executing a request and returns the IDBRequest created by these steps" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_clear_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:30</start><end>2015-01-28 05:25:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_clear_exception_InvalidStateError" purpose="Check if IDBObjectStore.clear() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_clear_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:31</start><end>2015-01-28 05:25:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_clear_exception_ReadOnlyError" purpose="Check if IDBObjectStore.clear() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_clear_exception_ReadOnlyError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:32</start><end>2015-01-28 05:25:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_clear_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.clear() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_clear_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:32</start><end>2015-01-28 05:25:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_count" purpose="Check if the count() method returns the number of records in the object store" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_count.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:33</start><end>2015-01-28 05:25:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_count_base" purpose="Check if IDBObjectStore.count() has all valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_count_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:34</start><end>2015-01-28 05:25:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_count_exception_DataError" purpose="Check if IDBObjectStore.count() throws an exception DataError when the key parameter is not a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_count_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:34</start><end>2015-01-28 05:25:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_count_exception_InvalidStateError" purpose="Check if IDBObjectStore.count() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_count_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:35</start><end>2015-01-28 05:25:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_count_no_argument" purpose="Check if IDBObjectStore.count() has no argument that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_count_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:35</start><end>2015-01-28 05:25:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_count2" purpose="Check if the count() method returns the number of records that have keys within the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_count2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:36</start><end>2015-01-28 05:25:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_exception_ConstraintError" purpose="Check if IDBObjectStore.createIndex() throws an exception ConstraintError when an index with the same name already exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_exception_ConstraintError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:37</start><end>2015-01-28 05:25:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_exception_InvalidStateError" purpose="Check if IDBObjectStore.createIndex() throws an exception InvalidStateError when this function is called from outside a VERSION_CHANGE transaction callback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:37</start><end>2015-01-28 05:25:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_exception_NotSupportedError" purpose="Check if IDBObjectStore.createIndex() throws an exception NotSupportedError when keyPath is an Array and the multientry property in the optionalParameters is true" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_exception_NotSupportedError.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 05:25:38</start><end>2015-01-28 05:25:39</end><stdout>[Message] *Check if IDBObjectStore.createIndex() throws an exception NotSupportedError when keyPath is an Array and the multientry property in the optionalParameters is true: assert_throws: function "function () {\n                    objStore.createIndex("n..." threw object "InvalidAccessError: Failed to execute 'createIndex' on 'I..." that is not a DOMException NotSupportedError: property "code" is equal to 15, expected 9</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_keyPath_string_invalid" purpose="Check if IDBObjectStore.createIndex() throws an exception SyntaxError when keyPath is a string and is not a valid key path" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_keyPath_string_invalid.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:39</start><end>2015-01-28 05:25:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_mandatory" purpose="Check if IDBObjectStore.createIndex() has two mandatory valid argument that new index is to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:39</start><end>2015-01-28 05:25:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_createIndex_optionalParameters_null" purpose="Check if IDBObjectStore.createIndex() has a null argument optionalParameters that new index is to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_createIndex_optionalParameters_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:40</start><end>2015-01-28 05:25:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_delete_exception_DataError" purpose="Check if IDBObjectStore.delete() throws an exception DataError when the key parameter is not a valid key or a key range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_delete_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:41</start><end>2015-01-28 05:25:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_delete_exception_ReadOnlyError" purpose="Check if IDBObjectStore.delete() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_delete_exception_ReadOnlyError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:41</start><end>2015-01-28 05:25:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_delete_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.delete() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_delete_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:42</start><end>2015-01-28 05:25:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_delete5" purpose="Check if IDBObjectStore.delete() can removes all of the records in the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_delete5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:42</start><end>2015-01-28 05:25:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_deleteIndex_exception_InvalidStateError" purpose="Check if IDBObjectStore.deleteIndex() throws an exception InvalidStateError when this method was not called from a VERSION_CHANGE transaction callback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_deleteIndex_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:43</start><end>2015-01-28 05:25:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_deleteIndex_exception_NotFoundError" purpose="Check if IDBObjectStore.deleteIndex() throws an exception NotFoundError when there is no index with the given name" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_deleteIndex.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:44</start><end>2015-01-28 05:25:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_get_exception_DataError" purpose="Check if IDBObjectStore.get() throws an exception DataError when the key parameter is not a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_get_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:45</start><end>2015-01-28 05:25:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_get_exception_InvalidStateError" purpose="Check if IDBObjectStore.get() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_get_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:45</start><end>2015-01-28 05:25:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_get_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.get() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_get_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:46</start><end>2015-01-28 05:25:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="idbobjectstore_get5" purpose="Check if IDBObjectStore.get() returns the record with the first key in the range" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/idbobjectstore_get5.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:46</start><end>2015-01-28 05:25:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_index_exception_InvalidStateError" purpose="Check if IDBObjectStore.index() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_index_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:47</start><end>2015-01-28 05:25:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_index_exception_NotFoundError" purpose="Check if IDBObjectStore.index() throws an exception NotFoundError when there is no index with the given name" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_index_exception_NotFoundError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:48</start><end>2015-01-28 05:25:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_indexNames_normal_value" purpose="Check if the value of IDBObjectStore.indexNames attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_indexNames_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:48</start><end>2015-01-28 05:25:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_indexNames_readonly" purpose="Check if IDBObjectStore.indexNames attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_indexNames_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:49</start><end>2015-01-28 05:25:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_indexNames_type" purpose="Check if IDBObjectStore.indexNames attribute is of type DOMStringList" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_indexNames_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:50</start><end>2015-01-28 05:25:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_keyPath_normal_value" purpose="Check if the value of IDBObjectStore.keyPath attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_keyPath_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:50</start><end>2015-01-28 05:25:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_keyPath_readonly" purpose="Check if IDBObjectStore.keyPath attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_keyPath_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:51</start><end>2015-01-28 05:25:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_keyPath_type" purpose="Check if IDBObjectStore.keyPath attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_keyPath_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:51</start><end>2015-01-28 05:25:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_name_normal_value" purpose="Check if the value of IDBObjectStore.name attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_name_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:52</start><end>2015-01-28 05:25:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_name_readonly" purpose="Check if IDBObjectStore.name attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_name_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:53</start><end>2015-01-28 05:25:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_name_type" purpose="Check if IDBObjectStore.name attribute is of type string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_name_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:53</start><end>2015-01-28 05:25:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_openCursor_base" purpose="Check if IDBObjectStore.openCursor() has all two valid arguments that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_openCursor_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:54</start><end>2015-01-28 05:25:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_openCursor_exception_DataError" purpose="Check if IDBObjectStore.openCursor() throws an exception DataError when the range parameter was not a valid key" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_openCursor_exception_DataError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:55</start><end>2015-01-28 05:25:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_openCursor_exception_InvalidStateError" purpose="Check if IDBObjectStore.openCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_openCursor_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:55</start><end>2015-01-28 05:25:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_openCursor_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.openCursor() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_openCursor_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:56</start><end>2015-01-28 05:25:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_exception_DataCloneError" purpose="Check if IDBObjectStore.put() throws an exception DataCloneError when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_exception_DataCloneError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:57</start><end>2015-01-28 05:25:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_exception_InvalidStateError" purpose="Check if IDBObjectStore.put() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:57</start><end>2015-01-28 05:25:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_exception_ReadOnlyError" purpose="Check if IDBObjectStore.put() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_exception_ReadOnlyError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:58</start><end>2015-01-28 05:25:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.put() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_exception_TransactionInactiveError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:59</start><end>2015-01-28 05:25:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_put_mandatory" purpose="Check if IDBObjectStore.put() has one mandatory normal argument that expecting an IDBRequest object to be created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_put_mandatory.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:25:59</start><end>2015-01-28 05:26:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_transaction_normal_value" purpose="Check if the value of IDBObjectStore.transaction attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_transaction_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:00</start><end>2015-01-28 05:26:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_transaction_readonly" purpose="Check if IDBObjectStore.transaction attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_transaction_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:01</start><end>2015-01-28 05:26:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBObjectStore_transaction_type" purpose="Check if IDBObjectStore.transaction attribute is of IDBTransaction object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBObjectStore_transaction_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:01</start><end>2015-01-28 05:26:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBOpenDBRequest_onupgradeneeded_base" purpose="Check if the error event has been triggered that expecting an upgradeneeded handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBOpenDBRequest_onupgradeneeded_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:02</start><end>2015-01-28 05:26:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_error_default_value" purpose="Check if the default value of IDBRequest.error attribute is null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_error_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:03</start><end>2015-01-28 05:26:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_error_exception_InvalidStateError" purpose="Check if IDBRequest.error throws an exception InvalidStateError when the done flag was set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_error_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:03</start><end>2015-01-28 05:26:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_error_readonly" purpose="Check if IDBRequest.error attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_error_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:04</start><end>2015-01-28 05:26:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_error_type" purpose="Check if IDBRequest.error attribute is of object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_error_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:04</start><end>2015-01-28 05:26:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_onerror_base" purpose="Check if the error event has been triggered that expecting an onerror handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_onerror_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:05</start><end>2015-01-28 05:26:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_onsuccess_base" purpose="Check if the success event has been triggered that expecting an onsuccess handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_onsuccess_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:06</start><end>2015-01-28 05:26:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_readyState_readonly" purpose="Check if IDBRequest.readyState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_readyState_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:06</start><end>2015-01-28 05:26:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_result_exception_InvalidStateError" purpose="Check if IDBRequest.result throws an exception InvalidStateError when the done flag is set to false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_result_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:07</start><end>2015-01-28 05:26:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_result_normal_value" purpose="Check if the value of IDBRequest.result attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_result_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:08</start><end>2015-01-28 05:26:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_result_readonly" purpose="Check if IDBRequest.result attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_result_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:08</start><end>2015-01-28 05:26:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_source_readonly" purpose="Check if IDBRequest.source attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_source_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:09</start><end>2015-01-28 05:26:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_source_type" purpose="Check if IDBRequest.source attribute is of object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_source_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:10</start><end>2015-01-28 05:26:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_transaction_readonly" purpose="Check if IDBRequest.transaction attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_transaction_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:10</start><end>2015-01-28 05:26:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBRequest_transaction_type" purpose="Check if IDBRequest.transaction attribute is of IDBTransaction object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBRequest_transaction_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:11</start><end>2015-01-28 05:26:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_abort_base" purpose="Check if IDBTransaction.abort() is invoked successfully that expecting the onabort event to be triggered" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_abort_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:12</start><end>2015-01-28 05:26:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_abort_exception_InvalidStateError" purpose="Check if IDBTransaction.abort() throws an exception InvalidStateError when the transaction has already been aborted" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_abort_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:12</start><end>2015-01-28 05:26:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_db_normal_value" purpose="Check if the value of IDBTransaction.db attribute is normal" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_db_normal_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:13</start><end>2015-01-28 05:26:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_db_readonly" purpose="Check if IDBTransaction.db attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_db_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:14</start><end>2015-01-28 05:26:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_db_type" purpose="Check if IDBTransaction.db attribute is of IDBDatabase object type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_db_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:14</start><end>2015-01-28 05:26:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_mode_readonly" purpose="Check if IDBTransaction.mode attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_mode_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:15</start><end>2015-01-28 05:26:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_objectStore_base" purpose="Check if IDBTransaction.objectStore() has one valid argument that expecting an IDBObjectStore object to be returned" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_objectStore_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:16</start><end>2015-01-28 05:26:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_objectStore_exception_InvalidStateError" purpose="Check if IDBTransaction.objectStore() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_objectStore_exception_InvalidStateError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:16</start><end>2015-01-28 05:26:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_objectStore_exception_NotFoundError" purpose="Check if IDBTransaction.objectStore() throws an exception NotFoundError when the requested object store is not in this transaction's scope" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_objectStore_exception_NotFoundError.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:17</start><end>2015-01-28 05:26:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_onabort_base" purpose="Check if the abort event has been triggered that expecting an IDBTransaction.onabort handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_onabort_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:18</start><end>2015-01-28 05:26:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_oncomplete_base" purpose="Check if the complete event has been triggered that expecting an IDBTransaction.oncomplete handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_oncomplete_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:18</start><end>2015-01-28 05:26:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_onerror_base" purpose="Check if the error event has been triggered that expecting an IDBTransaction.onerror handler to be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_onerror_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:19</start><end>2015-01-28 05:26:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_READ_ONLY" purpose="check if modification operations are not allowed when the transaction mode is READ_ONLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_READ_ONLY.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:19</start><end>2015-01-28 05:26:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_READ_WRITE" purpose="Check if modification operations are allowed when the transaction mode is READ_WRITE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_READ_WRITE.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:20</start><end>2015-01-28 05:26:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBTransaction_VERSION_CHANGE" purpose="Check if allowing to perform any operations, including ones that delete and create object stores and indexes when the transaction mode is VERSION_CHANGE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBTransaction_VERSION_CHANGE.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:21</start><end>2015-01-28 05:26:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBVersionChangeEvent_newVersion_readonly" purpose="Check if IDBVersionChangeEvent.newVersion attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBVersionChangeEvent_newVersion_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:21</start><end>2015-01-28 05:26:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBVersionChangeEvent_newVersion_type" purpose="Check if IDBVersionChangeEvent.newVersion attribute is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBVersionChangeEvent_newVersion_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:22</start><end>2015-01-28 05:26:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBVersionChangeEvent_oldVersion_readonly" purpose="Check if IDBVersionChangeEvent.oldVersion attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBVersionChangeEvent_oldVersion_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:23</start><end>2015-01-28 05:26:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="IDBVersionChangeEvent_oldVersion_type" purpose="Check if IDBVersionChangeEvent.oldVersion attribute is of type number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/IDBVersionChangeEvent_oldVersion_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:23</start><end>2015-01-28 05:26:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="index_sort_order" purpose="Check if key sort order in an index is 'number / Date / DOMString'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/index_sort_order.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:24</start><end>2015-01-28 05:26:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Storage/Indexed Database API (Partial)" execution_type="auto" id="objectstore_keyorder" purpose="Check if key sort order in an object store is 'number / Date / DOMString'" result="PASS">
        <description>
          <test_script_entry>/opt/tct-indexeddb-w3c-tests/indexeddb/w3c/objectstore_keyorder.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 05:26:25</start><end>2015-01-28 05:26:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
