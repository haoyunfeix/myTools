<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E6OKCY549771" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-28_13_03_19</start_at><end_at>2015-01-28_13_03_50</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="webapi-usertiming-w3c-tests" widget="webapi-noneservice-tests">
    <set name="usertiming" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_marks_003" purpose="Check if the performance.clearMarks() is called with a non-existent mark which shouldn't change the state of the Performance Timeline" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_marks.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:08</start><end>2015-01-28 13:04:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_marks_005" purpose="Check if the performance.clearMarks() is called with a existed mark which should no longer be present in the Performance Timeline" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_marks.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:08</start><end>2015-01-28 13:04:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_marks_007" purpose="Check if the performance.clearMarks() is called that clear all marks then window.performance.getEntriesByType('mark') returns an empty object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_marks.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:08</start><end>2015-01-28 13:04:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_measures_003" purpose="Check if the performance.clearMeasures() is called with a non-existent measure which shouldn't change the state of the Performance Timeline" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_measures.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:08</start><end>2015-01-28 13:04:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_measures_005" purpose="Check if the performance.clearMeasures() is called with a existed measure which should no longer be present in the Performance Timeline" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_measures.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:09</start><end>2015-01-28 13:04:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_clear_measures_007" purpose="Check if the performance.clearMeasures() is called that clear all measures then window.performance.getEntriesByType('measure') returns an empty object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_clear_measures.html?total_num=7&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:09</start><end>2015-01-28 13:04:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_mark" purpose="Check if this test validates that the performance.mark() method is working properly" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_mark.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:09</start><end>2015-01-28 13:04:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="usertiming_mark_without_parameter" purpose="Check if the window.performance.mark() threw a TYPE_ERR exception when invoke without a parameter" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_mark_and_measure_exception_when_invoke_without_parameter.html?total_num=5&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:10</start><end>2015-01-28 13:04:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="usertiming_measure_without_parameter" purpose="Check if the window.performance.measure() threw a TYPE_ERR exception when invoke without a parameter" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_mark_and_measure_exception_when_invoke_without_parameter.html?total_num=5&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:10</start><end>2015-01-28 13:04:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_mark_exceptions" purpose="Check if throws a SYNTAX_ERR exception if the markName argument is the same name as an attribute in the PerformanceTiming interface" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_mark_exceptions.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:10</start><end>2015-01-28 13:04:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="usertiming_mark_with_name_optional_attribute" purpose="Check if this test validates exception scenarios of invoking performance.mark() with param of 'secureConnectionStart'" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_mark_with_name_of_navigation_timing_optional_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:10</start><end>2015-01-28 13:04:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure" purpose="Check if this test validates that the performance.measure() method is working properly" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:10</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_003" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the startMark or endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_005" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the startMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_007" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_009" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent marks are provided as the startMark and endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_011" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark or endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_013" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_015" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_exceptions_017" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark and endMark" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_exceptions.html?total_num=17&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="test_user_timing_measure_navigation_timing" purpose="Check if the performance.measure() method is working properly when navigation timing attributes are used in place of mark names" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/test_user_timing_measure_navigation_timing.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:04:11</start><end>2015-01-28 13:04:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
    <set name="idltest" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Performance and Optimization/User Timing" execution_type="auto" id="user_timing_idlharness" purpose="Check if the user timing idlharness tests" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-usertiming-w3c-tests/usertiming/w3c/idlharness.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:04:22</start><end>2015-01-28 13:04:22</end><stdout>[Message] *Performance interface: operation mark(DOMString): assert_true: property is not configurable expected true got false *Performance interface: operation clearMarks(DOMString): assert_true: property is not configurable expected true got false *Performance interface: operation measure(DOMString,DOMString,DOMString): assert_true: property is not configurable expected true got false *Performance interface: operation clearMeasures(DOMString): assert_true: property is not configurable expected true got false *PerformanceMark interface: existence and properties of interface object: assert_equals: prototype of window's property "PerformanceMark" is not Function.prototype expected function "function Empty() {}" but got function "function PerformanceEntry() { [native code] }" *PerformanceMark interface: existence and properties of interface prototype object: assert_equals: class string of PerformanceMark.prototype expected "[object PerformanceMarkPrototype]" but got "[object Object]" *PerformanceMeasure interface: existence and properties of interface object: assert_equals: prototype of window's property "PerformanceMeasure" is not Function.prototype expected function "function Empty() {}" but got function "function PerformanceEntry() { [native code] }" *PerformanceMeasure interface: existence and properties of interface prototype object: assert_equals: class string of PerformanceMeasure.prototype expected "[object PerformanceMeasurePrototype]" but got "[object Object]"</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
