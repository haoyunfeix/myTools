<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="10.239.52.31:26101" device_model="" device_name="ivi_box&#10;" host="Linux-3.2.0-29-generic-pae-i686-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="" screen_size=""><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-28_21_27_32</start_at><end_at>2015-01-28_22_07_12</end_at></summary>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-bluetooth-tizen-tests">
    <set name="Bluetooth" set_debug_msg="N/A" type="js">
      <capabilities>
        <capability name="bluetooth" />
      </capabilities>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfinish_successful" onload_delay="180" purpose="Check if onfinish method of successful callback of discoverDevices method invoked" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfinish_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:36:07</start><end>2015-01-28 13:37:47</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_callback_onerror" onload_delay="180" purpose="Check if error callback of destroyBonding method invoked" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:37:51</start><end>2015-01-28 13:39:31</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_visible_attribute" purpose="Check visible attribute of bluetooth" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_visible_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:35</start><end>2015-01-28 13:39:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_exist" purpose="Check if getDevice method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:36</start><end>2015-01-28 13:39:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_exist" purpose="Check if setName method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:36</start><end>2015-01-28 13:39:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_exist" purpose="Check if getKnownDevices method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:37</start><end>2015-01-28 13:39:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_exist" onload_delay="180" purpose="Check if unregister method exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:39:37</start><end>2015-01-28 13:39:47</end><stdout>[Message] *BluetoothServiceHandler_unregister_exist: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_exist" purpose="Check if setPowered method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:47</start><end>2015-01-28 13:39:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_errorCallback" onload_delay="180" purpose="Check with optional arguments setPowered(valid_state, valid_successCallback, valid_errorCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:48</start><end>2015-01-28 13:39:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_onerror" onload_delay="180" purpose="Check if error callback of registerRFCOMMServiceByUUID method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:49</start><end>2015-01-28 13:39:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_callback_onerror" onload_delay="180" purpose="Check if error callback of createBonding method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:50</start><end>2015-01-28 13:39:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_successful" onload_delay="180" purpose="Check if successful callback of discoverDevices method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:50</start><end>2015-01-28 13:39:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_exist" purpose="Method of createBonding exists in bluetooth adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:52</start><end>2015-01-28 13:39:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_successful" onload_delay="180" purpose="Check if successful callback of getKnownDevices method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:39:52</start><end>2015-01-28 13:39:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_longname" onload_delay="180" purpose="Check if long name is set" result="BLOCK">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_longname.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:39:53</start><end>2015-01-28 13:41:33</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_errorCallback" onload_delay="180" purpose="Check with optional arguments unregister(valid_successCallback, valid_errorCallback)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:41:38</start><end>2015-01-28 13:41:39</end><stdout>[Message] *BluetoothServiceHandler_unregister_with_errorCallback: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPower_off" onload_delay="180" purpose="Check if powered attribute of adapter is false" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPower_off.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:39</start><end>2015-01-28 13:41:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_exist" purpose="Method of destroyBonding exists in bluetooth adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:40</start><end>2015-01-28 13:41:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_exist" purpose="Check if stopDiscovery method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:40</start><end>2015-01-28 13:41:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_address_attribute" purpose="Check if address attribute exists in device" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_address_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:41</start><end>2015-01-28 13:41:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_exist" purpose="Method of discoverDevices exists in bluetooth adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:41</start><end>2015-01-28 13:41:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_errorCallback" onload_delay="180" purpose="Check if name attribute of adapter set" result="PASS">
        <description>
          <pre_condition>Please wait at least 5 second before run test</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:42</start><end>2015-01-28 13:41:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_name_attribute" purpose="Check name attribute in adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_name_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:43</start><end>2015-01-28 13:41:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_exist" purpose="Check if registerRFCOMMServiceByUUID method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:41:43</start><end>2015-01-28 13:41:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_successful" onload_delay="180" purpose="Check if onfound method of successful callback of discoverDevices method invoked" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:41:43</start><end>2015-01-28 13:43:23</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_callback_error" onload_delay="180" purpose="Check if error callback of setName method invoked" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_callback_error.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:43:28</start><end>2015-01-28 13:45:08</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_powered_attribute" purpose="Check powered attribute in adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_powered_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:12</start><end>2015-01-28 13:45:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_callback_onerror" onload_delay="180" purpose="Check if error callback of getKnownDevices method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:13</start><end>2015-01-28 13:45:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_callback_onerror" onload_delay="180" purpose="Check if error callback of getDevice method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:14</start><end>2015-01-28 13:45:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_exist" purpose="Check if getDefaultAdapter method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:14</start><end>2015-01-28 13:45:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceService_attribute" purpose="Check attribute deviceService of bluetooth" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceService_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:14</start><end>2015-01-28 13:45:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMajor_attribute" purpose="Check attribute deviceMajor of bluetooth" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMajor_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:15</start><end>2015-01-28 13:45:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_deviceMinor_attribute" purpose="Check attribute deviceMinor of bluetooth" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_deviceMinor_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:15</start><end>2015-01-28 13:45:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_bluetooth_attribute" purpose="Check attribute bluetooth of tizen" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_bluetooth_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:16</start><end>2015-01-28 13:45:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_uuid_attribute" onload_delay="180" purpose="Check attribute uuid in BluetoothServiceHandler" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_uuid_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:45:16</start><end>2015-01-28 13:45:27</end><stdout>[Message] *BluetoothServiceHandler_uuid_attribute: assert_unreached: chatServiceErrorCallback exception  Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_name_attribute" onload_delay="180" purpose="Check attribute name in BluetoothServiceHandler" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_name_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:45:27</start><end>2015-01-28 13:45:37</end><stdout>[Message] *BluetoothServiceHandler_name_attribute: assert_unreached: chatServiceErrorCallback exception  Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_isConnected_attribute" onload_delay="180" purpose="Check attribute isConnected in BluetoothServiceHandler" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_isConnected_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:45:37</start><end>2015-01-28 13:45:48</end><stdout>[Message] *BluetoothServiceHandler_isConnected_attribute: assert_unreached: chatServiceErrorCallback exception  Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_unregisterServiceRecord" onload_delay="180" purpose="Check using unregister method which is in BluetoothServiceHandler interface to unregister service record" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_unregisterServiceRecord.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:45:48</start><end>2015-01-28 13:45:49</end><stdout>[Message] *BluetoothServiceHandler_unregister_unregisterServiceRecord: assert_unreached: chatServiceErrorCallback, Exception:  Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch" purpose="Check whether createBonding() method called with invalid successCallback and errorCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_with_error_null_and_success_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:49</start><end>2015-01-28 13:45:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_invalid_callback_name" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid successCallback throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_invalid_callback_name.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:45:49</start><end>2015-01-28 13:45:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_with_errorCallback" onload_delay="180" purpose="Check with optional arguments getKnownDevices(valid_successCallback, valid_errorCallback)" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:45:50</start><end>2015-01-28 13:47:30</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered" purpose="Check whether setPowered() method properly sets powered parameter of BluetoothAdapter (part 2)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:35</start><end>2015-01-28 13:47:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_errorCallback" onload_delay="180" purpose="Check with optional arguments stopDiscovery(valid_successCallback, valid_errorCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:35</start><end>2015-01-28 13:47:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_AUDIO_VIDEO_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_AUDIO_VIDEO" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_AUDIO_VIDEO_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:37</start><end>2015-01-28 13:47:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_COMPUTER_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_COMPUTER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_COMPUTER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:37</start><end>2015-01-28 13:47:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_HEALTH_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_HEALTH" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_HEALTH_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:37</start><end>2015-01-28 13:47:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_IMAGING_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_IMAGING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_IMAGING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:38</start><end>2015-01-28 13:47:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_MISC_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_MISC" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_MISC_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:38</start><end>2015-01-28 13:47:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_NETWORK_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_NETWORK" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_NETWORK_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:39</start><end>2015-01-28 13:47:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PERIPHERAL_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_PERIPHERAL" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PERIPHERAL_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:39</start><end>2015-01-28 13:47:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_PHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_PHONE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_PHONE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:39</start><end>2015-01-28 13:47:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_TOY_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_TOY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_TOY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:40</start><end>2015-01-28 13:47:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_UNCATEGORIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:40</start><end>2015-01-28 13:47:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_WEARABLE_const" purpose="Check various identifiers of BluetoothClassDeviceMajor_WEARABLE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_WEARABLE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:41</start><end>2015-01-28 13:47:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAMCORDER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAMCORDER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAMCORDER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:41</start><end>2015-01-28 13:47:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_CAR_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_CAR_AUDIO" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_CAR_AUDIO_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:42</start><end>2015-01-28 13:47:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_DISPLAY_AND_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:42</start><end>2015-01-28 13:47:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_GAMING_TOY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_GAMING_TOY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_GAMING_TOY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:43</start><end>2015-01-28 13:47:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HANDSFREE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HANDSFREE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HANDSFREE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:43</start><end>2015-01-28 13:47:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HEADPHONES_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HEADPHONES" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HEADPHONES_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:44</start><end>2015-01-28 13:47:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_HIFI_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_HIFI" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_HIFI_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:44</start><end>2015-01-28 13:47:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_LOUDSPEAKER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_LOUDSPEAKER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:44</start><end>2015-01-28 13:47:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MICROPHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MICROPHONE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MICROPHONE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:45</start><end>2015-01-28 13:47:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_MONITOR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_MONITOR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:45</start><end>2015-01-28 13:47:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_PORTABLE_AUDIO_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:46</start><end>2015-01-28 13:47:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_SETTOP_BOX_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_SETTOP_BOX" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_SETTOP_BOX_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:46</start><end>2015-01-28 13:47:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_UNRECOGNIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_UNRECOGNIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:46</start><end>2015-01-28 13:47:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VCR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VCR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VCR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:47</start><end>2015-01-28 13:47:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CAMERA" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CAMERA_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:48</start><end>2015-01-28 13:47:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_VIDEO_CONFERENCING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:48</start><end>2015-01-28 13:47:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_AV_WEARABLE_HEADSET_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:48</start><end>2015-01-28 13:47:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_DESKTOP" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_DESKTOP_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:49</start><end>2015-01-28 13:47:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_HANDHELD_PC_OR_PDA_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:49</start><end>2015-01-28 13:47:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_LAPTOP" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_LAPTOP_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:50</start><end>2015-01-28 13:47:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_PALM_PC_OR_PDA_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:50</start><end>2015-01-28 13:47:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_SERVER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_SERVER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_SERVER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:51</start><end>2015-01-28 13:47:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:51</start><end>2015-01-28 13:47:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_COMPUTER_WEARABLE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_COMPUTER_WEARABLE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:52</start><end>2015-01-28 13:47:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_ANKLE_PROSTHESIS_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:52</start><end>2015-01-28 13:47:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BLOOD_PRESSURE_MONITOR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:52</start><end>2015-01-28 13:47:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_BODY_COMPOSITION_ANALYZER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:53</start><end>2015-01-28 13:47:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_DATA_DISPLAY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:53</start><end>2015-01-28 13:47:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_GLUCOSE_METER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:54</start><end>2015-01-28 13:47:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_KNEE_PROSTHESIS_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:54</start><end>2015-01-28 13:47:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_MEDICATION_MONITOR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:55</start><end>2015-01-28 13:47:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PEAK_FLOW_MONITOR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:55</start><end>2015-01-28 13:47:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_OXIMETER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:56</start><end>2015-01-28 13:47:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_PULSE_RATE_MONITOR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:56</start><end>2015-01-28 13:47:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_STEP_COUNTER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:56</start><end>2015-01-28 13:47:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_THERMOMETER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_THERMOMETER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:57</start><end>2015-01-28 13:47:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_UNDEFINED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_UNDEFINED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:57</start><end>2015-01-28 13:47:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_HEALTH_WEIGHING_SCALE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:57</start><end>2015-01-28 13:47:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_CAMERA_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_CAMERA" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_CAMERA_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:58</start><end>2015-01-28 13:47:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_DISPLAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_DISPLAY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_DISPLAY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:58</start><end>2015-01-28 13:47:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_PRINTER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_PRINTER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_PRINTER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:59</start><end>2015-01-28 13:47:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_SCANNER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_SCANNER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_SCANNER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:47:59</start><end>2015-01-28 13:47:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_IMAGING_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:00</start><end>2015-01-28 13:48:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_CARD_READER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:00</start><end>2015-01-28 13:48:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DEGITIZER_TABLET_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:00</start><end>2015-01-28 13:48:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_DIGITAL_PEN_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:01</start><end>2015-01-28 13:48:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_GAMEPAD_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:01</start><end>2015-01-28 13:48:01</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_INPUT_DEVICE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:01</start><end>2015-01-28 13:48:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_HANDHELD_SCANNER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:02</start><end>2015-01-28 13:48:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_JOYSTICK_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:02</start><end>2015-01-28 13:48:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_AND_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:03</start><end>2015-01-28 13:48:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_KEYBOARD_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:03</start><end>2015-01-28 13:48:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_POINTING_DEVICE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:04</start><end>2015-01-28 13:48:04</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_REMOTE_CONTROL_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:04</start><end>2015-01-28 13:48:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_SENSING_DEVICE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:05</start><end>2015-01-28 13:48:05</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PERIPHERAL_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:05</start><end>2015-01-28 13:48:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CELLULAR_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CELLULAR" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CELLULAR_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:06</start><end>2015-01-28 13:48:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_CORDLESS_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_CORDLESS" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_CORDLESS_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:06</start><end>2015-01-28 13:48:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_ISDN_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_ISDN" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_ISDN_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:07</start><end>2015-01-28 13:48:07</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_MODEM_OR_GATEWAY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:07</start><end>2015-01-28 13:48:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_SMARTPHONE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_SMARTPHONE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:08</start><end>2015-01-28 13:48:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_PHONE_UNCATEGORIZED_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:08</start><end>2015-01-28 13:48:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_CONTROLLER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_CONTROLLER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_CONTROLLER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:09</start><end>2015-01-28 13:48:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_DOLL_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_DOLL" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_DOLL_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:09</start><end>2015-01-28 13:48:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_GAME_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_GAME" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_GAME_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:10</start><end>2015-01-28 13:48:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_ROBOT_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_ROBOT" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_ROBOT_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:10</start><end>2015-01-28 13:48:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_TOY_VEHICLE_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_TOY_VEHICLE" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_TOY_VEHICLE_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:11</start><end>2015-01-28 13:48:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_GLASSES_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_GLASSES" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_GLASSES_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:11</start><end>2015-01-28 13:48:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_HELMET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_HELMET" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_HELMET_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:12</start><end>2015-01-28 13:48:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_JACKET_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_JACKET" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_JACKET_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:12</start><end>2015-01-28 13:48:12</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_PAGER_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_PAGER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_PAGER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:12</start><end>2015-01-28 13:48:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const" purpose="Check various identifiers of BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_WEARABLE_WRITST_WATCH_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:13</start><end>2015-01-28 13:48:13</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_AUDIO_const" purpose="Check various identifiers of BluetoothClassDeviceService_AUDIO" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_AUDIO_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:13</start><end>2015-01-28 13:48:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_CAPTURING_const" purpose="Check various identifiers of BluetoothClassDeviceService_CAPTURING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_CAPTURING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:14</start><end>2015-01-28 13:48:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_INFORMATION_const" purpose="Check various identifiers of BluetoothClassDeviceService_INFORMATION" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_INFORMATION_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:14</start><end>2015-01-28 13:48:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const" purpose="Check various identifiers of BluetoothClassDeviceService_LIMITED_DISCOVERABILITY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_LIMITED_DISCOVERABILITY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:14</start><end>2015-01-28 13:48:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_NETWORKING_const" purpose="Check various identifiers of BluetoothClassDeviceService_NETWORKING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_NETWORKING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:15</start><end>2015-01-28 13:48:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_OBJECT_TRANSFER_const" purpose="Check various identifiers of BluetoothClassDeviceService_OBJECT_TRANSFER" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_OBJECT_TRANSFER_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:15</start><end>2015-01-28 13:48:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_POSITIONING_const" purpose="Check various identifiers of BluetoothClassDeviceService_POSITIONING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_POSITIONING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:16</start><end>2015-01-28 13:48:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_RENDERING_const" purpose="Check various identifiers of BluetoothClassDeviceService_RENDERING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_RENDERING_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:16</start><end>2015-01-28 13:48:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_TELEPHONY_const" purpose="Check various identifiers of BluetoothClassDeviceService_TELEPHONY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_TELEPHONY_const.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:17</start><end>2015-01-28 13:48:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_extend" purpose="Test whether the object can have new properties added for BluetoothClassDeviceMajor" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:17</start><end>2015-01-28 13:48:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_extend" purpose="Test whether the object BluetoothClassDeviceMinor can have new properties added" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:17</start><end>2015-01-28 13:48:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_extend" purpose="Test whether the object can have new properties added for BluetoothClassDeviceService" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:18</start><end>2015-01-28 13:48:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_extend" purpose="Test whether the object can have new properties added for BluetoothAdapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:19</start><end>2015-01-28 13:48:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_notexist" purpose="Check if is possible to call BluetoothAdapter in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:19</start><end>2015-01-28 13:48:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMajor_notexist" purpose="Check if is possible to call BluetoothClassDeviceMajor in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMajor_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:20</start><end>2015-01-28 13:48:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceMinor_notexist" purpose="Check if is possible to call BluetoothClassDeviceMinor in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceMinor_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:20</start><end>2015-01-28 13:48:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClassDeviceService_notexist" purpose="Check if is possible to call BluetoothClassDeviceService with new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClassDeviceService_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:21</start><end>2015-01-28 13:48:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothClass_notexist" purpose="Check if is possible to call BluetoothClass in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothClass_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:21</start><end>2015-01-28 13:48:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_notexist" purpose="Check if is possible to call BluetoothDeviceArraySuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:21</start><end>2015-01-28 13:48:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceSuccessCallback_notexist" purpose="Check if is possible to call BluetoothDeviceSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:22</start><end>2015-01-28 13:48:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDevice_notexist" purpose="Check if is possible to call BluetoothDevice in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDevice_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:22</start><end>2015-01-28 13:48:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_notexist" purpose="Check if is possible to call BluetoothDiscoverDevicesSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:22</start><end>2015-01-28 13:48:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_extend" purpose="Test whether the object can have new properties added for BluetoothManager" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:23</start><end>2015-01-28 13:48:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_in_tizen" purpose="Check attribute bluetooth for readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_in_tizen.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:23</start><end>2015-01-28 13:48:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_notexist" purpose="Check if is possible to call BluetoothManager in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:24</start><end>2015-01-28 13:48:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_extend" onload_delay="180" purpose="Test whether the object can have new properties added for BluetoothServiceHandler" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:48:24</start><end>2015-01-28 13:48:35</end><stdout>[Message] *BluetoothServiceHandler_extend: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_notexist" purpose="Check if is possible to call BluetoothServiceHandler in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:35</start><end>2015-01-28 13:48:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_notexist" purpose="Check if is possible to call BluetoothServiceSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:35</start><end>2015-01-28 13:48:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothSocketSuccessCallback_notexist" purpose="Check if is possible to call BluetoothSocketSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocketSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:35</start><end>2015-01-28 13:48:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothSocket_notexist" purpose="Check if is possible to call BluetoothSocket in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothSocket_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:35</start><end>2015-01-28 13:48:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_exist" purpose="Check if setVisible method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:36</start><end>2015-01-28 13:48:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_missarg" onload_delay="180" purpose="Check discoverDevices with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:36</start><end>2015-01-28 13:48:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_missarg" onload_delay="180" purpose="Check getKnownDevices with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:37</start><end>2015-01-28 13:48:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_missarg" onload_delay="180" purpose="Check getDevice with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:37</start><end>2015-01-28 13:48:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_missarg" onload_delay="180" purpose="Check createBonding with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:38</start><end>2015-01-28 13:48:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_missarg" onload_delay="180" purpose="Check registerRFCOMMServiceByUUID with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:38</start><end>2015-01-28 13:48:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_invalid_cb" onload_delay="180" purpose="Check argument setName() successCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:39</start><end>2015-01-28 13:48:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument setName() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:39</start><end>2015-01-28 13:48:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setName() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:40</start><end>2015-01-28 13:48:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setName() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:41</start><end>2015-01-28 13:48:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setPowered() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:41</start><end>2015-01-28 13:48:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of setPowered() method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:41</start><end>2015-01-28 13:48:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setPowered() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:42</start><end>2015-01-28 13:48:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument setPowered() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:42</start><end>2015-01-28 13:48:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:43</start><end>2015-01-28 13:48:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_successCallback_invalid_cb" onload_delay="180" purpose="Check discoverDevices() argument successCallback validation - use simple function" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:44</start><end>2015-01-28 13:48:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether discoverDevices() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:45</start><end>2015-01-28 13:48:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument discoverDevices() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:46</start><end>2015-01-28 13:48:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether stopDiscovery() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:46</start><end>2015-01-28 13:48:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether stopDiscovery() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:48</start><end>2015-01-28 13:48:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_successCallback_invalid_cb" onload_delay="180" purpose="Check stopDiscovery() argument successCallback validation - use {onsuccess: function (){}}" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:49</start><end>2015-01-28 13:48:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb" onload_delay="180" purpose="Check stopDiscovery() argument errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:50</start><end>2015-01-28 13:48:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether getKnownDevices() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:51</start><end>2015-01-28 13:48:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether getKnownDevices() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:51</start><end>2015-01-28 13:48:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_successCallback_invalid_cb" onload_delay="180" purpose="Check getKnownDevices() argument successCallback validation - use {onsuccess: function (){}}" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:52</start><end>2015-01-28 13:48:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb" onload_delay="180" purpose="Check getKnownDevices() argument errorCallback validation - use {onerror: function (){}}" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:52</start><end>2015-01-28 13:48:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether getDevice() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:53</start><end>2015-01-28 13:48:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether getDevice() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:53</start><end>2015-01-28 13:48:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of getDevice() method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:53</start><end>2015-01-28 13:48:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_errorCallback_invalid_cb" onload_delay="180" purpose="Check getDevice() argument errorCallback validation - use {onerror: function (){}}" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:54</start><end>2015-01-28 13:48:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether createBonding() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:55</start><end>2015-01-28 13:48:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_successCallback_invalid_cb" onload_delay="180" purpose="Check argument createBonding() successCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:55</start><end>2015-01-28 13:48:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether createBonding() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:56</start><end>2015-01-28 13:48:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_createBonding_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument createBonding() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_createBonding_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:56</start><end>2015-01-28 13:48:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:57</start><end>2015-01-28 13:48:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb" onload_delay="180" purpose="Check argument registerRFCOMMServiceByUUID() successCallback validation - use {onsuccess: function (){}}" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:57</start><end>2015-01-28 13:48:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:58</start><end>2015-01-28 13:48:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument registerRFCOMMServiceByUUID() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:48:59</start><end>2015-01-28 13:48:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method called with invalid successCallback argument throws an exception" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:48:59</start><end>2015-01-28 13:49:09</end><stdout>[Message] *BluetoothServiceHandler_unregister_successCallback_TypeMismatch: assert_unreached: registerErrorCB exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method of the BluetoothServiceHandler with invalid errorCallback argument throws an exception" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:49:09</start><end>2015-01-28 13:49:20</end><stdout>[Message] *BluetoothServiceHandler_unregister_errorCallback_TypeMismatch: assert_unreached: registerErrorCB exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of unregister() method invoked" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:49:20</start><end>2015-01-28 13:49:30</end><stdout>[Message] *BluetoothServiceHandler_unregister_successCallback_invalid_cb: assert_unreached: registerErrorCB exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_errorCallback_invalid_cb" onload_delay="180" purpose="Check unregister() argument errorCallback validation" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:49:30</start><end>2015-01-28 13:49:41</end><stdout>[Message] *BluetoothServiceHandler_unregister_errorCallback_invalid_cb: assert_unreached: registerErrorCB exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDeviceArraySuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothDeviceArraySuccessCallback callback is called and if its arguments have proper type" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDeviceArraySuccessCallback_onsuccess.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:49:41</start><end>2015-01-28 13:51:21</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceSuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothServiceSuccessCallback callback is called and if its arguments have proper type" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:51:26</start><end>2015-01-28 13:51:37</end><stdout>[Message] *BluetoothServiceSuccessCallback_onsuccess: assert_unreached: chatServiceErrorCB exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onstarted" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onstarted arguments have proper type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onstarted.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:51:37</start><end>2015-01-28 13:51:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_ondevicefound" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its ondevicefound arguments have proper type" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_ondevicefound.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:51:39</start><end>2015-01-28 13:53:19</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothDiscoverDevicesSuccessCallback_onfinished" onload_delay="180" purpose="Check if BluetoothDiscoverDevicesSuccessCallback callback is called and if its onfinished arguments have proper type" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothDiscoverDevicesSuccessCallback_onfinished.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:53:24</start><end>2015-01-28 13:55:04</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter_extra_argument" purpose="Check if method getDefaultAdapter of BluetoothManager accepts extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:55:08</start><end>2015-01-28 13:55:08</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName" onload_delay="180" purpose="Check with non-optional arguments setName(valid_name)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:55:08</start><end>2015-01-28 13:55:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_successCallback" onload_delay="180" purpose="Check with optional arguments setName(valid_name, successCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:55:09</start><end>2015-01-28 13:55:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setPowered_with_successCallback" onload_delay="180" purpose="Check with optional arguments setPowered(valid_state, valid_successCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setPowered_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:55:10</start><end>2015-01-28 13:55:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices" onload_delay="180" purpose="Check with non-optional arguments discoverDevices(valid_successCallback)" result="PASS">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:55:10</start><end>2015-01-28 13:55:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_with_errorCallback" onload_delay="180" purpose="Check with non-optional arguments discoverDevices(valid_successCallback, errorCallback)" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:55:11</start><end>2015-01-28 13:56:51</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManager_getDefaultAdapter" purpose="Proper invocation of getDefaultAdapter method  without arguments" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManager_getDefaultAdapter.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:56:56</start><end>2015-01-28 13:56:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_with_successCallback" onload_delay="180" purpose="Check with optional arguments stopDiscovery(valid_successCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:56:57</start><end>2015-01-28 13:56:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery" onload_delay="180" purpose="Check with optional arguments stopDiscovery" result="PASS">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:56:59</start><end>2015-01-28 13:57:00</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices" onload_delay="180" purpose="Check with optional arguments getKnownDevices(valid_successCallback)" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:57:00</start><end>2015-01-28 13:58:40</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback" onload_delay="180" purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback, valid_errorCallback)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:58:45</start><end>2015-01-28 13:58:55</end><stdout>[Message] *BluetoothAdapter_registerRFCOMMServiceByUUID_with_errorCallback: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID" onload_delay="180" purpose="Check with optional arguments registerRFCOMMServiceByUUID(valid_uuid, valid_name, valid_successCallback)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:58:55</start><end>2015-01-28 13:59:06</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister_with_successCallback" onload_delay="180" purpose="Check with optional arguments unregister(valid_successCallback)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:59:06</start><end>2015-01-28 13:59:06</end><stdout>[Message] *BluetoothServiceHandler_unregister_with_successCallback: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothServiceHandler_unregister" onload_delay="180" purpose="Check with non-optional arguments unregister()" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothServiceHandler_unregister.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:59:06</start><end>2015-01-28 13:59:17</end><stdout>[Message] *Untitled: assert_unreached: registerRFCOMMServiceByUUIDError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="Bluetooth_discoverDevices_successCallback_invalidcb" onload_delay="180" purpose="Check BluetoothDiscoverDevicesSuccessCallback() callback with invalid callback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/Bluetooth_discoverDevices_successCallback_invalidcb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:17</start><end>2015-01-28 13:59:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether setVisible() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:18</start><end>2015-01-28 13:59:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_successCallback_invalid_cb" onload_delay="180" purpose="Check if successful callback of setVisible() method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:18</start><end>2015-01-28 13:59:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether setVisible() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:19</start><end>2015-01-28 13:59:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_errorCallback_invalid_cb" onload_delay="180" purpose="Check if error callback of setVisible() method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:19</start><end>2015-01-28 13:59:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_timeout" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback, valid_timeout)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_timeout.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:59:20</start><end>2015-01-28 13:59:20</end><stdout>[Message] *BluetoothAdapter_setVisible_with_timeout: assert_true: Bluetooth visibled false expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_errorCallback" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback, valid_errorCallback)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:59:20</start><end>2015-01-28 13:59:21</end><stdout>[Message] *BluetoothAdapter_setVisible_with_errorCallback: assert_true: Bluetooth visibled false expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_with_successCallback" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode, valid_successCallback)" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 13:59:21</start><end>2015-01-28 13:59:22</end><stdout>[Message] *BluetoothAdapter_setVisible_with_successCallback: assert_true: Bluetooth visibled false expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible" onload_delay="180" purpose="Check with optional arguments setVisible(valid_mode)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:22</start><end>2015-01-28 13:59:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_notexist" purpose="Check if is possible to call BluetoothAdapterChangeCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:23</start><end>2015-01-28 13:59:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener" onload_delay="180" purpose="Check with non-optional arguments setChangeListener(valid_listener)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:23</start><end>2015-01-28 13:59:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_TypeMismatch" purpose="Check whether setChangeListener() method called with invalid listener argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:24</start><end>2015-01-28 13:59:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_exist" purpose="Check if setChangeListener method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:25</start><end>2015-01-28 13:59:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_listener_invalid_cb" purpose="Check setChangeListener() with invalid callback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_listener_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:25</start><end>2015-01-28 13:59:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setChangeListener_missarg" purpose="Check setChangeListener with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setChangeListener_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:25</start><end>2015-01-28 13:59:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onnamechanged" onload_delay="180" purpose="Check onnamechanged listener is invoked after setName()" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onnamechanged.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:26</start><end>2015-01-28 13:59:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onstatechanged" onload_delay="180" purpose="Check onstatechanged listener is invoked after setPowered()" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onstatechanged.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 13:59:27</start><end>2015-01-28 13:59:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapterChangeCallback_onvisibilitychanged" onload_delay="180" purpose="Check onvisibilitychanged listener is invoked after setVisible()" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapterChangeCallback_onvisibilitychanged.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 13:59:28</start><end>2015-01-28 14:01:08</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener" onload_delay="180" purpose="Check unsetChangeListener of adapter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:13</start><end>2015-01-28 14:01:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_exist" purpose="Check if unsetChangeListener method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:14</start><end>2015-01-28 14:01:14</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_unsetChangeListener_extra_argument" purpose="Check if method close of unsetChangeListener accepts extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_unsetChangeListener_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:14</start><end>2015-01-28 14:01:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_notexist" purpose="Check if is possible to call BluetoothHealthApplication in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:15</start><end>2015-01-28 14:01:15</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_extend" onload_delay="180" purpose="Test whether the object BluetoothHealthApplication can have new properties added it" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:01:15</start><end>2015-01-28 14:01:26</end><stdout>[Message] *BluetoothHealthApplication_extend: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_dataType_attribute" onload_delay="180" purpose="Test whether the dataType unsigned short exist in BluetoothHealthApplication has default value and its readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_dataType_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:01:26</start><end>2015-01-28 14:01:36</end><stdout>[Message] *BluetoothHealthApplication_dataType_attribute: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_name_attribute" onload_delay="180" purpose="Test whether the name string exist in BluetoothHealthApplication has default value and its readonly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_name_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:01:36</start><end>2015-01-28 14:01:47</end><stdout>[Message] *BluetoothHealthApplication_name_attribute: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_onconnect_attribute" onload_delay="180" purpose="Test whether the onconnect in BluetoothHealthApplication has default value and it's writable" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_onconnect_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:01:47</start><end>2015-01-28 14:01:57</end><stdout>[Message] *BluetoothHealthApplication_onconnect_attribute: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler" purpose="Check with non-optional arguments getBluetoothProfileHandler(valid_profileType)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:57</start><end>2015-01-28 14:01:57</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getBluetoothProfileHandler_exist" purpose="Check if getBluetoothProfileHandler method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getBluetoothProfileHandler_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:57</start><end>2015-01-28 14:01:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_extend" purpose="Test whether the object BluetoothHealthProfileHandler can have new properties added it" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:58</start><end>2015-01-28 14:01:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_notexist" purpose="Check if is possible to call BluetoothHealthProfileHandler in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:58</start><end>2015-01-28 14:01:59</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication" onload_delay="180" purpose="Check with non optional arguments registerSinkApplication" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:01:59</start><end>2015-01-28 14:02:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerSinkApplication() method called with invalid errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:09</start><end>2015-01-28 14:02:09</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument registerSinkApplication() errorCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:10</start><end>2015-01-28 14:02:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_exist" purpose="Check if registerSinkApplication method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:10</start><end>2015-01-28 14:02:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_missarg" purpose="Check registerSinkApplication with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:10</start><end>2015-01-28 14:02:10</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether registerSinkApplication() method called with invalid successCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:10</start><end>2015-01-28 14:02:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb" onload_delay="180" purpose="Check argument registerSinkApplication() successCallback validation" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:02:11</start><end>2015-01-28 14:02:11</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback" onload_delay="180" purpose="Check registerSinkApplication with valid optional arguments" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:02:11</start><end>2015-01-28 14:03:51</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister" onload_delay="180" purpose="Check unregister with non optional arguments" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:03:56</start><end>2015-01-28 14:04:07</end><stdout>[Message] *BluetoothHealthApplication_unregister: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregiste() method of the BluetoothHealthApplication called with invalid errorCallback argument throws an exception" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:07</start><end>2015-01-28 14:04:17</end><stdout>[Message] *BluetoothHealthApplication_unregister_errorCallback_TypeMismatch: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_errorCallback_invalid_cb" onload_delay="180" purpose="Check argument unregister() errorCallback validation" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_errorCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:17</start><end>2015-01-28 14:04:28</end><stdout>[Message] *BluetoothHealthApplication_unregister_errorCallback_invalid_cb: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_exist" onload_delay="180" purpose="Check if unregister method exists in BluetoothHealthApplication" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:28</start><end>2015-01-28 14:04:38</end><stdout>[Message] *BluetoothHealthApplication_unregister_exist: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_TypeMismatch" onload_delay="180" purpose="Check whether unregister() method called with invalid successCallback throws an exception" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:38</start><end>2015-01-28 14:04:49</end><stdout>[Message] *BluetoothHealthApplication_unregister_successCallback_TypeMismatch: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_successCallback_invalid_cb" onload_delay="180" purpose="Check argument unregister() successCallback validation" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_successCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:49</start><end>2015-01-28 14:04:50</end><stdout>[Message] *BluetoothHealthApplication_unregister_successCallback_invalid_cb: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_errorCallback" onload_delay="180" purpose="Check unregister with successCallback and errorCallback" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_errorCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:50</start><end>2015-01-28 14:04:51</end><stdout>[Message] *BluetoothHealthApplication_unregister_with_errorCallback: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_with_successCallback" onload_delay="180" purpose="Check unregister with successCallback" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_with_successCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:04:51</start><end>2015-01-28 14:04:52</end><stdout>[Message] *BluetoothHealthApplication_unregister_with_successCallback: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannel_notexist" purpose="Check if is possible to call BluetoothHealthChannel in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannel_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:04:52</start><end>2015-01-28 14:04:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_exist" purpose="Check if connectToSource method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:04:52</start><end>2015-01-28 14:04:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_connectToSource_missarg" purpose="Check connectToSource with missing non-optional argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_connectToSource_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:04:52</start><end>2015-01-28 14:04:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_notexist" purpose="Check if is possible to call BluetoothProfileHandler in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:04:53</start><end>2015-01-28 14:04:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_profileType_attribute" purpose="Check if profileType attribute exists in BluetoothProfileHandler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_profileType_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:04:53</start><end>2015-01-28 14:04:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_onsuccess" onload_delay="180" purpose="Check if BluetoothHealthApplicationSuccessCallback callback is called with propriety arguments" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_onsuccess.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:04:54</start><end>2015-01-28 14:06:34</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplicationSuccessCallback_notexist" purpose="Check if is possible to call BluetoothHealthApplicationSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplicationSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:38</start><end>2015-01-28 14:06:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelChangeCallback_notexist" purpose="Check if is possible to call BluetoothHealthChannelChangeCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelChangeCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:39</start><end>2015-01-28 14:06:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthChannelSuccessCallback_notexist" purpose="Check if is possible to call BluetoothHealthChannelSuccessCallback in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthChannelSuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:39</start><end>2015-01-28 14:06:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothManagerObject_notexist" purpose="Check if is possible to call BluetoothManagerObject in new expresion" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothManagerObject_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:40</start><end>2015-01-28 14:06:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothProfileHandler_extend" purpose="Test whether the object can have new properties added for BluetoothProfileHandler" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothProfileHandler_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:40</start><end>2015-01-28 14:06:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_callback_onerror" onload_delay="180" purpose="Check if error callback of discoverDevices method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:41</start><end>2015-01-28 14:06:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setVisible_callback_onerror" onload_delay="180" purpose="Check if error callback of BluetoothAdapter method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setVisible_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:42</start><end>2015-01-28 14:06:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_stopDiscovery_callback_onerror" onload_delay="180" purpose="Check if error callback of stopDiscovery method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_stopDiscovery_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:42</start><end>2015-01-28 14:06:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthApplication_unregister_callback_onerror" onload_delay="180" purpose="Check if error callback of unregister method invoked" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthApplication_unregister_callback_onerror.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:06:43</start><end>2015-01-28 14:06:45</end><stdout>[Message] *BluetoothHealthApplication_unregister_callback_onerror: assert_unreached: healthRegisterError exception: Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothHealthProfileHandler_registerSinkApplication_callback_error" onload_delay="180" purpose="Check if error callback of registerSinkApplication method invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothHealthProfileHandler_registerSinkApplication_callback_error.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:45</start><end>2015-01-28 14:06:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null" purpose="Check whether destroyBonding() method called with invalid successCallback and errorCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:46</start><end>2015-01-28 14:06:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch" purpose="Check whether destroyBonding() method called with invalid errorCallback and successCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_destroyBonding_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:06:46</start><end>2015-01-28 14:06:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_deviceaddress" onload_delay="180" purpose="Check if device address is found" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_deviceaddress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:06:47</start><end>2015-01-28 14:08:27</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_discoverDevices_onfound_devicename" onload_delay="180" purpose="Check if device name is found" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_discoverDevices_onfound_devicename.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:08:31</start><end>2015-01-28 14:10:11</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_function_type_check" purpose="Check if BluetoothAdapter exists and implements methods" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_function_type_check.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:10:15</start><end>2015-01-28 14:10:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null" purpose="Check whether getDevice() method called with invalid successCallback and errorCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getDevice_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:10:16</start><end>2015-01-28 14:10:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_check_types" onload_delay="180" purpose="Check whether all known Bluetooth devices are listed properly (part 2)" result="BLOCK">
        <description>
          <pre_condition>The bluetooth of the remote device MUST be turned on and discoverable from other devices.</pre_condition>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_check_types.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:10:16</start><end>2015-01-28 14:11:56</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null" purpose="Check whether getKnownDevices() method called with invalid successCallback and null as errorCallback argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_getKnownDevices_success_TypeMismatch_error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:12:01</start><end>2015-01-28 14:12:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null" purpose="Check whether registerRFCOMMServiceByUUID() method called with invalid successCallback and errorCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_registerRFCOMMServiceByUUID_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:12:02</start><end>2015-01-28 14:12:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null" purpose="Check whether setName() method called with invalid successCallback and errorCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_TypeMismatch_and_error_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:12:02</start><end>2015-01-28 14:12:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Communication/Bluetooth" execution_type="auto" id="BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch" purpose="Check whether setName() method called with invalid errorCallback and successCallback set to null throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-bluetooth-tizen-tests/bluetooth/BluetoothAdapter_setName_with_success_null_and_error_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:12:03</start><end>2015-01-28 14:12:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      </set>
  </suite>
</test_definition>
