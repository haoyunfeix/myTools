<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="10.239.52.31:26101" device_model="" device_name="ivi_box&#10;" host="Linux-3.2.0-29-generic-pae-i686-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="" screen_size=""><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-29_02_36_41</start_at><end_at>2015-01-29_02_37_12</end_at></summary>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-tizen-tizen-tests">
    <set name="Tizen" set_debug_msg="N/A" type="js">
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AbstractFilter_notexist" purpose="Tizen.AbstractFilter - integration test" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AbstractFilter_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:46</start><end>2015-01-28 18:41:47</end><stdout>[Message] *AbstractFilter_notexist: assert_throws: Wrong call as a function function "function () {\n        tizen[interfaceName]();\n    }" did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_attributeName_attribute" purpose="Check if attributeName equals to the value that is set when create AttributeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_attributeName_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:47</start><end>2015-01-28 18:41:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_constructor" purpose="Check if AttributeFilter constructor is correct" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:47</start><end>2015-01-28 18:41:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_exist" purpose="Check if AttributeFilter constructor create object properly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:47</start><end>2015-01-28 18:41:47</end><stdout>[Message] *AttributeFilter_exist: assert_throws: Constructor called as function. function "function () {\n        tizen[constructorName]();\n    }" threw object "[object Object]" ("TypeMismatchError") expected object "[object Object]" ("TypeError")</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_extend" purpose="Check if AttributeFilter constructor can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:47</start><end>2015-01-28 18:41:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_matchFlag_attribute" purpose="Check if matchFlag equals to the value that is set when create AttributeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_matchFlag_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:47</start><end>2015-01-28 18:41:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeFilter_matchValue_attribute" purpose="Check if matchValue equals to the value that is set when create AttributeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeFilter_matchValue_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:48</start><end>2015-01-28 18:41:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_attributeName_attribute" purpose="Check if attribute AttributeRangeFilter.attributeName exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_attributeName_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:48</start><end>2015-01-28 18:41:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_constructor_min" purpose="Check if AttributeRangeFilter can be created successfully when creat without initialValue and endValue parameters" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_constructor_min.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:48</start><end>2015-01-28 18:41:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_constructor_successful" purpose="Check if attributeName equals to the value that is set when create AttributeRangeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_constructor_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:48</start><end>2015-01-28 18:41:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_endValue_attribute" purpose="Check if endValue equals to the value that is set when create AttributeRangeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_endValue_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:49</start><end>2015-01-28 18:41:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_exist" purpose="Check if AttributeRangeFilter exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:49</start><end>2015-01-28 18:41:49</end><stdout>[Message] *AttributeRangeFilter_exist: assert_throws: Constructor called as function. function "function () {\n        tizen[constructorName]();\n    }" threw object "[object Object]" ("TypeMismatchError") expected object "[object Object]" ("TypeError")</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_extend" purpose="Check if AttributeRangeFilter can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:49</start><end>2015-01-28 18:41:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="AttributeRangeFilter_initialValue_attribute" purpose="Check if initialValue equals to the value that is set when create AttributeRangeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/AttributeRangeFilter_initialValue_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:49</start><end>2015-01-28 18:41:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilterType_enum_INTERSECTION" purpose="Test CompositeFilterType with type INTERSECTION" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilterType_enum_INTERSECTION.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:49</start><end>2015-01-28 18:41:49</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilterType_enum_UNION" purpose="Test CompositeFilterType with type UNION" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilterType_enum_UNION.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilter_constructor" purpose="Check if CompositeFilter can be create successfully" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilter_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilter_exist" purpose="Check if CompositeFilter constructor exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilter_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:50</end><stdout>[Message] *CompositeFilter_exist: assert_throws: Constructor called as function. function "function () {\n        tizen[constructorName]();\n    }" threw object "[object Object]" ("TypeMismatchError") expected object "[object Object]" ("TypeError")</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilter_extend" purpose="Check if CompositeFilter can be extend" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilter_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilter_filters_attribute" purpose="Check if filters equals to the value that is set when create CompositeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilter_filters_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="CompositeFilter_type_attribute" purpose="Check if type equals to the value that is set when create CompositeFilter" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/CompositeFilter_type_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:50</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="ErrorCallback_notexist" purpose="Check if ErrorCallback not exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/ErrorCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FilterMatchFlag_enum_CONTAINS" purpose="FilterMatchFlag constructor works with CONTAINS" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FilterMatchFlag_enum_CONTAINS.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FilterMatchFlag_enum_ENDSWITH" purpose="FilterMatchFlag constructor works with ENDSWITH" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FilterMatchFlag_enum_ENDSWITH.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FilterMatchFlag_enum_EXACTLY" purpose="FilterMatchFlag constructor works with EXACTLY" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FilterMatchFlag_enum_EXACTLY.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FilterMatchFlag_enum_FULLSTRING" purpose="FilterMatchFlag constructor works with FULLSTRING" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FilterMatchFlag_enum_FULLSTRING.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FilterMatchFlag_enum_STARTSWITH" purpose="FilterMatchFlag constructor works with STARTSWITH" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FilterMatchFlag_enum_STARTSWITH.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:51</start><end>2015-01-28 18:41:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="FitlerMatchFlag_enum_EXISTS" purpose="FilterMatchFlag constructor works with EXISTS" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/FitlerMatchFlag_enum_EXISTS.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SimpleCoordinates_constructor_successful" purpose="Check if latitude and longitude equals to the values that is set when create SimpleCoordinates" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SimpleCoordinates_constructor_successful.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SimpleCoordinates_exist" purpose="Check if SimpleCoordinates constructor exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SimpleCoordinates_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:52</end><stdout>[Message] *SimpleCoordinates_exist: assert_throws: Constructor called as function. function "function () {\n        tizen[constructorName]();\n    }" threw object "[object Object]" ("TypeMismatchError") expected object "[object Object]" ("TypeError")</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SimpleCoordinates_extend" purpose="Tizen.SimpleCoordinates - integration test" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SimpleCoordinates_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SimpleCoordinates_latitude_attribute" purpose="Check if latitude equals to the value that is set when create SimpleCoordinates" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SimpleCoordinates_latitude_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SimpleCoordinates_longitude_attribute" purpose="Check if longitude equals to the value that is set when create SimpleCoordinates" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SimpleCoordinates_longitude_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:52</start><end>2015-01-28 18:41:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortModeOrder_enum_ASC" purpose="SortMode constructor with ASC" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortModeOrder_enum_ASC.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortModeOrder_enum_DESC" purpose="SortMode constructor with DESC" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortModeOrder_enum_DESC.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortMode_attributeName_attribute" purpose="Check if attributeName equals to the value that is set when create SortMode" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortMode_attributeName_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortMode_constructor" purpose="Check if SortMode constructor is correct" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortMode_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:53</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortMode_exist" purpose="Check if SortMode constructor exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortMode_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:53</end><stdout>[Message] *SortMode_exist: assert_throws: Constructor called as function. function "function () {\n        tizen[constructorName]();\n    }" threw object "[object Object]" ("TypeMismatchError") expected object "[object Object]" ("TypeError")</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortMode_extend" purpose="Check if SortMode object can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortMode_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:53</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SortMode_order_attribute" purpose="Check if order attribute equals to the value that is set when create SortMode" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SortMode_order_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="SuccessCallback_notexist" purpose="Check if SuccessCallback not exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/SuccessCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="Tizen_extend" purpose="Check if Tizen object can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/Tizen_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="Tizen_managerobject" purpose="Check if tizen exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/Tizen_managerobject.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="Tizen_notexist" purpose="Check if tizen not exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/Tizen_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:54</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIError_code_attribute" purpose="Check if WebAPIError.code existence" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIError_code_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:54</start><end>2015-01-28 18:41:55</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIError_extend" purpose="Check if WebAPIError can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIError_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:55</start><end>2015-01-28 18:41:56</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIError_message_attribute" purpose="Check if WebAPIError.message existence" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIError_message_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:56</start><end>2015-01-28 18:41:57</end><stdout>[Message] *WebAPIError_message_attribute: assert_not_equals: Message is empty got disallowed value ""</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIError_name_attribute" purpose="Check if WebAPIError.name existence" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIError_name_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:57</start><end>2015-01-28 18:41:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIError_notexist" purpose="Check if WebAPIError exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIError_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:58</start><end>2015-01-28 18:41:58</end><stdout>[Message] *WebAPIError_notexist: assert_throws: Wrong call as a function function "function () {\n        tizen[interfaceName]();\n    }" did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_code_attribute" purpose="Check WebAPIException.code attribute: type, value and read-only (for NotFoundError)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_code_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:58</start><end>2015-01-28 18:41:58</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_ABORT_ERR" purpose="Check if ABORT_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_ABORT_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:58</start><end>2015-01-28 18:41:58</end><stdout>[Message] *WebAPIException_const_ABORT_ERR: assert_true: Name ABORT_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_DATA_CLONE_ERR" purpose="Check if DATA_CLONE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_DATA_CLONE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:58</start><end>2015-01-28 18:41:58</end><stdout>[Message] *WebAPIException_const_DATA_CLONE_ERR: assert_true: Name DATA_CLONE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_DOMSTRING_SIZE_ERR" purpose="Check if DOMSTRING_SIZE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_DOMSTRING_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:58</start><end>2015-01-28 18:41:58</end><stdout>[Message] *WebAPIException_const_DOMSTRING_SIZE_ERR: assert_true: Name DOMSTRING_SIZE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_HIERARCHY_REQUEST_ERR" purpose="Check if HIERARCHY_REQUEST_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_HIERARCHY_REQUEST_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:41:59</end><stdout>[Message] *WebAPIException_const_HIERARCHY_REQUEST_ERR: assert_true: Name HIERARCHY_REQUEST_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INDEX_SIZE_ERR" purpose="Check if INDEX_SIZE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INDEX_SIZE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:41:59</end><stdout>[Message] *WebAPIException_const_INDEX_SIZE_ERR: assert_true: Name INDEX_SIZE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INUSE_ATTRIBUTE_ERR" purpose="Check if INUSE_ATTRIBUTE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INUSE_ATTRIBUTE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:41:59</end><stdout>[Message] *WebAPIException_const_INUSE_ATTRIBUTE_ERR: assert_true: Name INUSE_ATTRIBUTE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INVALID_ACCESS_ERR" purpose="Check if INVALID_ACCESS_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INVALID_ACCESS_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:41:59</end><stdout>[Message] *WebAPIException_const_INVALID_ACCESS_ERR: assert_true: Name INVALID_ACCESS_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INVALID_CHARACTER_ERR" purpose="Check if INVALID_CHARACTER_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INVALID_CHARACTER_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:41:59</end><stdout>[Message] *WebAPIException_const_INVALID_CHARACTER_ERR: assert_true: Name INVALID_CHARACTER_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INVALID_MODIFICATION_ERR" purpose="Check if INVALID_MODIFICATION_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INVALID_MODIFICATION_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:41:59</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_INVALID_MODIFICATION_ERR: assert_true: Name INVALID_MODIFICATION_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INVALID_NODE_TYPE_ERR" purpose="Check if INVALID_NODE_TYPE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INVALID_NODE_TYPE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_INVALID_NODE_TYPE_ERR: assert_true: Name INVALID_NODE_TYPE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_INVALID_STATE_ERR" purpose="Check if INVALID_STATE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_INVALID_STATE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_INVALID_STATE_ERR: assert_true: Name INVALID_STATE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NAMESPACE_ERR" purpose="Check if NAMESPACE_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NAMESPACE_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_NAMESPACE_ERR: assert_true: Name NAMESPACE_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NETWORK_ERR" purpose="Check if NETWORK_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NETWORK_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_NETWORK_ERR: assert_true: Name NETWORK_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NOT_FOUND_ERR" purpose="Check if NOT_FOUND_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NOT_FOUND_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:00</end><stdout>[Message] *WebAPIException_const_NOT_FOUND_ERR: assert_true: Name NOT_FOUND_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NOT_SUPPORTED_ERR" purpose="Check if NOT_SUPPORTED_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NOT_SUPPORTED_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:00</start><end>2015-01-28 18:42:01</end><stdout>[Message] *WebAPIException_const_NOT_SUPPORTED_ERR: assert_true: Name NOT_SUPPORTED_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NO_DATA_ALLOWED_ERR" purpose="Check if NO_DATA_ALLOWED_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NO_DATA_ALLOWED_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:01</start><end>2015-01-28 18:42:01</end><stdout>[Message] *WebAPIException_const_NO_DATA_ALLOWED_ERR: assert_true: Name NO_DATA_ALLOWED_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_NO_MODIFICATION_ALLOWED_ERR" purpose="Check if NO_MODIFICATION_ALLOWED_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_NO_MODIFICATION_ALLOWED_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:01</start><end>2015-01-28 18:42:01</end><stdout>[Message] *WebAPIException_const_NO_MODIFICATION_ALLOWED_ERR: assert_true: Name NO_MODIFICATION_ALLOWED_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_QUOTA_EXCEEDED_ERR" purpose="Check if QUOTA_EXCEEDED_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_QUOTA_EXCEEDED_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:01</start><end>2015-01-28 18:42:01</end><stdout>[Message] *WebAPIException_const_QUOTA_EXCEEDED_ERR: assert_true: Name QUOTA_EXCEEDED_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_SECURITY_ERR" purpose="Check if SECURITY_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_SECURITY_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:01</start><end>2015-01-28 18:42:01</end><stdout>[Message] *WebAPIException_const_SECURITY_ERR: assert_true: Name SECURITY_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_SYNTAX_ERR" purpose="Check if SYNTAX_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_SYNTAX_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:01</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_SYNTAX_ERR: assert_true: Name SYNTAX_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_TIMEOUT_ERR" purpose="Check if TIMEOUT_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_TIMEOUT_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_TIMEOUT_ERR: assert_true: Name TIMEOUT_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_TYPE_MISMATCH_ERR" purpose="Check if TYPE_MISMATCH_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_TYPE_MISMATCH_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_TYPE_MISMATCH_ERR: assert_true: Name TYPE_MISMATCH_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_URL_MISMATCH_ERR" purpose="Check if URL_MISMATCH_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_URL_MISMATCH_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_URL_MISMATCH_ERR: assert_true: Name URL_MISMATCH_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_VALIDATION_ERR" purpose="Check if VALIDATION_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_VALIDATION_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_VALIDATION_ERR: assert_true: Name VALIDATION_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_const_WRONG_DOCUMENT_ERR" purpose="Check if WRONG_DOCUMENT_ERR equals to the value that is set in WebAPIException" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_const_WRONG_DOCUMENT_ERR.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:02</end><stdout>[Message] *WebAPIException_const_WRONG_DOCUMENT_ERR: assert_true: Name WRONG_DOCUMENT_ERR doesn't exist in provided object. expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_extend" purpose="Check if WebAPIException can be extended" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:42:02</start><end>2015-01-28 18:42:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_message_attribute" purpose="Check WebAPIException.message attribute: type and read-only for NotFoundError" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_message_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:03</start><end>2015-01-28 18:42:03</end><stdout>[Message] *WebAPIException_message_attribute: assert_not_equals: error.message got disallowed value ""</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_name_attribute" purpose="Check WebAPIException.name attribute: type, value and read-only (for NotFoundError)" result="PASS">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_name_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:42:03</start><end>2015-01-28 18:42:03</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Tizen/Tizen" execution_type="auto" id="WebAPIException_notexist" purpose="Check if WebAPIException not exists" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-tizen-tizen-tests/tizen/WebAPIException_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:42:03</start><end>2015-01-28 18:42:03</end><stdout>[Message] *WebAPIException_notexist: assert_throws: Wrong call as a function function "function () {\n        tizen[interfaceName]();\n    }" did not throw</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
