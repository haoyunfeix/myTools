<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="10.239.52.31:26101" device_model="" device_name="ivi_box&#10;" host="Linux-3.2.0-29-generic-pae-i686-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="" screen_size=""><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-29_03_12_11</start_at><end_at>2015-01-29_03_13_10</end_at></summary>
  <suite category="DLNA" extension="crosswalk" name="webapi-mediaserver-tizen-tests">
    <set name="mediaserver" set_debug_msg="N/A" type="js">
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_exist" purpose="Check if MediaServerManager interface exists" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_scanNetwork.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:17</start><end>2015-01-28 19:17:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_scanNetwork_exist" purpose="Check if scanNetwork exist in MediaServerManager" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_scanNetwork.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:17</start><end>2015-01-28 19:17:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_scanNetwork" purpose="Check if the method of scanNetwork is valid" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_scanNetwork.html?total_num=3&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:17</start><end>2015-01-28 19:17:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_onserverfound_exist" purpose="Check if onserverfound exists in MediaServerManager" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_onserverfound.html?total_num=2&amp;amp;locator_key=id&amp;amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:17</start><end>2015-01-28 19:17:17</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_onserverlost_exist" purpose="Check if onserverlost exists in MediaServerManager" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_onserverlost.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:18</start><end>2015-01-28 19:17:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="Navigator_mediaServer" purpose="Check if the Navigator has mediaServer attribute with proper type, object and readonly" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/Navigator_mediaServer.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:18</start><end>2015-01-28 19:17:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_id" purpose="Check if MediaServer.id exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:18</start><end>2015-01-28 19:17:18</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_friendlyName" purpose="Check if MediaServer.friendlyName exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:18</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_manufacturer" purpose="Check if MediaServer.manufacturer exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_manufacturerURL" purpose="Check if MediaServer.manufacturerURL exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_modelDescription" purpose="Check if MediaServer.modelDescription exists, readonly and type is DOMString" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message]assert_equals: modelDescription attribute type expected "string" but got "object"</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_modelName" purpose="Check if MediaServer.modelName exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_modelNumber" purpose="Check if MediaServer.modelNumber exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_serialNumber" purpose="Check if MediaServer.serialNumber exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_UDN" purpose="Check if MediaServer.UDN exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_presentationURL" purpose="Check if MediaServer.presentationURL exists, readonly and type is DOMString" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message]assert_equals: presentationURL attribute type expected "string" but got "object"</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_iconURL" purpose="Check if MediaServer.iconURL exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_deviceType" purpose="Check if MediaServer.deviceType exists, readonly and type is DOMString" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_root" purpose="Check if MediaServer.root exists, readonly and type is object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=14</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_canUpload" purpose="Check if MediaServer.canUpload exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=15</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message]assert_equals: canUpload attribute type expected "boolean" but got "string"</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_canCreateContainer" purpose="Check if MediaServer.canCreateContainer exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=16</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message]assert_equals: canCreateContainer attribute type expected "boolean" but got "string"</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_searchAttrs" purpose="Check if MediaServer.searchAttrs exists, readonly and type is object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=17</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_sortAttrs" purpose="Check if MediaServer.sortAttrs exists, readonly and type is object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=18</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_upload" purpose="Check if upload method exists in MediaServer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=19</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_createFolder" purpose="Check if createFolder method exists in MediaServer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=20</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_browse" purpose="Check if browse method exists in MediaServer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=21</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_find" purpose="Check if find method exists in MediaServer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=22</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_cancel" purpose="Check if cancel method exists in MediaServer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=23</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_oncontainerchanged" purpose="Check if oncontainerchanged event exists in MediaServer and type is event" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_attributes.html?total_num=24&amp;amp;locator_key=id&amp;amp;value=24</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:19</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_childCount" onload_delay="30" purpose="Check if MediaContainer.childCount exists, readonly and type is number" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:19</start><end>2015-01-28 19:17:20</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_canCreateContainer" purpose="Check if MediaContainer.canCreateContainer exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message]assert_true: canCreateContainer exists expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_canDelete" purpose="Check if MediaContainer.canDelete exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message]assert_true: canDelete exists expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_canUpload" purpose="Check if MediaContainer.canUpload exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=5</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message]assert_true: canUpload exists expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_canRename" purpose="Check if MediaContainer.canRename exists, readonly and type is boolean" result="FAIL">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message]assert_true: canRename exists expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_upload" purpose="Check if upload method exists in MediaContainer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=7</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_createFolder" purpose="Check if createFolder method exists in MediaContainer and type is function" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_attributes.html?total_num=8&amp;amp;locator_key=id&amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:20</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_cancel_basic" purpose="Check if the MediaServer.cancel method work well" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_cancel_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:20</start><end>2015-01-28 19:17:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_createFolder_basic" purpose="Check if the MediaServer.createFolder method can work well" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_createFolder_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:21</start><end>2015-01-28 19:17:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_browse_basic" purpose="Check if the MediaServer.browse method can work well" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_browse_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:21</start><end>2015-01-28 19:17:24</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_find_basic" purpose="Check if the MediaServer.find method can work well" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_find_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:24</start><end>2015-01-28 19:17:28</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_upload_basic" purpose="Check if the MediaServer.upload method can work well" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_upload_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:28</start><end>2015-01-28 19:17:31</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServer_oncontainerchanged_event" purpose="Check if the oncontainerchanged event can be invoked" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServer_oncontainerchanged_event.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:31</start><end>2015-01-28 19:17:34</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_upload_basic" purpose="Check if the MediaContainer.upload method can work well" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_upload_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:34</start><end>2015-01-28 19:17:37</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainer_createFolder_basic" purpose="Check if the MediaContainer.createFolder method can work well" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainer_createFolder_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:37</start><end>2015-01-28 19:17:40</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_onserverfound" purpose="Check if the onserverfound event can be invoked" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_onserverfound.html?total_num=2&amp;amp;locator_key=id&amp;amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:40</start><end>2015-01-28 19:17:43</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerManager_onserverlost_basic" purpose="Check if the onserverlost event can be invoked" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerManager_onserverlost_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:43</start><end>2015-01-28 19:17:46</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerIdEvent_id_exist" purpose="Check if the id attribute exists in MediaServerIdEvent" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerIdEvent_id_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:46</start><end>2015-01-28 19:17:50</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerIdEvent_id_value" purpose="Check if the MediaServerIdEvent.id MUST return the id of the MediaServer that triggered the onserverlost event when getting" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerIdEvent_id_value.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:50</start><end>2015-01-28 19:17:53</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainerIdEvent_id_exist" purpose="Check if the id attribute exists in MediaContainerIdEvent" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainerIdEvent_id_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:53</start><end>2015-01-28 19:17:56</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaContainerIdEvent_id_value" purpose="Check if the MediaContainerIdEvent.id MUST return the id of the MediaContainer that triggered the containerchanged event when getting" result="BLOCK">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaContainerIdEvent_id_value.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 19:17:56</start><end>2015-01-28 19:17:59</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Common APIs/DLNA Media Server API" execution_type="auto" id="MediaServerEvent_server" purpose="Check if the MediaServerEvent.server exists, readonly and type is object" result="PASS">
        <description>
          <test_script_entry>/opt/webapi-mediaserver-tizen-tests/mediaserver/MediaServerEvent_server.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 19:17:59</start><end>2015-01-28 19:18:02</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
