<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="10.239.52.31:26101" device_model="" device_name="ivi_box&#10;" host="Linux-3.2.0-29-generic-pae-i686-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="" screen_size=""><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-29_02_16_35</start_at><end_at>2015-01-29_02_36_33</end_at></summary>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-download-tizen-tests">
    <set name="Download" set_debug_msg="N/A" type="js">
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_exist" purpose="Check if DownloadManager::start() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:21:41</start><end>2015-01-28 18:21:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_cancel_exist" purpose="Check if DownloadManager::cancel() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_cancel_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:21:41</start><end>2015-01-28 18:21:41</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_pause_exist" purpose="Check if DownloadManager::pause() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_pause_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:21:42</start><end>2015-01-28 18:21:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_resume_exist" purpose="Check if DownloadManager::resume() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_resume_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:21:42</start><end>2015-01-28 18:21:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getState_exist" purpose="Check if DownloadManager::getState() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:21:42</start><end>2015-01-28 18:21:42</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getState_using" onload_delay="90" purpose="Check if DownloadManager::getState() method returns proper value" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState_using.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 18:21:42</start><end>2015-01-28 18:21:45</end><stdout>[Message] *DownloadManager_getState_using: assert_unreached: onfailed should not be reached Reached unreachable code</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_onprogress" onload_delay="90" purpose="Test whether the type of each argument is correct for DownloadCallback::onprogress callback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onprogress.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:21:45</start><end>2015-01-28 18:23:16</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_destination_attribute" purpose="Check attribute DownloadRequest::destination existence and type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_destination_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:23:16</start><end>2015-01-28 18:23:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_fileName_attribute" purpose="Check attribute DownloadRequest::fileName existence and type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_fileName_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:23:16</start><end>2015-01-28 18:23:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_cancel" onload_delay="90" purpose="Check if DownloadManager::cancel() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_cancel.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:23:16</start><end>2015-01-28 18:24:46</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getState" onload_delay="90" purpose="Check if DownloadManager::getState() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getState.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:24:46</start><end>2015-01-28 18:26:17</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_pause" onload_delay="90" purpose="Check if DownloadManager::pause() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_pause.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:26:17</start><end>2015-01-28 18:27:47</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_resume" onload_delay="90" purpose="Check if DownloadManager::resume() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_resume.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:27:47</start><end>2015-01-28 18:29:17</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start" purpose="Check if DownloadManager::start() method with downloadRequest non-optional argument works" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:17</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManagerObject_download_exists" purpose="Check if tizen namespace contains download object and DownloadManagerObject interface is not available" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManagerObject_download_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_url_attribute" purpose="Check attribute DownloadRequest::url existence and type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_url_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_with_extra_argument" purpose="Check if DownloadManager::start() method works when extra argument is given" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_with_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getDownloadRequest_exist" purpose="Check if DownloadManager::getDownloadRequest() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getDownloadRequest_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getMIMEType_exist" purpose="Check if DownloadManager::getMIMEType() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getMIMEType_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener_exist" purpose="Check if DownloadManager::setListener() method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:29:18</start><end>2015-01-28 18:29:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getDownloadRequest" onload_delay="90" purpose="Check if DownloadManager::getDownloadRequest() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getDownloadRequest.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:29:19</start><end>2015-01-28 18:30:49</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_getMIMEType" onload_delay="90" purpose="Check if DownloadManager::getMIMEType() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_getMIMEType.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:30:49</start><end>2015-01-28 18:32:19</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener" onload_delay="90" purpose="Check if DownloadManager::setListener() method works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:32:19</start><end>2015-01-28 18:33:50</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener_null" purpose="Check if DownloadManager::setListener() method throw an TypeMismatchError when downloadId and downloadCallback are null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_null.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:50</start><end>2015-01-28 18:33:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_extend" purpose="Check if DownloadRequest object can have new attribute added" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:50</start><end>2015-01-28 18:33:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_constructor" purpose="Check if DownloadRequest constructor sets attributes according to arguments given" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_constructor.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:50</start><end>2015-01-28 18:33:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_exist" purpose="Check if DownloadRequest constructor exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:50</start><end>2015-01-28 18:33:50</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener_downloadCallback_invalid_cb" onload_delay="90" purpose="Check if DownloadManager::setListener() method throws exception given wrong downloadCallback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_downloadCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:50</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener_downloadCallback_TypeMismatch" onload_delay="90" purpose="Check if DownloadManager::setListener() method throws exception for wrong type of downloadCallback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_downloadCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_setListener_missarg" purpose="Check if DownloadManager::setListener() method with missing non-optional argument throws exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_setListener_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_missarg" purpose="Check if DownloadManager::start() method with mandatory argument missing works" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_extend" purpose="Test whether the DownloadManager object can have new attribute added" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_notexist" purpose="Check if DownloadCallback is NoInterfaceObject and not visible" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_notexist" purpose="Check if DownloadManager is NoInterfaceObject and not visible" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:51</start><end>2015-01-28 18:33:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_in_tizen" purpose="Check if tizen namespace contains download" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_in_tizen.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:52</start><end>2015-01-28 18:33:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_downloadCallback_invalid_cb" onload_delay="90" purpose="Check if DownloadManager::start() method throws exception when giving invalid listener" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadCallback_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:52</start><end>2015-01-28 18:33:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_downloadRequest_invalid_obj" onload_delay="90" purpose="Check if DownloadManager::start() method throws exception given wrong downloadRequest" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadRequest_invalid_obj.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:33:52</start><end>2015-01-28 18:33:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_with_downloadCallback" onload_delay="90" purpose="Check if DownloadManager::start() method with downloadCallback optional argument works" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_with_downloadCallback.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:33:52</start><end>2015-01-28 18:35:22</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_downloadRequest_TypeMismatch" onload_delay="90" purpose="Check if DownloadManager::start() method throws exception for wrong type of downloadRequest" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadRequest_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:35:22</start><end>2015-01-28 18:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManager_start_downloadCallback_TypeMismatch" onload_delay="90" purpose="Check if DownloadManager::start() method throws exception for wrong type of downloadCallback" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManager_start_downloadCallback_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:35:23</start><end>2015-01-28 18:35:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_onpaused" onload_delay="90" purpose="Test whether the type of each argument is correct for DownloadCallback::onpaused callback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onpaused.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:35:23</start><end>2015-01-28 18:36:53</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_oncanceled" onload_delay="90" purpose="Test whether the type of each argument is correct for DownloadCallback::oncanceled callback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_oncanceled.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:36:53</start><end>2015-01-28 18:38:23</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_oncompleted" onload_delay="90" purpose="Test whether the type of each argument is correct for DownloadCallback::oncompleted callback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_oncompleted.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:38:24</start><end>2015-01-28 18:39:54</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadCallback_onfailed" onload_delay="90" purpose="Test whether the type of each argument is correct for DownloadCallback::onfailed callback" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadCallback_onfailed.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 18:39:54</start><end>2015-01-28 18:41:24</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_networkType_attribute" purpose="Check attribute DownloadRequest::networkType existence and possible values" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_networkType_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:24</start><end>2015-01-28 18:41:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadRequest_httpHeader_attribute" purpose="Check attribute DownloadRequest::httpHeader existence and type" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadRequest_httpHeader_attribute.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:24</start><end>2015-01-28 18:41:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/Content/Download" execution_type="auto" id="DownloadManagerObject_notexist" purpose="Check if DownloadManagerObject is NoInterfaceObject and not visible" result="PASS">
        <description>
          <test_script_entry>/opt/tct-download-tizen-tests/download/DownloadManagerObject_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 18:41:25</start><end>2015-01-28 18:41:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
