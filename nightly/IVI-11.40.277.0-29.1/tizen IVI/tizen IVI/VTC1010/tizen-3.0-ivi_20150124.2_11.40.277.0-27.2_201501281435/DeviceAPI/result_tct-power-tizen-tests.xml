<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="10.239.52.31:26101" device_model="" device_name="ivi_box&#10;" host="Linux-3.2.0-29-generic-pae-i686-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="" screen_size=""><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-28_22_37_37</start_at><end_at>2015-01-28_22_40_58</end_at></summary>
  <suite category="Tizen Web Device APIs" extension="crosswalk" name="tct-power-tizen-tests">
    <set name="Power" set_debug_msg="N/A" type="js">
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOn_method_exists" purpose="Check if turnScreenOn method exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOn_method_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:42</start><end>2015-01-28 14:42:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_missarg" purpose="Check if request() method called without all obligatory arguments throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:43</start><end>2015-01-28 14:42:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManagerObject_notexist" purpose="Check if interface PowerManagerObject exists, it should not" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManagerObject_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:43</start><end>2015-01-28 14:42:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_notexist" purpose="Check if interface PowerManager exists, it should not" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:43</start><end>2015-01-28 14:42:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="ScreenStateChangeCallback_notexist" purpose="Check if interface ScreenStateChangeCallback exists, it should not" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/ScreenStateChangeCallback_notexist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:43</start><end>2015-01-28 14:42:43</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_extend" purpose="Check if tizen.power can have new properties added, it should not" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_extend.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:43</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_in_tizen" purpose="Check if Tizen implements interface PowerManagerObject and has attribute power" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_in_tizen.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_exist" purpose="Check if method request of PowerManager exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_CPU_AWAKE" purpose="Check whether request() method with CPU resource and CPU_AWAKE state does not throw exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_CPU_AWAKE.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_SCREEN_DIM" purpose="Check whether request() method with SCREEN resource and SCREEN_DIM state does not throw exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_SCREEN_DIM.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_SCREEN_NORMAL" purpose="Check whether request() method with SCREEN resource and SCREEN_NORMAL state does not throw exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_SCREEN_NORMAL.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:44</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_resource_TypeMismatch" purpose="Check if request() method throws TypeMismatchException when incorrect resource given" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_resource_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:44</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_request_state_TypeMismatch" purpose="Check if request() method throws TypeMismatchException when incorrect state given" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_request_state_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_release" purpose="Check if release() method called with proper argument does not throw exceptions" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_release.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_release_exist" purpose="Check if method release of PowerManager exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_release_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_release_missarg" purpose="Check if release() method called without all obligatory arguments throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_release_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_release_resource_TypeMismatch" purpose="Check if release() method throws TypeMismatchException when incorrect resource given" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_release_resource_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:45</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_getScreenBrightness" purpose="Check if getScreenBrightness method called with non-optional arguments does what it should" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_getScreenBrightness.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:42:45</start><end>2015-01-28 14:42:46</end><stdout>[Message] *PowerManager_getScreenBrightness:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_getScreenBrightness_exist" purpose="Check if getScreenBrightness exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_getScreenBrightness_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:46</start><end>2015-01-28 14:42:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_getScreenBrightness_extra_argument" purpose="Check if getScreenBrightness method can be invoked with extra argument" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_getScreenBrightness_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:42:46</start><end>2015-01-28 14:42:46</end><stdout>[Message] *PowerManager_getScreenBrightness_extra_argument:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_isScreenOn" purpose="Check if isScreenOn method called with non-optional arguments does what it should" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_isScreenOn.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:46</start><end>2015-01-28 14:42:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_isScreenOn_exist" purpose="Check if isScreenOn exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_isScreenOn_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:46</start><end>2015-01-28 14:42:46</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_isScreenOn_extra_argument" purpose="Check if isScreenOn method can be invoked with extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_isScreenOn_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:46</start><end>2015-01-28 14:42:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_restoreScreenBrightness" purpose="Check if restoreScreenBrightness method called with non-optional arguments does what it should" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_restoreScreenBrightness.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:42:47</start><end>2015-01-28 14:42:47</end><stdout>[Message] *PowerManager_restoreScreenBrightness:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_restoreScreenBrightness_exist" purpose="Check if restoreScreenBrightness exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_restoreScreenBrightness_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:47</start><end>2015-01-28 14:42:47</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_restoreScreenBrightness_extra_argument" purpose="Check if restoreScreenBrightness method can be invoked with extra argument" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_restoreScreenBrightness_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:42:47</start><end>2015-01-28 14:42:47</end><stdout>[Message] *PowerManager_restoreScreenBrightness_extra_argument:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenBrightness" purpose="Check if setScreenBrightness method called with non-optional arguments does what it should" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenBrightness.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:42:47</start><end>2015-01-28 14:42:47</end><stdout>[Message] *PowerManager_setScreenBrightness:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenBrightness_brightness_TypeMismatch" purpose="Check if setScreenBrightness throws exception when brightness is incorrect" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenBrightness_brightness_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:47</start><end>2015-01-28 14:42:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenBrightness_exist" purpose="Check if setScreenBrightness exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenBrightness_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:48</start><end>2015-01-28 14:42:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenBrightness_missarg" purpose="Check if setScreenBrightness method called with missing non-optional argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenBrightness_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:42:48</start><end>2015-01-28 14:42:48</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenStateChangeListener" onload_delay="90" purpose="Check if setScreenStateChangeListener method called with non-optional arguments does what it should" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenStateChangeListener.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:42:48</start><end>2015-01-28 14:44:18</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenStateChangeListener_exist" purpose="Check if setScreenStateChangeListener exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenStateChangeListener_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:18</start><end>2015-01-28 14:44:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenStateChangeListener_listener_TypeMismatch" purpose="Check if setScreenStateChangeListener throws exception when listener is incorrect" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenStateChangeListener_listener_TypeMismatch.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:18</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenStateChangeListener_listener_invalid_cb" onload_delay="90" purpose="Check if setScreenStateChangeListener throws exception when success callback is incorrect" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenStateChangeListener_listener_invalid_cb.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenStateChangeListener_missarg" purpose="Check if setScreenStateChangeListener method called with missing non-optional argument throws an exception" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenStateChangeListener_missarg.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOff" purpose="Check if turnScreenOff method called with non-optional arguments does what it should" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOff.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOff_exist" purpose="Check if turnScreenOff exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOff_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOff_extra_argument" purpose="Check if turnScreenOff method can be invoked with extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOff_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:19</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOn" purpose="Check if turnScreenOn method called with non-optional arguments does what it should" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOn.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:19</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOn_exist" purpose="Check if turnScreenOn exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOn_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_turnScreenOn_extra_argument" purpose="Check if turnScreenOn method can be invoked with extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_turnScreenOn_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_unsetScreenStateChangeListener" purpose="Check if unsetScreenStateChangeListener method called with non-optional arguments does what it should" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_unsetScreenStateChangeListener.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_unsetScreenStateChangeListener_exist" purpose="Check if unsetScreenStateChangeListener exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_unsetScreenStateChangeListener_exist.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_unsetScreenStateChangeListener_extra_argument" purpose="Check if unsetScreenStateChangeListener method can be invoked with extra argument" result="PASS">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_unsetScreenStateChangeListener_extra_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:44:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="ScreenStateChangeCallback_onchanged" onload_delay="90" purpose="Check if ContentScanSuccessCallback onchanged is called and if its arguments have proper type" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/ScreenStateChangeCallback_onchanged.html</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-28 14:44:20</start><end>2015-01-28 14:45:51</end><stdout>[Message]Timeout</stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_setScreenBrightness_brightness_invalid_val" purpose="Check if setScreenBrightness() method doesn't set out of range screen brightness" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_setScreenBrightness_brightness_invalid_val.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:45:51</start><end>2015-01-28 14:45:51</end><stdout>[Message] *PowerManager_setScreenBrightness_brightness_invalid_val:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_getScreenBrightness_check_change" purpose="Check whether getScreenBrightness() method gets the screen brightness level correctly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_getScreenBrightness_check_change.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:45:51</start><end>2015-01-28 14:45:51</end><stdout>[Message] *PowerManager_getScreenBrightness_check_change:  </stdout><stderr /></result_info></testcase>
      <testcase component="Tizen Device APIs/System/Power" execution_type="auto" id="PowerManager_isScreenOn_check_change" purpose="Check whether isScreenOn() method gets the screen state correctly" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-power-tizen-tests/power/PowerManager_isScreenOn_check_change.html</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-28 14:45:51</start><end>2015-01-28 14:45:51</end><stdout>[Message] *PowerManager_isScreenOn_check_change: assert_true: Check if screen is on expected true got false</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
