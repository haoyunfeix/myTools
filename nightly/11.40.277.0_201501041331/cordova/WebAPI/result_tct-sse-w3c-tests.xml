<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E6OKCY549771" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.12" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-01-04_16_51_09</start_at><end_at>2015-01-04_16_53_52</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-sse-w3c-tests" widget="webapi-service-tests">
    <set name="ServerSentEvent" set_debug_msg="N/A" type="js">
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_url_exists" purpose="Check if EventSource.url attribute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_url_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:25</start><end>2015-01-04 16:51:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_CONNECTING_default_value" purpose="Check if EventSource.CONNECTING is default value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_CONNECTING_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:25</start><end>2015-01-04 16:51:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_OPEN_default_value" purpose="Check if EventSource.OPEN is default value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_OPEN_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:25</start><end>2015-01-04 16:51:25</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_CLOSED_default_value" purpose="Check if EventSource.CLOSED is default value" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_CLOSED_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:25</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_readyState_exists" purpose="Check if EventSource.readyState arrtibute exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_readyState_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_onopen_exists" purpose="Check if EventSource onopen event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_onopen_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_onmessage_exists" purpose="Check if EventSource onmessage event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_onmessage_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_onerror_exists" purpose="Check if EventSource onerror event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_onerror_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_close_exists" purpose="Check if EventSource.close event exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_close_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-close" purpose="Check the method close()" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-close.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:51:26</start><end>2015-01-04 16:51:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-constructor-document-domain" purpose="Check the constructor of EventSource when set the document domain correct value" result="BLOCK">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-document-domain.htm</test_script_entry>
        </description>
      <result_info><actual_result>BLOCK</actual_result><start>2015-01-04 16:51:28</start><end>2015-01-04 16:53:08</end><stdout>Time is out</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="Eventsource-constructor-stringify_1" purpose="Check if the stringify argument of EventSource is set to object" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-stringify.htm?total_num=4&amp;locator_key=id&amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:15</start><end>2015-01-04 16:53:15</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="Eventsource-constructor-stringify_2" purpose="Check if the stringify argument of EventSource is set to 1" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-stringify.htm?total_num=4&amp;locator_key=id&amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:15</start><end>2015-01-04 16:53:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="Eventsource-constructor-stringify_3" purpose="Check if the stringify argument of EventSource is set to null" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-stringify.htm?total_num=4&amp;locator_key=id&amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:16</start><end>2015-01-04 16:53:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="Eventsource-constructor-stringify_4" purpose="Check if the stringify argument of EventSource is set to undefined" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-stringify.htm?total_num=4&amp;locator_key=id&amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:16</start><end>2015-01-04 16:53:16</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-constructor-url-bogus" purpose="Check if the parameter of EventSource method is invalid" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-url-bogus.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:16</start><end>2015-01-04 16:53:16</end><stdout>[Message] *EventSource: constructor (invalid URL): assert_throws: function "function () { new EventSource("http://this is invalid/") }" did not throw</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-constructor-url-multi-window" purpose="Check that resolve URLs correctly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-constructor-url-multi-window.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:16</start><end>2015-01-04 16:53:16</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-prototype" purpose="Check if the EventSource exists" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-prototype.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:16</start><end>2015-01-04 16:53:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-eventtarget" purpose="Check if can add message event listener and receive the message" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-eventtarget.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:17</start><end>2015-01-04 16:53:17</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-reconnect" purpose="Check if the event of a reconnection can be got" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-reconnect.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:17</start><end>2015-01-04 16:53:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-url" purpose="Check if the value of EventSource.url is correct" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:18</start><end>2015-01-04 16:53:18</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-data-before-final-empty-line" purpose="Check if the file ends in the middle of an event, before the final empty line, the incomplete event is not dispatched" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-data-before-final-empty-line.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:18</start><end>2015-01-04 16:53:20</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-data" purpose="Check the data field parsing" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-data.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:20</start><end>2015-01-04 16:53:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-null-character" purpose="Check null character in response" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-null-character.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:21</start><end>2015-01-04 16:53:21</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-bom-2" purpose="Check the format of double bom" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-bom-2.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:21</start><end>2015-01-04 16:53:22</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-bom" purpose="Check the format of bom" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-bom.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:22</start><end>2015-01-04 16:53:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-event-empty" purpose="Check the format of empty  event  field" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-event-empty.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:23</start><end>2015-01-04 16:53:23</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-event" purpose="Check the format of event field when the event name is custom" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-event.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:23</start><end>2015-01-04 16:53:24</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-id-2" purpose="Check the format of multiple las event id  field" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-id-2.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:24</start><end>2015-01-04 16:53:25</end><stdout>[Message] *EventSource: Last-Event-ID (2): assert_equals: expected "?" but got "…"</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-id" purpose="Check the format of las event id  field" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-id.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:25</start><end>2015-01-04 16:53:25</end><stdout>[Message] *EventSource: Last-Event-ID: assert_equals: expected "?" but got "…"</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-retry-empty" purpose="Check the format of empty retry field" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-retry-empty.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:25</start><end>2015-01-04 16:53:26</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-field-unknown" purpose="Check the format of unknown field" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-field-unknown.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:26</start><end>2015-01-04 16:53:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-leading-space" purpose="Check event stream format with a single leading space character" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-leading-space.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:27</start><end>2015-01-04 16:53:27</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-mime-bogus" purpose="Check bogus MIME type of event stream format" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-mime-bogus.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:27</start><end>2015-01-04 16:53:28</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-mime-trailing-semicolon" purpose="Check MIME type with trailing semicolon of event stream format" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-mime-trailing-semicolon.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:28</start><end>2015-01-04 16:53:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-mime-valid-bogus" purpose="Check incorrect valid MIME type of event stream format" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-mime-valid-bogus.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:29</start><end>2015-01-04 16:53:29</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="format-newlines" purpose="Check newline fest of event stream format" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/format-newlines.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:29</start><end>2015-01-04 16:53:30</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="request-accept" purpose="Check if  'text/event-stream' must be one of accept header for HTTP connections" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/request-accept.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:30</start><end>2015-01-04 16:53:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="request-redirect" purpose="Check request redirects of EventSource" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/request-redirect.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:31</start><end>2015-01-04 16:53:31</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="request-status-error" purpose="Check if set incorrect HTTP status code, that onerror event will be invoked" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/request-status-error.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:31</start><end>2015-01-04 16:53:32</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onmessage" purpose="Check if trigger EventSource.onmessage event when get the data form a server" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-onmessage.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:32</start><end>2015-01-04 16:53:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onopen" purpose="Check if trigger EventSource.onopen event when the user agent has an open connection" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/eventsource-onopen.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:33</start><end>2015-01-04 16:53:33</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-close-dedicated-worker" purpose="Check close() of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-close.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:33</start><end>2015-01-04 16:53:34</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-constructor-url-bogus-dedicated-worker" purpose="Check constructor (invalid URL) of EventSource with dedicated worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-constructor-url-bogus.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:34</start><end>2015-01-04 16:53:35</end><stdout>[Message] *dedicated worker - EventSource: constructor (invalid URL): assert_true: no exception thrown expected true got false</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-eventtarget-dedicated-worker" purpose="Check addEventListener() of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-eventtarget.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:35</start><end>2015-01-04 16:53:35</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onmesage-dedicated-worker" purpose="Check onmessage of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-onmesage.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:35</start><end>2015-01-04 16:53:36</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onopen-dedicated-worker" purpose="Check onopen (announcing the connection) of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-onopen.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:36</start><end>2015-01-04 16:53:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-prototype-dedicated-worker" purpose="Check prototype et al of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-prototype.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:37</start><end>2015-01-04 16:53:37</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-url-dedicated-worker" purpose="Check url of EventSource with dedicated worker" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/dedicated-worker/eventsource-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:37</start><end>2015-01-04 16:53:38</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-close-shared-worker" purpose="Check close() of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-close.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:38</start><end>2015-01-04 16:53:38</end><stdout>[Message] *shared worker - EventSource: close(): SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-close.htm:27:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-close.htm:26:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-constructor-url-bogus-shared-worker" purpose="Check constructor (invalid URL) of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-constructor-url-bogus.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:38</start><end>2015-01-04 16:53:38</end><stdout>[Message] *shared worker - EventSource: constructor (invalid URL): SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-constructor-url-bogus.htm:25:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-constructor-url-bogus.htm:24:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-eventtarget-shared-worker" purpose="Check addEventListener() of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-eventtarget.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:38</start><end>2015-01-04 16:53:39</end><stdout>[Message] *shared worker - EventSource: addEventListener(): SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-eventtarget.htm:28:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-eventtarget.htm:27:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onmesage-shared-worker" purpose="Check onmessage of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onmesage.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:39</start><end>2015-01-04 16:53:39</end><stdout>[Message] *shared worker - EventSource: onmessage: SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onmesage.htm:27:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onmesage.htm:26:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-onopen-shared-worker" purpose="Check onopen (announcing the connection) of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onopen.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:39</start><end>2015-01-04 16:53:39</end><stdout>[Message] *shared worker - EventSource: onopen (announcing the connection): SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onopen.htm:27:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-onopen.htm:26:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-prototype-shared-worker" purpose="Check prototype et al of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-prototype.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:39</start><end>2015-01-04 16:53:39</end><stdout>[Message] *shared worker - EventSource: prototype et al: SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-prototype.htm:26:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-prototype.htm:25:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="eventsource-url-shared-worker" purpose="Check url of EventSource with shared worker" result="FAIL">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-url.htm</test_script_entry>
        </description>
      <result_info><actual_result>FAIL</actual_result><start>2015-01-04 16:53:39</start><end>2015-01-04 16:53:39</end><stdout>[Message] *shared worker - EventSource: url: SharedWorker is not defined(stack: ReferenceError: SharedWorker is not defined\n    at Object.&lt;anonymous&gt; (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-url.htm:26:26)\n    at Object.Test.step (http://127.0.0.1:8080/opt/tct-sse-w3c-tests/resources/testharness.js:1176:25)\n    at http://127.0.0.1:8080/opt/tct-sse-w3c-tests/sse/w3c/shared-worker/eventsource-url.htm:24:12)</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_CLOSED" purpose="Check if EventSource.CLOSED attribute exists and typeof number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_CLOSED.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:39</start><end>2015-01-04 16:53:39</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_CONNECTING" purpose="Check if EventSource.CONNECTING attribute exists and typeof number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_CONNECTING.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:40</start><end>2015-01-04 16:53:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_onerror_base" purpose="Check if trigger EventSource.onerror event when connection happens an error" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_onerror_base.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:40</start><end>2015-01-04 16:53:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_OPEN" purpose="Check if EventSource.OPEN attribute exists and typeof number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_OPEN.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:40</start><end>2015-01-04 16:53:40</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_readyState_type" onload_delay="12" purpose="Check if the type of ServerSentEvent.readyState is number" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_readyState.html?total_num=5&amp;locator_key=id&amp;value=1</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:40</start><end>2015-01-04 16:53:51</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_readyState_readonly" onload_delay="12" purpose="Check if EventSource.readyState attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_readyState.html?total_num=5&amp;locator_key=id&amp;value=2</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:51</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_readyState_CONNECTING" onload_delay="12" purpose="Check if EventSource.readyState is CONNECTING when the eventsource is created" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_readyState.html?total_num=5&amp;locator_key=id&amp;value=3</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:51</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_readyState_CLOSED" onload_delay="12" purpose="Check if EventSource.readyState is CLOSED when the eventsource is closed" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_readyState.html?total_num=5&amp;locator_key=id&amp;value=4</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:51</end><stdout>[Message] </stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_url_readonly" purpose="Check if EventSource.url attribute is readonly" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_url_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_url_type" purpose="Check if the type of ServerSentEvent.url is string" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_url_type.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:51</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Communication/Server-Sent Events" execution_type="auto" id="sse_EventSource_WorkerUtils_exists" purpose="Check if ServerSentEvent.EventSource() implement the WorkerUtils interface" result="PASS">
        <description>
          <test_script_entry>/opt/tct-sse-w3c-tests/sse/sse_EventSource_WorkerUtils_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>PASS</actual_result><start>2015-01-04 16:53:51</start><end>2015-01-04 16:53:52</end><stdout>[Message]</stdout><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
