<?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="testresult.xsl"?>
<test_definition><environment build_id="" device_id="E6OKCY410686" device_model="" device_name="N/A" host="Linux-3.13.0-39-generic-x86_64-with-Ubuntu-12.04-precise" lite_version="3.1.13" manufacturer="" resolution="N/A" screen_size="N/A"><other /></environment>
<summary test_plan_name="Empty test_plan_name"><start_at>2015-02-05_08_57_09</start_at><end_at>2015-02-05_08_57_29</end_at></summary>
  <suite category="W3C/HTML5 APIs" name="tct-webaudio-w3c-tests" widget="webapi-noneservice-tests">
    <set name="WebAudio1" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_fftSize_exists" purpose="Check if AnalyserNode.fftSize attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_fftSize_type" purpose="Check if the type of AnalyserNode.fftSize is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_frequencyBinCount_exists" purpose="Check if AnalyserNode.frequencyBinCount attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_frequencyBinCount_readonly" purpose="Check if AnalyserNode.frequencyBinCount attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_frequencyBinCount_type" purpose="Check if the type of AnalyserNode.frequencyBinCount is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteFrequencyData_exists" purpose="Check if AnalyserNode.getByteFrequencyData method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteFrequencyData_type" purpose="Check if the type of AnalyserNode.getByteFrequencyData is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteTimeDomainData_exists" purpose="Check if AnalyserNode.getByteTimeDomainData method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteTimeDomainData_type" purpose="Check if the type of AnalyserNode.getByteTimeDomainData is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getFloatFrequencyData_exists" purpose="Check if AnalyserNode.getFloatFrequencyData method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getFloatFrequencyData_type" purpose="Check if the type of AnalyserNode.getFloatFrequencyData is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_maxDecibels_exists" purpose="Check if AnalyserNode.maxDecibels attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_maxDecibels_type" purpose="Check if the type of AnalyserNode.maxDecibels is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_minDecibels_exists" purpose="Check if AnalyserNode.minDecibels attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_minDecibels_type" purpose="Check if the type of AnalyserNode.minDecibels attribute is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_smoothingTimeConstant_exists" purpose="Check if AnalyserNode.smoothingTimeConstant attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_smoothingTimeConstant_type" purpose="Check if the type of AnalyserNode.smoothingTimeConstant is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_duration_exists" purpose="Check if AudioBuffer.duration attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_duration_readonly" purpose="Check if AudioBuffer.duration attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_duration_type" purpose="Check if the type of AudioBuffer.duration is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_getChannelData_exists" purpose="Check if AudioBuffer.getChannelData method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_getChannelData_type" purpose="Check if the return type of AudioBuffer.getChannelData is Float32Array" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_length_exists" purpose="Check if AudioBuffer.length attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_length_readonly" purpose="Check if AudioBuffer.length attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_length_type" purpose="Check if the type of AudioBuffer.length is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_numberOfChannels_exists" purpose="Check if AudioBuffer.numberOfChannels attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_numberOfChannels_readonly" purpose="Check if AudioBuffer.numberOfChannels attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_numberOfChannels_type" purpose="Check if the type of AudioBuffer.numberOfChannels is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_sampleRate_exists" purpose="Check if AudioBuffer.sampleRate attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_sampleRate_readonly" purpose="Check if AudioBuffer.sampleRate attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_sampleRate_type" purpose="Check if the type of AudioBuffer.sampleRate is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_buffer_exists" purpose="Check if AudioBufferSourceNode.buffer attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_buffer_type" purpose="Check if the type of AudioBufferSourceNode.buffer is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loop_exists" purpose="Check if AudioBufferSourceNode.loop attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loop_type" purpose="Check if the type of AudioBufferSourceNode.loop is boolean" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopEnd_exists" purpose="Check if AudioBufferSourceNode.loopEnd attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopStart_exists" purpose="Check if AudioBufferSourceNode.loopStart attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_playbackRate_exists" purpose="Check if AudioBufferSourceNode.playbackRate attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_playbackRate_type" purpose="Check if the type of AudioBufferSourceNode.playbackRate is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_start_exists" purpose="Check if AudioBufferSourceNode.start method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_start_type" purpose="Check if the type of AudioBufferSourceNode.start is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_stop_exists" purpose="Check if AudioBufferSourceNode.stop method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_stop_type" purpose="Check if the type of AudioBufferSourceNode.stop is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createAnalyser_exists" purpose="Check if AudioContext.createAnalyser method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createAnalyser_type" purpose="Check if the type of AudioContext.createAnalyser is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBiquadFilter_exists" purpose="Check if AudioContext.createBiquadFilter method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBiquadFilter_type" purpose="Check if AudioContext.createBiquadFilter attribute is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_exists" purpose="Check if AudioContext.createBuffer method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_type" purpose="Check if the type of AudioContext.createBuffer is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBufferSource_exists" purpose="Check if AudioContext.createBufferSource method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBufferSource_type" purpose="Check if the type of AudioContext.createBufferSource is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelMerger_exists" purpose="Check if AudioContext.createChannelMerger method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelMerger_type" purpose="Check if the type of AudioContext.createChannelMerger is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelSplitter_exists" purpose="Check if AudioContext.createChannelSplitter method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelSplitter_type" purpose="Check if the type of AudioContext.createChannelSplitter is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createConvolver_exists" purpose="Check if AudioContext.createConvolver method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createConvolver_type" purpose="Check if the type of AudioContext.createConvolver is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDelay_exists" purpose="Check if AudioContext.createDelay method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDelay_type" purpose="Check if the type of AudioContext.createDelay is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDynamicsCompressor_exists" purpose="Check if AudioContext.createDynamicsCompressor method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDynamicsCompressor_type" purpose="Check if the type of AudioContext.createDynamicsCompressor is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createGain_exists" purpose="Check if AudioContext.createGain method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createGain_type" purpose="Check if the type of AudioContext.createGain is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createMediaElementSource_exists" purpose="Check if AudioContext.createMediaElementSource method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createMediaElementSource_type" purpose="Check if the type of AudioContext.createMediaElementSource is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createMediaStreamSource_exists" purpose="Check if AudioContext.createMediaStreamSource method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createMediaStreamSource_type" purpose="Check if the type of AudioContext.createMediaStreamSource is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
    </set>
    <set name="WebAudio2" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createOscillator_exists" purpose="Check if AudioContext.createOscillator method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createOscillator_type" purpose="Check if the type of AudioContext.createOscillator is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createPanner_exists" purpose="Check if AudioContext.createPanner method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createPanner_type" purpose="Check if the type of AudioContext.createPanner is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_exists" purpose="Check if AudioContext.createScriptProcessor method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_type" purpose="Check if the type of AudioContext.createScriptProcessor is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createWaveShaper_exists" purpose="Check if AudioContext.createWaveShaper method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createPeriodicWave_exists" purpose="Check if AudioContext.createPeriodicWave method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createPeriodicWave_type" purpose="Check if the type of AudioContext.createPeriodicWave is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_currentTime_exists" purpose="Check if AudioContext.currentTime attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_currentTime_readonly" purpose="Check if AudioContext.currentTime attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_currentTime_type" purpose="Check if the type of AudioContext.currentTime attribute is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_decodeAudioData_exists" purpose="Check if AudioContext.decodeAudioData method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_decodeAudioData_type" purpose="Check if the type of AudioContext.decodeAudioData is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_destination_exists" purpose="Check if AudioContext.destination attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_destination_readonly" purpose="Check if AudioContext.destination attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_destination_type" purpose="Check if the type of AudioContext.destination is AudioDestinationNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_listener_exists" purpose="Check if AudioContext.listener attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_listener_readonly" purpose="Check if AudioContext.listener attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_listener_type" purpose="Check if the type of AudioContext.listener is AudioListener" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_sampleRate_exists" purpose="Check if AudioContext.sampleRate attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_sampleRate_readonly" purpose="Check if AudioContext.sampleRate attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_sampleRate_type" purpose="Check if the type of AudioContext.sampleRate is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_dopplerFactor_exists" purpose="Check if AudioListener.dopplerFactor attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_dopplerFactor_type" purpose="Check if the type of AudioListener.dopplerFactor is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setOrientation_exists" purpose="Check if AudioListener.setOrientation method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setOrientation_type" purpose="Check if the type of AudioListener.setOrientation is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setPosition_exists" purpose="Check if AudioListener.setPosition method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setPosition_type" purpose="Check if the type of AudioListener.setPosition is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setVelocity_exists" purpose="Check if AudioListener.setVelocity method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setVelocity_type" purpose="Check if the type of AudioListener.setVelocity is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_speedOfSound_exists" purpose="Check if AudioListener.speedOfSound attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_speedOfSound_type" purpose="Check if the type of AudioListener.speedOfSound is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_exists" purpose="Check if AudioNode.connect method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_type" purpose="Check if the type of AudioNode.connect is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_context_exists" purpose="Check if AudioNode.context attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_context_readonly" purpose="Check if AudioNode.context attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_context_type" purpose="Check if the type of AudioNode.context is AudioContext" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_disconnect_exists" purpose="Check if AudioNode.disconnect method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_disconnect_type" purpose="Check if the type of AudioNode.disconnect is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfInputs_exists" purpose="Check if AudioNode.numberOfInputs attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfInputs_readonly" purpose="Check if AudioNode.numberOfInputs attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfInputs_type" purpose="Check if the type of AudioNode.numberOfInputs is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfOutputs_exists" purpose="Check if AudioNode.numberOfOutputs attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfOutputs_readonly" purpose="Check if AudioNode.numberOfOutputs attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_numberOfOutputs_type" purpose="Check if the type of AudioNode.numberOfOutputs is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_cancelScheduledValues_exists" purpose="Check if AudioParam.cancelScheduledValues method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_cancelScheduledValues_type" purpose="Check if the type of AudioParam.cancelScheduledValues is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_defaultValue_exists" purpose="Check if AudioParam.defaultValue attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_defaultValue_readonly" purpose="Check if AudioParam.defaultValue attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_defaultValue_type" purpose="Check if the type of AudioParam.defaultValue is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_exists" purpose="Check if AudioParam.exponentialRampToValueAtTime method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_type" purpose="Check if the type of AudioParam.exponentialRampToValueAtTime is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_linearRampToValueAtTime_exists" purpose="Check if AudioParam.linearRampToValueAtTime method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_linearRampToValueAtTime_type" purpose="Check if the type of AudioParam.linearRampToValueAtTime is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setTargetAtTime_exists" purpose="Check if AudioParam.setTargetAtTime method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setTargetAtTime_type" purpose="Check if the type of AudioParam.setTargetAtTime is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_inputBuffer_exists" purpose="Check if AudioProcessingEvent.inputBuffer attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_inputBuffer_readonly" purpose="Check if AudioProcessingEvent.inputBuffer attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_inputBuffer_type" purpose="Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_outputBuffer_exists" purpose="Check if AudioProcessingEvent.outputBuffer attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_outputBuffer_readonly" purpose="Check if AudioProcessingEvent.outputBuffer attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_outputBuffer_type" purpose="Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_frequency_exists" purpose="Check if BiquadFilterNode.frequency attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_frequency_readonly" purpose="Check if BiquadFilterNode.frequency attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_frequency_type" purpose="Check if the type of BiquadFilterNode.frequency is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_gain_exists" purpose="Check if BiquadFilterNode.gain attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_gain_readonly" purpose="Check if BiquadFilterNode.gain attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_gain_type" purpose="Check if the type of BiquadFilterNode.gain is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_getFrequencyResponse_exists" purpose="Check if BiquadFilterNode.getFrequencyResponse method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_getFrequencyResponse_type" purpose="Check if the type of BiquadFilterNode.getFrequencyResponse is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_Q_exists" purpose="Check if BiquadFilterNode.Q attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_Q_readonly" purpose="Check if BiquadFilterNode.Q attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_Q_type" purpose="Check if the type of BiquadFilterNode.Q is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
    </set>
    <set name="WebAudio3" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_exists" purpose="Check if BiquadFilterNode.type attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_type" purpose="Check if the type of BiquadFilterNode.type is string" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_buffer_exists" purpose="Check if ConvolverNode.buffer attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_buffer_type" purpose="Check if the type of ConvolverNode.buffer is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_normalize_exists" purpose="Check if ConvolverNode.normalize attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_normalize_type" purpose="Check if the type of ConvolverNode.normalize is boolean" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="delaynode_delayTime_exists" purpose="Check if DelayNode.delayTime attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="delaynode_delayTime_type" purpose="Check if the type of DelayNode.delayTime is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_attack_exists" purpose="Check if DynamicsCompressorNode.attack attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_attack_readonly" purpose="Check if DynamicsCompressorNode.attack attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_attack_type" purpose="Check if the type of DynamicsCompressorNode.attack is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_knee_exists" purpose="Check if DynamicsCompressorNode.knee attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_knee_readonly" purpose="Check if DynamicsCompressorNode.knee attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_knee_type" purpose="Check if the type of DynamicsCompressorNode.knee is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_ratio_exists" purpose="Check if DynamicsCompressorNode.ratio attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_ratio_readonly" purpose="Check if DynamicsCompressorNode.ratio attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_ratio_type" purpose="Check if the type of DynamicsCompressorNode.ratio is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_reduction_exists" purpose="Check if DynamicsCompressorNode.reduction attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_reduction_readonly" purpose="Check if DynamicsCompressorNode.reduction attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_reduction_type" purpose="Check if the type of DynamicsCompressorNode.reduction is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_release_exists" purpose="Check if DynamicsCompressorNode.release attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_release_readonly" purpose="Check if DynamicsCompressorNode.release attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_release_type" purpose="Check if the type of DynamicsCompressorNode.release is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_threshold_exists" purpose="Check if DynamicsCompressorNode.threshold attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_threshold_readonly" purpose="Check if DynamicsCompressorNode.threshold attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="dynamicscompressornode_threshold_type" purpose="Check if the type of DynamicsCompressorNode.threshold is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gainnode_gain_exists" purpose="Check if GainNode.gain attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gainnode_gain_readonly" purpose="Check if GainNode.gain attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gainnode_gain_type" purpose="Check if the type of GainNode.gain is object" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="offlineaudiocontext_oncomplete_exists" purpose="Check if OfflineAudioContext.oncomplete methodexists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="offlineaudiocontext_startRendering_exists" purpose="Check if OfflineAudioContext.startRendering method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_detune_exists" purpose="Check if OscillatorNode.detune attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_detune_readonly" purpose="Check if OscillatorNode.detune attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_detune_type" purpose="Check if the type of OscillatorNode.detune is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_frequency_exists" purpose="Check if OscillatorNode.frequency attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_frequency_readonly" purpose="Check if OscillatorNode.frequency attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_frequency_type" purpose="Check if the type of OscillatorNode.frequency is AudioParam" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_setPeriodicWave_base" purpose="Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_setPeriodicWave_type" purpose="Check if the type of OscillatorNode.setPeriodicWave is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_start_0" purpose="Check if OscillatorNode.start method executes immediately" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_0.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_start_after_stop" purpose="Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_after_stop.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_start_base" purpose="Check if OscillatorNode.start method executes well with a double type argument" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_start_type" purpose="Check if the type of OscillatorNode.start is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_stop_0" purpose="Check if OscillatorNode.stop method executes immediately" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_0.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_stop_exists" purpose="Check if OscillatorNode.stop method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_stop_type" purpose="Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_type_exists" purpose="Check if OscillatorNode.type attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_type_type" purpose="Check if the type of OscillatorNode.type is string" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneInnerAngle_exists" purpose="Check if PannerNode.coneInnerAngle attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneInnerAngle_type" purpose="Check if the type of PannerNode.coneInnerAngle is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterAngle_exists" purpose="Check if PannerNode.coneOuterAngle attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterAngle_type" purpose="Check if the type of PannerNode.coneOuterAngle is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterGain_exists" purpose="Check if PannerNode.coneOuterGain attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterGain_type" purpose="Check if the type of PannerNode.coneOuterGain is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_maxDistance_type" purpose="Check if the type of PannerNode.maxDistance is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_maxDistance_value" purpose="Check if the type of PannerNode.maxDistance is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_panningModel_exists" purpose="Check if PannerNode.panningModel attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_refDistance_type" purpose="Check if the type of PannerNode.refDistance is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_refDistance_value" purpose="Check if the type of PannerNode.refDistance is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_rolloffFactor_type" purpose="Check if the type of PannerNode.rolloffFactor is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_rolloffFactor_value" purpose="Check if the type of PannerNode.rolloffFactor is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setOrientation_exists" purpose="Check if PannerNode.setOrientation method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setOrientation_type" purpose="Check if the type of PannerNode.setOrientation is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setPosition_base" purpose="Check if PannerNode.setPosition method can change the position of a audio source" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setPosition_exists" purpose="Check if PannerNode.setPosition method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setPosition_type" purpose="Check if the type of PannerNode.setPosition is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setVelocity_type" purpose="Check if the type of PannerNode.setVelocity is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_bufferSize_exists" purpose="Check if ScriptProcessorNode.bufferSize attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_bufferSize_readonly" purpose="Check if ScriptProcessorNode.bufferSize attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_bufferSize_value" purpose="Check if the type of ScriptProcessorNode.bufferSize is long" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_onaudioprocess_base" purpose="Check if ScriptProcessorNode.onaudioprocess method can receive the processing event" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_exists" purpose="Check if WaveShaperNode.curve attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_type" purpose="Check if the type of WaveShaperNode.curve is Float32Array" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueAtTime_exists" purpose="Check if AudioParam.setValueAtTime method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueAtTime_type" purpose="Check if the type of AudioParam.setValueAtTime is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueCurveAtTime_exists" purpose="Check if AudioParam.setValueCurveAtTime method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueCurveAtTime_type" purpose="Check if the type of AudioParam.setValueCurveAtTime is function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_value_exists" purpose="Check if AudioParam.value attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_value_type" purpose="Check if the type of AudioParam.value is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
    </set>
    <set name="WebAudio4" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-06" purpose="Check that the gain_node can be stringified" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=6</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-08" purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (0)" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=8</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-09" purpose="AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=9</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-10" purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (1)" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=10</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-11" purpose="AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=11</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-12" purpose="AudioNode interface: gain_node must inherit property &quot;disconnect&quot; with the proper type (2)" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=12</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-idl-test-13" purpose="AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=13</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gain-node-test" onload_delay="15" purpose="Check that GainNode is properly scaling the gain" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-test.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
    </set>
    <set name="WebAudio5" type="js">
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_frequencyBinCount_value" purpose="Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_FINISHED_STATE_value" purpose="Check if AudioBufferSourceNode.FINISHED_STATE value is 3" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_FINISHED_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_start_after_stop" purpose="Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_after_stop.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_stop_twice" purpose="Check if an exception thrown when AudioBufferSourceNode.stop called twice" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_twice.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_three_numberOfChannels_upper" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_numberOfChannels_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_three_sampleRate_lower" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_lower.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_three_sampleRate_upper" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDelayNode_no_argument" purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_exception" purpose="Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createwavetable_exception" purpose="Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiodestinationnode_numberOfChannels_upper" purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiodestinationnode_numberOfChannels_zero" purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_input_exception" purpose="Check if AudioNode.connect method,throw exception if input param set out-of-bound value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_input_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_output_exception" purpose="Check if AudioNode.connect method,throw exception if output param setout-of-bound value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_disconnect_exception" purpose="Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_allvalues" purpose="Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allvalues.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_playbackState_basic" purpose="Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_playbackState_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_PLAYING_STATE_type" purpose="Check if OscillatorNode.PLAYING_STATE attribute is number type" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_PLAYING_STATE_value" purpose="Check if OscillatorNode.PLAYING_STATE attribute value is 2" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_type_allvalues" purpose="Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_allvalues.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_type_invalid_value" purpose="Check if OscillatorNode.type attribute can't be set to 'custom' value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_invalid_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_type_setwavetable_value" purpose="Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_setwavetable_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_greater" purpose="Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_greater.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_less" purpose="Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_less.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_zero" purpose="Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_zero.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_value_maxValue_upper" purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_maxValue_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_value_minValue_upper" purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_minValue_upper.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_allpass_phase" purpose="Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allpass_phase.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_bandpass_above" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_above.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_bandpass_below" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_below.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_bandpass_center" purpose="Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_center.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_highpass_above" purpose="Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_above.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_highpass_below" purpose="Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_below.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_highshelf_attenuation" purpose="Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_attenuation.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_highshelf_boost" purpose="Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_boost.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_lowpass_above" purpose="Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_above.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_lowpass_below" purpose="Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_below.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_lowshelf_attenuation" purpose="Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_attenuation.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_lowshelf_boost" purpose="Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_boost.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_notch_all" purpose="Check if BiquadFilterNode notch filter allows all frequencies through" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_all.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_notch_except" purpose="Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_except.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_peaking_attenuation" purpose="Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_attenuation.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_peaking_boost" purpose="Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_boost.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_fftSize_value" purpose="Check if AnalyserNode.fftSize attribute value is number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteFrequencyData_base" purpose="Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getByteTimeDomainData_base" purpose="Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_getFloatFrequencyData_base" purpose="Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_maxDecibels_value" purpose="Check if AnalyserNode.maxDecibels attribute value is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_minDecibels_value" purpose="Check if AnalyserNode.minDecibels attribute value is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="analysernode_smoothingTimeConstant_value" purpose="Check if AnalyserNode.smoothingTimeConstant attribute value is float" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_getChannelData_base" purpose="Check if the AudioBuffer.getChannelData returns a Float32Arrays value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_getChannelData_exception" purpose="Check if an exception will be thrown when the parameter is bigger than numberOfChannels" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exception.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_length_value" purpose="Check if the AudioBuffer.length is long value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_numberOfChannels_value" purpose="Check if the AudioBuffer.numberOfChannels is integer value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffer_sampleRate_value" purpose="Check if AudioBuffer.sampleRate attribute is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_buffer_value" purpose="Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loop_default_value" purpose="Check if the AudioBufferSourceNode.loop default value is false" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loop_value" purpose="Check if the AudioBufferSourceNode.loop is boolean value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopEnd_default_value" purpose="Check if AudioBufferSourceNode.loopEnd attribute default value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopEnd_type" purpose="Check if AudioBufferSourceNode.loopEnd attribute is type of number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopEnd_value" purpose="Check if AudioBufferSourceNode.loopEnd attribute set value 0.5" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopStart_default_value" purpose="Check if AudioBufferSourceNode.loopStart attribute default value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopStart_type" purpose="Check if AudioBufferSourceNode.loopStart attribute is type of number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_loopStart_value" purpose="Check if AudioBufferSourceNode.loopStart attribute set value 0.5" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_playbackRate_default_value" purpose="Check if AudioBufferSourceNode.playbackRate.value default value is 1" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_playbackState_initial_value" purpose="Check if the AudioBufferSourceNode.playbackState initial value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_initial_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_playbackState_start_value" purpose="Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_start_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_PLAYING_STATE_value" purpose="Check if AudioBufferSourceNode.PLAYING_STATE value is 2" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_PLAYING_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_SCHEDULED_STATE_value" purpose="Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_SCHEDULED_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_start_base" purpose="Check if an audio source plays when AudioBufferSourceNode.start method called" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_stop_base" purpose="Check if an audio source ends when AudioBufferSourceNode.stop method called" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiobuffersourcenode_UNSCHEDULED_STATE_value" purpose="Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_UNSCHEDULED_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createAnalyser_base" purpose="Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBiquadFilter_base" purpose="Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_three_base" purpose="Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBuffer_two_base" purpose="Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_two_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createBufferSource_base" purpose="Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelMerger_base" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelMerger_no_argument" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelSplitter_base" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createChannelSplitter_no_argument" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createConvolver_base" purpose="Check if AudioContext.createConvolver method return value type of is ConvolverNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDelayNode_base" purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createDynamicsCompressor_base" purpose="Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createGain_base" purpose="Check if AudioContext.createGain method,return value type of is GainNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createMediaElementSource_base" purpose="Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createOscillator_base" purpose="Check if AudioContext.createOscillator method return value type of is OscillatorNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createPanner_base" purpose="Check if AudioContext.createPanner method return value type of is PannerNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_base" purpose="Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_1024" purpose="Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_1024.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_16384" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_16384.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_2048" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_2048.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_256" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_256.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_4096" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_4096.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_512" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_512.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_bufferSize_8192" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_8192.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createScriptProcessor_three_parameters" purpose="Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_three_parameters.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createWaveShaper_base" purpose="Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createWaveShaper_type" purpose="Check if AudioContext.createWaveShaper is of type method" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_createwavetable_base" purpose="Check if AudioContext.createwavetable method return value type of is WaveTable" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiocontext_decodeAudioData_base" purpose="Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiodestinationnode_numberOfChannels_base" purpose="Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiodestinationnode_numberOfChannels_default_value" purpose="Check if AudioDestinationNode.numberOfChannels attribute default value is 2" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_dopplerFactor_default_value" purpose="Check if the AudioListener.dopplerFactor default value is 1" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_dopplerFactor_value" purpose="Check if the AudioListener.dopplerFactor is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setOrientation_base" purpose="Check if AudioListener.setOrientation can change the direction of the listener" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setPosition_base" purpose="Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_setVelocity_base" purpose="Check if AudioListener.setVelocity can set the velocity vector of the listener" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_speedOfSound_default_value" purpose="Check if the AudioListener.speedOfSound default value is 343.3" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audiolistener_speedOfSound_value" purpose="Check if the AudioListener.speedOfSound is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_output_input_no_argument" purpose="check if AudioNode.connect method,no throw exception if input and output param not set" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_input_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_three_base" purpose="check if AudioNode.connect method,no throw exception if with three param basic usage" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_three_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_connect_two_arguments" purpose="Check if AudioNode.connect method,no throw exception if input param not set" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_two_arguments.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_disconnect_base" purpose="Check if AudioNode.disconnect method,no throw exception if input param set 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audionode_disconnect_no_argument" purpose="Check if AudioNode.disconnect method,no throw exception if input param not set" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_no_argument.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_cancelScheduledValues_base" purpose="Check if AudioParam.cancelScheduledValues method executes well with float type parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_exponentialRampToValueAtTime_base" purpose="Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_linearRampToValueAtTime_base" purpose="Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setTargetAtTime_base" purpose="Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_inputBuffer_value" purpose="Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioprocessingevent_outputBuffer_value" purpose="Check if the AudioProcessingEvent.outBuffer is AudioBuffer value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_detune_basic" purpose="Check if BiquadFilterNode.detune attribute exists and type and readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_detune_basic.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_getFrequencyResponse_base" purpose="Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="biquadfilternode_type_default_value" purpose="Check if BiquadFilterNode.type attribute default value is 'lowpass'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_buffer_value" purpose="Check if the ConvolverNode.buffer is AudioBuffer value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_normalize_default_value" purpose="Check if the ConvolverNode.normalize default value is true" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="convolvernode_normalize_value" purpose="Check if the ConvolverNode.normalize is boolean value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="delaynode_delayTime_readonly" purpose="Check if DelayNode.delayTime attribute is readonly" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_readonly.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="delaynode_delayTime_value_default_value" purpose="Check if DelayNode.delayTime attribute default value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_value_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="gainnode_gain_value_default_value" purpose="Check if GainNode.gain.value default value is 1" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_value_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="offlineaudiocontext_oncomplete_type" purpose="Check if OfflineAudioContext.oncomplete attribute is object type" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="offlineaudiocontext_startRendering_type" purpose="Check if OfflineAudioContext.startRendering method is type of function" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_FINISHED_STATE_value" purpose="Check if OscillatorNode.FINISHED_STATE attribute value is 3" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_FINISHED_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_SCHEDULED_STATE_exists" purpose="Check if OscillatorNode.SCHEDULED_STATE constant exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_SCHEDULED_STATE_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_setWaveTable_exists" purpose="Check if OscillatorNode.setWaveTable function exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setWaveTable_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_start_exists" purpose="Check if OscillatorNode.start method exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_stop_base" purpose="Check if OscillatorNode.stop method executes well with double type parameter" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_stop_before_start" purpose="Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_before_start.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="oscillatornode_UNSCHEDULED_STATE_value" purpose="Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_UNSCHEDULED_STATE_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneInnerAngle_value" purpose="Check if the PannerNode.coneInnerAngle is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterAngle_value" purpose="Check if the PannerNode.coneOuterAngle is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_coneOuterGain_value" purpose="Check if the PannerNode.coneOuterGain is float value" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_distanceModel_default_value" purpose="Check if the PannerNode.distanceModel default value is 'inverse'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_distanceModel_exists" purpose="Check if PannerNode.distanceModel attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_distanceModel_exponential" purpose="Check if the PannerNode .distanceModel set value 'exponential'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exponential.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_distanceModel_inverse" purpose="Check if the PannerNode.distanceModel set value 'inverse'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_inverse.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_maxDistance_exists" purpose="Check if PannerNode.maxDistance attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_panningModel_default_value" purpose="Check if the PannerNode.panningModel default value is 1" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_default_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_panningModel_HRTF" purpose="Check if the PannerNode.panningModel attribute set value 'HRTF'" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_HRTF.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_panningModel_value" purpose="Check if the PannerNode.panningModel changed another value to position the audio in 3D space" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_refDistance_exists" purpose="Check if PannerNode.refDistance attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_rolloffFactor_exists" purpose="Check if PannerNode.rolloffFactor attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setOrientation_base" purpose="Check if the PannerNode.setOrientation can change the direction of the audio source" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setVelocity_base" purpose="Check if the PannerNode.setVelocity can set the velocity vector of the audio source" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="pannernode_setVelocity_exists" purpose="Check if PannerNode.setVelocity function exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_bufferSize_type" purpose="Check if ScriptProcessorNode.bufferSize attribute is type of number" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_type.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="scriptprocessornode_onaudioprocess_exists" purpose="Check if ScriptProcessorNode.onaudioprocess attribute exists" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_exists.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="waveshapernode_curve_value" purpose="Check if WaveShaperNode.curve attribute value is Float32Array object" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_value.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueAtTime_base" purpose="Check if AudioParam.setValueAtTime method executes well with two float parameters" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_setValueCurveAtTime_base" purpose="Check if AudioParam.setValueCurveAtTime method executes well with three parameters" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
      <testcase component="W3C_HTML5 APIs/Media/Web Audio API (Partial)" execution_type="auto" id="audioparam_value_base" purpose="Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue" result="N/A">
        <description>
          <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_base.html</test_script_entry>
        </description>
      <result_info><actual_result>N/A</actual_result><start /><end /><stdout /><stderr /></result_info></testcase>
    </set>
  </suite>
</test_definition>
